{"version":3,"sources":["../../config-wrap-start-default.js","bp-expanded/view/slider.js","bp-expanded/controller/slider-controller.js","bp-expanded/controller/shrink-controller.js","bp-expanded/controller/focus-controller.js","bp-expanded/controller/scroll-prevention.js","bp-expanded/view/tts-button.js","bp-expanded/view/transform-util.js","bp-expanded/view/transform-animate.js","bp-expanded/view/transform-hovers.js","bp-expanded/view/more-button.js","bp-expanded/bp-expanded.js","../../../../../../module-create.js"],"names":["sitecues","define","BP_CONST","state","helper","locale","updateThumbPosition","currZoom","thumbId","ZOOM_SLIDER_THUMB_ID","thumbElement","byId","panelSliderWidth","TRANSFORMS","PANEL","translateX","badgeSliderWidth","BADGE","isPanel","MIN_ZOOM","ZOOM_RANGE","percent","sliderWidth","LARGE_SLIDER_WIDTH","SMALL_SLIDER_WIDTH","offset","setAttribute","render","zoomLevel","updateZoomValue","sliderElement","ZOOM_SLIDER_BAR_ID","roundedZoom","Math","floor","zoomText","getLocalizedZoomValue","toString","setZoomLabel","text","ZOOM_VALUE_ID","firstChild","data","translate","ZOOM_STATE_LABELS","ZOOM_OFF","preZoomText","PRE_ZOOM","postZoomText","POST_ZOOM","translateNumber","ZOOM_CONST","platform","sliderView","zoomMod","animation","events","domEvents","isListeningToWindowMouseMoveEvents","isListeningToWindowMouseUpEvents","isInitialized","initialMouseDown","evt","moveThumb","addWindowMouseMoveListener","addWindowMouseUpListener","on","window","passive","finishZoomChanges","removeWindowMouseListeners","off","sliderThumbRect","getRectById","sliderRect","panelLeft","BP_CONTAINER_ID","left","sliderLeft","browser","isWebKit","width","FIREFOX_SLIDER_OFFSET","newPercent","clientX","newValue","jumpTo","isFirstBadgeUse","preventDefault","get","handleAButtonsPress","target","getEventTarget","isDecrease","id","SMALL_A_ID","changeFn","beginZoomDecrease","beginZoomIncrease","zoomStopRequested","init","getCompletedZoom","setThumbChangeListener","sliderTarget","ZOOM_SLIDER_ID","sliderThumb","smallA","largeA","LARGE_A_ID","zoomLabel","ZOOM_LABEL_ID","metric","view","nativeGlobal","mouseLeaveShrinkTimer","isListening","isZooming","MIN_DISTANCE","isExpandingOrExpanded","isSticky","cancelMouseLeaveShrinkTimer","clearTimeout","isButtonDown","mouseEvent","buttons","which","winMouseLeave","BADGE_ID","setTimeout","shrinkPanel","MOUSELEAVE_DELAY_SHRINK_BP","canShrinkFromMouseout","winMouseMove","isMouseOutsidePanel","SC_DEV","set","fireClickMetric","role","ancestor","getAriaOrNativeRole","parentNode","PanelClick","send","winMouseDown","isWithinContainer","onBlur","event","maybeShrinkPanel","isFromKeyboard","isShrinking","emit","BADGE_MODE","isSecondaryPanelRequested","disableSecondaryPanel","update","PanelClose","moreToggle","MORE_BUTTON_GROUP_ID","elem","getVisiblePanelRect","secondaryOutlineHeight","mainOutline","MAIN_OUTLINE_ID","rect","getRect","isSecondaryFeaturePanel","MORE_OUTLINE_ID","getBoundingClientRect","height","bottom","top","isMouseOutsideRect","minDistance","clientY","right","distance","targetId","MORE_BUTTON_CONTAINER_ID","toggleListeners","doTurnOn","addOrRemoveFn","refresh","shouldBeOn","willZoom","didZoom","willExpand","willShrink","didShrink","CORE_CONST","inlineStyle","savedDocumentFocus","tabbedElement","isListeningToClicks","keyCode","KEY_CODE","TAB","ENTER","ESCAPE","SPACE","LEFT","UP","RIGHT","DOWN","arrows","triggerKeys","TABBABLE","main","button-menu","tips","settings","feedback","about","DELTA_KEYS","getPanelContainer","clearPanelFocus","removeAttribute","hideFocus","focusShownOn","getElementToShowFocusOn","OUTLINE_ID","updateDOMFocusState","panelContainer","focus","ex","showFocus","isKeyboardMode","renderFocusOutline","listenToClicks","mainSVG","SVG_ID","bpContainer","addEventListener","clickToFocus","focusCard","cardId","tabElement","isFromLink","getAttribute","navigateInDirection","focusFirstItem","beginKeyHandling","document","activeElement","isBadgeFocused","getElementForFocusIndex","turnOnKeyboardMode","processKeyDown","endKeyHandling","body","blur","focusable","removeEventListener","getFocusedItem","focusForwarder","showFocusOn","scale","getFinalCoordinate","coord","hasAttribute","EXTRA_FOCUS_PADDING","clientPanelRect","clientFocusRect","focusOutline","getAllTabbableItemsInActiveCard","getItems","itemsSelector","panelSelector","getPanelName","nodeList","querySelectorAll","Array","prototype","slice","call","cardTabs","cardContentItems","concat","getAdjacentTabbableItem","all","current","direction","i","l","length","getFirstOrLastTabbableItem","navigateInCard","isFirstTimeInCard","currentItem","tabbableItemsInActiveCard","isFocusable","parseFloat","getComputedStyle","opacity","doStartFromTop","nextItem","tabbable","getTabbableItems","focusIndex","getFocusIndexForElement","numItems","isTabbableCardItem","className","indexOf","substr","forwardClickFocus","cancelEvent","simulateClick","element","createEvent","initEvent","dispatchEvent","onZoomKeyUp","require","performZoomSliderCommand","deltaSliderCommand","processKey","shrinkController","shiftKey","PanelFocusMove","item","localName","isModifiedKey","altKey","metaKey","ctrlKey","isFinishedScrollingElement","deltaY","parseInt","wheelDeltaY","scrollHeight","scrollTop","clientHeight","scrollBottom","scrollingDown","scrollingUp","shouldCancelScrollEvent","preventDocumentScroll","getBpContainer","pref","waveAnimationTimer","waveAnimationStepNum","localizedSpeechString","isListeningToEvents","isSpeechEnabled","toggleSpeech","audio","getTTSButtonElement","SPEECH_ID","getTTSLabelElement","SPEECH_LABEL_ID","ensureLabelFitsInPanel","ttsLabelElement","speechLabelWidth","setAlignment","alignment","getMaxLabelWidth","SPEECH_TARGET_ID","HEAD_ID","isEdge","fixTextAnchors","setTTSLabel","speechStateLabel","localizedState","node","createTextNode","removeChild","appendChild","updateTTSStateView","isEnabled","ttsButton","endWaveAnimation","enableDimmingHover","SPEECH_STATE_LABELS","ON","OFF","getWaves","WAVE_1_ID","WAVE_2_ID","WAVE_3_ID","nextWaveAnimationStep","waves","opacityData","ANIMATE_WAVES_OPACITY","waveNum","ANIMATE_WAVES_STEP_DURATION","beginHoverEffects","endHoverEffects","doEnable","isOn","fn","mouseTarget1","mouseTarget2","SHOULD_USE_CSS_TRANSFORM_IN_SVG","isMS","isSafari","isFirefox","getNumberFromString","str","match","shouldUseCss","SVGElement","setElemTransform","transformMap","useCss","transformString","getTransformString","transform","getStyleTransformMap","getTransformMap","getElemTransformMap","getAttrTransformMap","rotateValues","transformValues","hasTranslate","hasScale","hasScaleY","hasRotate","translateY","rotate","separator","split","scaleType","translateUnits","translateCSS","scaleCSS","rotateUnits","rotateCSS","objectUtil","transformUtil","requestFrameFn","requestAnimationFrame","cancelFrameFn","cancelAnimationFrame","timingFunctions","ease-out","t","linear","getFinalTransforms","toTransforms","fromTransforms","fromTransform","toTransform","finalTransforms","index","getOrigTransforms","elements","origTransforms","JsAnimation","duration","onFinish","timingFunctionName","animationStartTime","Date","now","timingFn","currAnimation","this","isRunning","onTick","tick","setDuration","animationId","newDuration","from","to","interim","time","min","finishNow","CssAnimation","onCustomFinish","initTransitionStyles","transition","forEach","css","transitionTimingFunction","initTransforms","doTweak","assign","addTransitionEndListener","transitionEndEvent","removeTransitionEndListener","currentTarget","stopPropagation","beginTransition","animateTransformLinear","value","animateTransforms","requestedTransforms","animationType","animate","isActivePanel","HOVER_ANIMATION_MS","savedHoverElems","uniqueId","animations","hoverState","getContainer","toggleHover","isActiveHover","origTransform","transformValue","onMouseOver","onMouseMove","x","y","toggleMouseListeners","willBeActive","storeAllHoverElements","addOrRemoveHovers","allHoverElems","cancelHovers","hoversOn","hoversOff","refreshHovers","hovers","abTest","userInputTimeoutId","doAlwaysShowButton","isAfterUserInput","moreButtonContainer","moreOpacityElem","BUTTON_ENTER_ANIMATION_DURATION","BUTTON_ENTER_ANIMATION_DURATION_INSTANT","NO_INPUT_TIMEOUT_DEFAULT","getHelpOrSecondaryPanel","doToggle","info","showHelp","secondary","toggleSecondaryPanel","onMouseClick","addMouseListeners","setSize","size","showMoreButton","useInstantTransition","BOTTOM_MOUSETARGET_ID","showMoreButtonSlowly","showMoreButtonInstantly","hideHelpButton","style","captureUserInput","showButtonIfNoUserInput","initButtonBehavior","noInputTimeoutMs","sliderController","focusController","scrollPrevention","moreButton","getFocusController","cursor"],"mappings":"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","file":"bp-expanded.js.map","sourcesContent":["\"use strict\";\n","// This module does two things:\n// 1. Request zoom changes after processing user input\n// 2. Listen for thumb change callbacks and repositions the thumb based on that\n//\n// --------------     Request zoom changes       ---------------      Thumb change callback    ---------------------\n// | User input |   ---------------------->      | Zoom module |     ---------------------->   |  Update thumb pos |\n// --------------                                ---------------                               ---------------------\n//\n// The thumb position only changes based on the thumb change callback!!\n// Effectively this means the zoom module needs is in control of the thumb position.\n\nsitecues.define('bp-expanded/view/slider',['run/bp/constants', 'run/bp/model/state', 'run/bp/helper', 'run/locale'],\n  function (BP_CONST, state, helper, locale) {\n\n  /*\n   *** Public methods ***\n   */\n\n  /**\n   * Reposition the zoom slider thumb on badge-panel state change or thumb change callback.\n   * This does not change the current zoom of the page -- it only changes the slider appearance.\n   */\n  function updateThumbPosition(currZoom) {\n    var thumbId = BP_CONST.ZOOM_SLIDER_THUMB_ID,\n      thumbElement = helper.byId(thumbId),\n      panelSliderWidth = BP_CONST.TRANSFORMS.PANEL[thumbId].translateX,\n      badgeSliderWidth = BP_CONST.TRANSFORMS.BADGE[thumbId].translateX,\n      isPanel = state.isPanel(),\n      MIN_ZOOM = 1,\n      ZOOM_RANGE = 2,\n\n      // Use a fake zoom amount the first time sitecues loads for badge view\n      // It just looks better -- making the slider look more interactive.\n      percent = (currZoom - MIN_ZOOM) / ZOOM_RANGE,\n      sliderWidth = isPanel ? BP_CONST.LARGE_SLIDER_WIDTH : BP_CONST.SMALL_SLIDER_WIDTH,\n      offset = (percent * sliderWidth) + (isPanel ? panelSliderWidth : badgeSliderWidth);\n\n    thumbElement.setAttribute('transform', 'translate(' + offset + ')');\n  }\n\n  // Update the slider thumb position on bp view updates because the entire slider changes size\n  // (it scales more horizontally than vertically)\n  function render(zoomLevel) {\n    updateThumbPosition(zoomLevel);\n    updateZoomValue(zoomLevel);\n  }\n\n  /*\n    Display new zoom value.\n   */\n  function updateZoomValue(currZoom) {\n    // 1. Set aria-valuenow for screen readers\n    // We do this when zoom is finished so that the screen reader is not trying to read every\n    // new value during an animation which would be way too verbose\n    var sliderElement = helper.byId(BP_CONST.ZOOM_SLIDER_BAR_ID),\n        roundedZoom = currZoom ? Math.floor((currZoom + 0.0999) * 10) / 10 : 1,\n        zoomText      = getLocalizedZoomValue(roundedZoom);\n\n    sliderElement.setAttribute('aria-valuenow', roundedZoom ? roundedZoom.toString() : 1);\n    sliderElement.setAttribute('aria-valuetext', zoomText);\n\n    // 2. Update the zoom label, which follows pattern \"1.3x\" (or just \"Zoom off\" for 1x)\n    function setZoomLabel(text) {\n      helper.byId(BP_CONST.ZOOM_VALUE_ID).firstChild.data = text;\n    }\n\n    setZoomLabel(zoomText);\n  }\n\n  /*\n   *** Private functions ***\n   */\n\n  function getLocalizedZoomValue(currZoom) {\n    if (currZoom === 1) {\n      // Zoom off\n      return locale.translate(BP_CONST.ZOOM_STATE_LABELS.ZOOM_OFF);\n    }\n\n    // 1.3x, etc.\n    var preZoomText = locale.translate(BP_CONST.ZOOM_STATE_LABELS.PRE_ZOOM),\n      postZoomText = locale.translate(BP_CONST.ZOOM_STATE_LABELS.POST_ZOOM);\n    return preZoomText + locale.translateNumber(currZoom, 2) + postZoomText;\n  }\n  return {\n    updateThumbPosition: updateThumbPosition,\n    render: render,\n    updateZoomValue: updateZoomValue\n  };\n\n});\n\n","/*\n Slider Controller\n */\nsitecues.define('bp-expanded/controller/slider-controller',[\n  'run/bp/constants',\n  'page/zoom/constants',\n  'run/bp/helper',\n  'run/platform',\n  'run/bp/model/state',\n  'bp-expanded/view/slider',\n  'page/zoom/zoom',\n  'page/zoom/animation',\n  'run/events',\n  'run/dom-events'\n],\n  function (BP_CONST,\n            ZOOM_CONST,\n            helper,\n            platform,\n            state,\n            sliderView,\n            zoomMod,\n            animation,\n            events,\n            domEvents) {\n\n  var isListeningToWindowMouseMoveEvents,\n    isListeningToWindowMouseUpEvents,\n    isInitialized;\n\n    /**\n   * Mouse is been pressed down on the slider:\n   * If the slider is ready for input, begin sending zoom new values for every mouse move.\n   */\n  function initialMouseDown(evt) {\n\n    if (!state.isPanel()) {\n      return; // Panel not ready for input\n    }\n\n    moveThumb(evt);\n\n    addWindowMouseMoveListener();\n    addWindowMouseUpListener();\n  }\n\n  function addWindowMouseMoveListener() {\n    if (!isListeningToWindowMouseMoveEvents) {\n      isListeningToWindowMouseMoveEvents = true;\n      // Be a capturing listener so that we get events before any especially \"creative\" page scripts\n      domEvents.on(window, 'mousemove', moveThumb, { passive: false });\n    }\n  }\n\n  function addWindowMouseUpListener() {\n    if (!isListeningToWindowMouseUpEvents) {\n      isListeningToWindowMouseUpEvents = true;\n      domEvents.on(window, 'mouseup', finishZoomChanges, { passive : false });\n    }\n  }\n\n\n  function removeWindowMouseListeners() {\n    if (isListeningToWindowMouseMoveEvents) {\n      domEvents.off(window, 'mousemove', moveThumb, { passive: false });\n      isListeningToWindowMouseMoveEvents = false;\n    }\n    if (isListeningToWindowMouseMoveEvents) {\n      domEvents.off(window, 'mouseup', finishZoomChanges, { passive : false });\n      isListeningToWindowMouseUpEvents = false;\n    }\n\n  }\n\n  // Mouse button was pressed down over slider and mouse cursor has moved\n  function moveThumb(evt) {\n\n    var\n      sliderThumbRect = helper.getRectById(BP_CONST.ZOOM_SLIDER_THUMB_ID),\n      sliderRect      = helper.getRectById(BP_CONST.ZOOM_SLIDER_BAR_ID),\n      panelLeft       = helper.getRectById(BP_CONST.BP_CONTAINER_ID).left,\n\n      // TODO Need comments what the browser differences are\n      sliderLeft      = platform.browser.isWebKit ? sliderRect.left + sliderThumbRect.width / 2 : panelLeft + BP_CONST.FIREFOX_SLIDER_OFFSET,\n      sliderWidth     = sliderRect.width - sliderThumbRect.width,\n      newPercent      = (evt.clientX - sliderLeft) / sliderWidth;\n\n    var newValue        = (newPercent * ZOOM_CONST.ZOOM_RANGE) + ZOOM_CONST.MIN_ZOOM;\n    zoomMod.jumpTo(newValue, { isFirstBadgeUse : isFirstBadgeUse() });\n\n    evt.preventDefault();\n\n  }\n\n  function isFirstBadgeUse() {\n    return state.get('isFirstBadgeUse');\n  }\n\n  /**\n   * Handler when click on small or large A.\n   */\n  function handleAButtonsPress(evt) {\n\n    var target = helper.getEventTarget(evt),\n        isDecrease   = (target.id === BP_CONST.SMALL_A_ID);\n\n    addWindowMouseUpListener();\n\n    var changeFn = isDecrease ? zoomMod.beginZoomDecrease : zoomMod.beginZoomIncrease;\n    changeFn(evt, { isFirstBadgeUse : isFirstBadgeUse() });\n  }\n\n  function finishZoomChanges() {\n    zoomMod.zoomStopRequested();\n    removeWindowMouseListeners();\n  }\n\n  function init() {\n    if (isInitialized) {\n      return;\n    }\n    isInitialized = true;\n\n    // Init zoom, add permanent listeners\n    zoomMod.init();\n    sliderView.render(zoomMod.getCompletedZoom());\n    animation.setThumbChangeListener(sliderView.updateThumbPosition);\n\n    // Zoom controls\n    var sliderTarget = helper.byId(BP_CONST.ZOOM_SLIDER_ID),\n        sliderThumb  = helper.byId(BP_CONST.ZOOM_SLIDER_THUMB_ID),\n        smallA       = helper.byId(BP_CONST.SMALL_A_ID),\n        largeA       = helper.byId(BP_CONST.LARGE_A_ID),\n        zoomLabel    = helper.byId(BP_CONST.ZOOM_LABEL_ID);\n\n    domEvents.on(sliderTarget, 'mousedown', initialMouseDown, { passive : false });\n    domEvents.on(sliderThumb, 'mousedown', initialMouseDown, { passive : false });\n    domEvents.on(smallA, 'mousedown', handleAButtonsPress);\n    domEvents.on(largeA, 'mousedown', handleAButtonsPress);\n    domEvents.on(zoomLabel, 'mousedown', handleAButtonsPress);\n\n    events.on('bp/will-shrink', finishZoomChanges);\n\n    // A zoom operation has been completed\n    // (We don't move the thumb here ... we do via setThumbChangeListener, because we get mid-animation changes that way)\n    events.on('zoom', sliderView.updateZoomValue);\n  }\n\n  return {\n    init: init\n  };\n});\n\n","/*\n Panel Controller\n */\nsitecues.define(\n  'bp-expanded/controller/shrink-controller',[\n    'run/bp/constants',\n    'run/bp/model/state',\n    'run/bp/helper',\n    'run/metric/metric',\n    'run/bp/view/view',\n    'run/events',\n    'run/dom-events',\n    'mini-core/native-global'\n  ],\n  function (\n    BP_CONST,\n    state,\n    helper,\n    metric,\n    view,\n    events,\n    domEvents,\n    nativeGlobal\n  ) {\n  'use strict';\n\n    var MIN_DISTANCE = 75, // Min distance before shrink\n      mouseLeaveShrinkTimer,  // How long we wait before shrinking BP from any mouseout (even only just barely outside panel)\n      isListening,\n      isZooming,\n      isExpandingOrExpanded = true,  // First time, we will already be expanded\n      isInitialized,\n      byId = helper.byId;\n\n    function isSticky() {\n      return state.get('isStickyPanel');\n    }\n\n    function cancelMouseLeaveShrinkTimer() {\n      clearTimeout(mouseLeaveShrinkTimer);\n      mouseLeaveShrinkTimer = 0;\n    }\n\n    // Return truthy value if a button is pressed on a mouse event.\n    // There are three properties for mouse buttons, and they all work differently -- both\n    // in terms of browsers and on mousemove events in particular.\n    function isButtonDown(mouseEvent) {\n      return (typeof mouseEvent.buttons === 'undefined' ? mouseEvent.which : mouseEvent.buttons);\n    }\n\n    // Don't close panel too quickly when the mouse leaves the window, because the panel\n    // may be near the window's edge and users with shaky hands may accidentally move mouse outside the window.\n    // We don't know anything about the mouse other than the fact that it left the window\n    function winMouseLeave(evt) {\n      if (helper.getEventTarget(evt).id === BP_CONST.BADGE_ID) {\n        mouseLeaveShrinkTimer = nativeGlobal.setTimeout(shrinkPanel, BP_CONST.MOUSELEAVE_DELAY_SHRINK_BP);\n      }\n    }\n\n    // return truthy value if mouseout should cause panel to close\n    function canShrinkFromMouseout() {\n      // Only allow close from hover if mouse was in panel once\n      return state.get('wasMouseInPanel');\n    }\n\n    function winMouseMove(evt) {\n\n      if (isButtonDown(evt)) {\n        return; // Slider in use or text selection, etc.\n      }\n\n      if (isMouseOutsidePanel(evt, MIN_DISTANCE)) {\n        if (SC_DEV && isSticky()) {\n          return;\n        }\n        if (canShrinkFromMouseout()) {\n          shrinkPanel();\n        }\n      }\n      else {\n        state.set('wasMouseInPanel', true);\n        cancelMouseLeaveShrinkTimer();\n      }\n    }\n\n    function fireClickMetric(evt) {\n      var ancestor = helper.getEventTarget(evt),\n        role,\n        id; // default name if we don't find a metric target\n      while (ancestor) {\n        role = helper.getAriaOrNativeRole(ancestor);\n        if (role !== 'presentation') {  // Do not fire metrics for items only included to help presentation, e.g. a shadow\n          id = ancestor.id;\n          if (id || id === BP_CONST.BP_CONTAINER_ID) {\n            break;\n          }\n        }\n        ancestor = ancestor.parentNode;\n      }\n\n      new metric.PanelClick({\n        target: id,\n        role: role,\n        isFirstBadgeUse: isFirstBadgeUse()\n      }).send();\n    }\n\n    function isFirstBadgeUse() {\n      return state.get('isFirstBadgeUse');\n    }\n\n    function winMouseDown(evt) {\n      if (SC_DEV && isSticky()) {\n        return;\n      }\n\n      if (isMouseOutsidePanel(evt, 0)) {\n        if (!state.get('isOpenedWithScreenReader')) {\n          // Any click anywhere outside of visible contents should close panel, no safe-zone needed\n          // Unless opened by a screen reader in virtual cursor mode, because JAWS sends spurious clicks outside of panel (SC-3211)\n          shrinkPanel();\n        }\n        return;\n      }\n\n      // Fire metrics only for clicks inside the panel\n      if (isWithinContainer(evt.target, BP_CONST.BP_CONTAINER_ID)) {\n        fireClickMetric(evt);\n      }\n    }\n\n    function onBlur(event) {\n      if (event.target === window) {\n        maybeShrinkPanel();\n      }\n    }\n    \n    function maybeShrinkPanel() {\n      if (SC_DEV && isSticky()) {\n        return;\n      }\n      shrinkPanel(true);\n    }\n\n    // @param isFromKeyboard -- optional, if truthy, then the shrink command is from the keyboard (e.g. escape key)\n    // bpc.processKeyDown, buttonPress, winMouseMove, winMouseDown call this function...\n    function shrinkPanel(isFromKeyboard) {\n      if (state.isShrinking()) {\n        return; // Not a panel or is already shrinking -- nothing to do\n      }\n\n      /*\n       bp/will-shrink sets and removes attributes used for screen readers.\n       bp/will-shrink removes mousedown, mousemove, and keydown event listeners bound to the window.\n       bp/will-shrink cancels badge->panel animation\n       bp/will-shrink removes click handler for toggling speech\n       */\n      events.emit('bp/will-shrink');\n\n      state.set('transitionTo', BP_CONST.BADGE_MODE);\n      state.set('isShrinkingFromKeyboard', isFromKeyboard);\n      state.set('isSecondaryPanel', false);\n      state.set('secondaryPanelTransitionTo', 0);\n\n      // If the secondary panel is active, deactivate it.\n      if (state.isSecondaryPanelRequested()) {\n        disableSecondaryPanel();\n      }\n\n      // Finally, begin the shrinking animation.\n      view.update();\n\n      new metric.PanelClose({\n        isFirstBadgeUse: isFirstBadgeUse()\n      }).send();\n    }\n\n    /*\n     Private functions.\n     */\n\n    /**\n     * disableSecondaryPanel is called when the panel is about to shrink.\n     * It is responsible for deactivating the secondary panel.\n     */\n    function disableSecondaryPanel() {\n\n      var moreToggle = helper.byId(BP_CONST.MORE_BUTTON_GROUP_ID);\n      moreToggle.setAttribute('aria-label', 'View more options');\n    }\n\n    function isWithinContainer(elem, id) {\n      while (elem) {\n        if (elem.id === id) {\n          return true;\n        }\n        elem = elem.parentNode;\n      }\n    }\n\n    function getVisiblePanelRect() {\n      var mainOutline = byId(BP_CONST.MAIN_OUTLINE_ID),\n        secondaryOutlineHeight,\n        rect = helper.getRect(mainOutline);\n      if (state.isSecondaryFeaturePanel()) {\n        secondaryOutlineHeight = byId(BP_CONST.MORE_OUTLINE_ID).getBoundingClientRect().height;\n        rect.height = secondaryOutlineHeight;\n        rect.bottom = rect.top + rect.height;\n      }\n      return rect;\n    }\n    function isMouseOutsideRect(evt, rect, minDistance) {\n      return evt.clientY > rect.bottom + minDistance || evt.clientY < rect.top - minDistance ||\n        evt.clientX > rect.right + minDistance || evt.clientX < rect.left - minDistance;\n    }\n\n    function isMouseOutsidePanel(evt, distance) {\n      var target = helper.getEventTarget(evt),\n        targetId = target.id;\n      if (targetId !== BP_CONST.BP_CONTAINER_ID && targetId !== BP_CONST.BADGE_ID &&\n        !isWithinContainer(target, BP_CONST.MORE_BUTTON_CONTAINER_ID)) {\n        return isMouseOutsideRect(evt, getVisiblePanelRect(), distance);\n      }\n    }\n\n    // These listeners are temporary – only bound when the panel is open.\n    // Good for performance – it prevents extra code from being run on every mouse move/click when we don't need it\n    function toggleListeners(doTurnOn) {\n      var addOrRemoveFn = doTurnOn ? domEvents.on : domEvents.off;\n      addOrRemoveFn(window, 'mousedown', winMouseDown);\n\n      if (!state.get('isOpenedWithScreenReader')) {\n        // Mousemove can close panel after mouseout, unless opened with a screen reader\n        addOrRemoveFn(window, 'mousemove', winMouseMove);\n      }\n      addOrRemoveFn(window, 'mouseout', winMouseLeave);\n      addOrRemoveFn(window, 'blur', onBlur);\n      addOrRemoveFn(window, 'resize', maybeShrinkPanel); // Don't allow user to resize window in middle of using panel, leads to layout issues\n    }\n\n    function refresh() {\n      var shouldBeOn = !isZooming && isExpandingOrExpanded;\n      if (shouldBeOn !== isListening) {\n        isListening = shouldBeOn;\n        toggleListeners(isListening);\n      }\n    }\n\n    function willZoom() {\n      isZooming = true;\n      refresh();\n    }\n\n    function didZoom() {\n      isZooming = false;\n      refresh();\n    }\n\n    function willExpand() {\n      isExpandingOrExpanded = true;\n      refresh();\n    }\n\n    function willShrink() {\n      isExpandingOrExpanded = false;\n      refresh();\n    }\n\n    function didShrink() {\n      state.set('isShrinkingFromKeyboard', false);\n    }\n\n    function init() {\n      if (isInitialized) {\n        return;\n      }\n      isInitialized = true;\n\n      events.on('info/did-show', shrinkPanel);\n      events.on('bp/will-expand', willExpand);\n      events.on('bp/will-shrink', willShrink);\n      events.on('bp/did-shrink', didShrink);\n      events.on('zoom/begin', willZoom);\n      events.on('zoom', didZoom);\n\n      toggleListeners(true);\n    }\n\n    return {\n      init: init,\n      shrinkPanel: shrinkPanel\n    };\n  });\n\n","/* Focus Controller */\nsitecues.define(\n  'bp-expanded/controller/focus-controller',[\n    'run/bp/constants',\n    'run/bp/model/state',\n    'run/bp/helper',\n    'run/metric/metric',\n    'run/bp/view/view',\n    'run/events',\n    'run/constants',\n    'mini-core/native-global',\n    'run/inline-style/inline-style'\n  ],\n  function (\n    BP_CONST,\n    state,\n    helper,\n    metric,\n    view,\n    events,\n    CORE_CONST,\n    nativeGlobal,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var savedDocumentFocus,\n    tabbedElement,\n    isInitialized,\n    isListeningToClicks,\n    byId   = helper.byId,\n    keyCode = CORE_CONST.KEY_CODE,\n    TAB    = keyCode.TAB,\n    ENTER  = keyCode.ENTER,\n    ESCAPE = keyCode.ESCAPE,\n    SPACE  = keyCode.SPACE,\n    LEFT   = keyCode.LEFT,\n    UP     = keyCode.UP,\n    RIGHT  = keyCode.RIGHT,\n    DOWN   = keyCode.DOWN,\n    arrows = [\n      UP,\n      DOWN,\n      LEFT,\n      RIGHT\n    ],\n    triggerKeys = [\n      ENTER,\n      SPACE\n    ],\n\n    TABBABLE = {    // IMPORTANT: remove 'scp-' prefix -- it gets added in by the code\n      'main': [\n        'zoom-slider-bar',\n        'speech',\n        'more-button-group'\n      ],\n      'button-menu': [\n        'tips-button',\n        'settings-button',\n        'feedback-button',\n        'about-button',\n        'more-button-group'\n      ],\n      'tips':[\n        '$',   // Current card contents\n        'settings-label',\n        'feedback-label',\n        'about-label',\n        'more-button-group'\n      ],\n      'settings':[\n        '$',   // Current card contents\n        'tips-label',\n        'feedback-label',\n        'about-label',\n        'more-button-group'\n      ],\n      'feedback':[\n        'feedback-textarea',\n        'stars-1',\n        'stars-2',\n        'stars-3',\n        'stars-4',\n        'stars-5',\n        'feedback-send-link',\n        'feedback-thanks',\n        'tips-label',\n        'settings-label',\n        'about-label',\n        'more-button-group'\n      ],\n      'about':[\n        'about-sitecues-link',\n        'about-rate-button',\n        'tips-label',\n        'settings-label',\n        'feedback-label',\n        'more-button-group'\n      ]\n    },\n    DELTA_KEYS = {};\n\n  DELTA_KEYS[LEFT]  = -1;\n  DELTA_KEYS[UP]    = 1;\n  DELTA_KEYS[RIGHT] = 1;\n  DELTA_KEYS[DOWN]  = -1;\n\n  function getPanelContainer() {\n    return byId(BP_CONST.BP_CONTAINER_ID);\n  }\n\n  // Clear the visual focus rectangle and current focus state\n  function clearPanelFocus() {\n\n    if (tabbedElement) {\n      tabbedElement.removeAttribute('data-show-focus');\n      tabbedElement.removeAttribute('tabindex');\n    }\n\n    hideFocus();\n\n    tabbedElement = null;\n\n    getPanelContainer().removeAttribute('aria-activedescendant');\n\n  }\n\n  // Hide focus but keep focus state\n  function hideFocus() {\n    var focusShownOn = getElementToShowFocusOn();\n    if (focusShownOn) {\n      focusShownOn.removeAttribute('data-show-focus');\n    }\n    byId(BP_CONST.OUTLINE_ID).removeAttribute('data-show');\n  }\n\n  function updateDOMFocusState() {\n    if (!tabbedElement) {\n      return;\n    }\n    var panelContainer = getPanelContainer();\n    panelContainer.setAttribute('aria-activedescendant', tabbedElement.id);\n    tabbedElement.setAttribute('focusable', true);\n    tabbedElement.setAttribute('tabindex', 0);\n\n    try {\n      // Allow real focus if item/browser allows it:\n      // - In Firefox, for now this will only work on HTML elements\n      // - In other browsers, anything with focusable/tabindex can be focused\n      tabbedElement.focus();\n    }\n    catch (ex) {\n      panelContainer.focus();\n    }\n  }\n\n  function showFocus() {\n\n    updateDOMFocusState();\n\n    if (!tabbedElement || !isKeyboardMode()) {\n      // No focus to show or not in keyboard mode\n      hideFocus();\n    }\n    else {\n      // Show focus\n      if (tabbedElement.id === BP_CONST.MORE_BUTTON_GROUP_ID) {\n        events.emit('bp/did-focus-more-button');\n      }\n\n      renderFocusOutline();\n    }\n  }\n\n  function listenToClicks() {\n\n    if (!isListeningToClicks) {\n      isListeningToClicks = true;\n      var mainSVG = byId(BP_CONST.SVG_ID),\n        bpContainer = byId(BP_CONST.BP_CONTAINER_ID);\n      mainSVG.addEventListener('mousedown', clickToFocus);\n      bpContainer.addEventListener('mousedown', clickToFocus);\n    }\n  }\n\n  function isKeyboardMode() {\n    return state.get('isKeyboardMode');\n  }\n\n  function focusCard(cardId, tabElement, isFromLink) {\n    if (isKeyboardMode() && tabElement) {\n      clearPanelFocus();\n      tabbedElement = tabElement;\n      if (isFromLink) {\n        // When jumping directly to tab, navigate to the first content inside the tab\n        while (tabbedElement && tabbedElement.getAttribute('role') === 'tab') {\n          navigateInDirection(1);\n        }\n      }\n      showFocus();\n    }\n  }\n\n  function focusFirstItem() {\n    if (isKeyboardMode()) {\n      nativeGlobal.setTimeout(function() {\n        navigateInDirection(1, true);\n      }, 0);\n    }\n  }\n\n  /*\n   If the badge was focused, the panel will go into focus mode when it's entered.\n   In focus mode, we show the following:\n   - A keyboard focus outline so the user knows where they are tabbing\n   - A close button in case the user doesn't realize Escape key will close\n   - The \"more button\" is shown immediately rather than on a timer, so that the tabbing cycle doesn't suddenly change in the middle of tabbing\n   We also save the last focus so that we can restore it when the panel closes.\n   */\n  function beginKeyHandling() {\n\n    // Save the last focus so that we can restore it when panel closes\n    savedDocumentFocus = document.activeElement;\n\n    // If the badge is focused we will turn keyboard mode on for the panel\n    var isBadgeFocused = savedDocumentFocus && savedDocumentFocus.id === BP_CONST.BADGE_ID;\n\n    clearPanelFocus();\n\n    if (isBadgeFocused) {\n\n      // TODO can we remove this ? It's set elsewhere. Try with a screen reader.\n      //badgeElement.setAttribute('aria-expanded', 'true');\n\n      // Turn keyboard mode on for the panel, and start focus on the first item\n      tabbedElement = getElementForFocusIndex(0);\n      turnOnKeyboardMode();\n      showFocus();\n    }\n\n    // Take the focus whether or not we're in focus mode,\n    // in case the user presses tab or Escape to turn on keyboard mode after expansion\n    getPanelContainer().focus();\n\n    window.addEventListener('keydown', processKeyDown, true);\n  }\n\n  function endKeyHandling() {\n    // If the BP_CONTAINER has focus AND the document.body was the previous\n    // focused element, blur the BP_CONTAINER focus.\n    //\n    // If the BP_CONTAINER has focus AND the document.body was NOT the previous\n    // focused element, focus the previously focused element.\n    clearPanelFocus();\n    if ((!savedDocumentFocus || savedDocumentFocus === document.body) && 'blur' in document.activeElement) {\n      document.activeElement.blur();\n    } else {\n      var focusable = savedDocumentFocus || ('focus' in document ? document : document.body);\n      //TODO: Focusing is broken in Edge, figure out the root cause of this\n      if (typeof focusable.focus === 'function') {\n        focusable.focus();\n      }\n    }\n\n    window.removeEventListener('keydown', processKeyDown, true);\n  }\n\n  function turnOnKeyboardMode() {\n    state.set('isKeyboardMode', true);\n    listenToClicks();\n    view.update();\n  }\n\n  function getFocusedItem() {\n    // User has tabbed: we're in keyboard, mode, so the focused item is tabbedElement.\n    // User has NOT tabbed: the focused item is where they last clicked -- document.activeElement\n    return tabbedElement || document.activeElement;\n  }\n\n  function getElementToShowFocusOn() {\n    if (tabbedElement) {\n      var focusForwarder = tabbedElement.getAttribute('data-visible-focus-on');\n      return focusForwarder ? byId(focusForwarder) : tabbedElement;\n    }\n  }\n\n  function renderFocusOutline() {\n    // @data-visible-focus-on = id of element to show focus on\n    // @data-show-focus = focus to be shown on this element\n    // @data-own-focus-ring = element will show it's own focus ring\n\n    var showFocusOn = getElementToShowFocusOn(),\n      scale = state.get('scale');\n\n    function getFinalCoordinate(coord) {\n      return (coord / scale) + 'px';\n    }\n\n    showFocusOn.setAttribute('data-show-focus', '');\n    if (!showFocusOn.hasAttribute('data-own-focus-ring')) {\n      // Show focus outline\n      var EXTRA_FOCUS_PADDING = 1,\n        clientPanelRect = helper.getRect(getPanelContainer()),  // Focus rect is positioned relative to this\n        clientFocusRect = helper.getRect(showFocusOn),\n        focusOutline = byId(BP_CONST.OUTLINE_ID);\n\n      focusOutline.setAttribute('data-show', true);\n      inlineStyle.set(focusOutline, {\n        width  : getFinalCoordinate(clientFocusRect.width + 2 * EXTRA_FOCUS_PADDING),\n        height : getFinalCoordinate(clientFocusRect.height + 2 * EXTRA_FOCUS_PADDING),\n        top    : getFinalCoordinate(clientFocusRect.top - EXTRA_FOCUS_PADDING - clientPanelRect.top),\n        left   : getFinalCoordinate(clientFocusRect.left - EXTRA_FOCUS_PADDING - clientPanelRect.left)\n      });\n    }\n  }\n\n  function getAllTabbableItemsInActiveCard() {\n    function getItems(itemsSelector) {\n      var panelSelector = '#scp-' + state.getPanelName() + '>',\n        nodeList = document.querySelectorAll(panelSelector + itemsSelector);\n      return Array.prototype.slice.call(nodeList);  // Convert to array\n    }\n    var cardTabs = getItems('.scp-card-chooser>sc-link'),\n      cardContentItems = getItems('.scp-active .scp-tabbable:not([data-show=\"false\"])');\n\n    return cardTabs.concat(cardContentItems);\n  }\n\n  function getAdjacentTabbableItem (all, current, direction) {\n    for (var i = 0, l = all.length; i < l; i++) {\n      if (all[i] === current) {\n        return all[i + direction];\n      }\n    }\n  }\n\n  function getFirstOrLastTabbableItem(all, direction) {\n    // First or last dynamic tabbable item.\n    return all[direction > 0 ? 0 : all.length - 1];\n  }\n\n  function navigateInCard(direction, isFirstTimeInCard, currentItem) {\n    // All items in the active card.\n    var tabbableItemsInActiveCard = getAllTabbableItemsInActiveCard();\n\n    // If there are none, skip to the next item.\n    // The item adjacent to the current focused item, depending on what direction user tabs.\n    return isFirstTimeInCard ?\n      getFirstOrLastTabbableItem(tabbableItemsInActiveCard, direction) :\n      getAdjacentTabbableItem(tabbableItemsInActiveCard, currentItem, direction);\n  }\n\n  function isFocusable(elem) {\n    return elem &&\n      elem.getAttribute('aria-disabled') !== 'true' &&\n      parseFloat(getComputedStyle(elem).opacity) > 0.1;\n  }\n\n  function navigateInDirection(direction, doStartFromTop) {\n\n    if (!state.isPanel()) {\n      return;\n    }\n\n    hideFocus();\n\n    var tabbable = getTabbableItems(),\n      focusIndex = doStartFromTop ? -1 : getFocusIndexForElement(getFocusedItem()),\n      isFirstTimeInCard = tabbable[focusIndex] !== '$',\n      numItems = tabbable.length,\n      nextItem;\n\n    while (true) {\n      nextItem = null;\n      if (tabbable[focusIndex] === '$') {\n        nextItem = navigateInCard(direction, isFirstTimeInCard, tabbedElement);\n        isFirstTimeInCard = false;\n      }\n      if (!nextItem) {\n        focusIndex = focusIndex + direction;\n        if (focusIndex < 0) {\n          // If shift+tab from the first item, go to the last\n          focusIndex = numItems - 1;\n        } else if (focusIndex >= numItems) {\n          // If tab past the last item, go to the first\n          focusIndex = 0;\n        }\n\n        nextItem = getElementForFocusIndex(focusIndex);\n      }\n\n      tabbedElement = nextItem;\n\n      // Skip disabled items such as the prev arrow which is turned off at first\n      if (isFocusable(nextItem)) {\n        break;\n      }\n    }\n\n    showFocus();\n  }\n\n  function getTabbableItems() {\n    return TABBABLE[state.getPanelName()];\n  }\n\n  function getElementForFocusIndex(focusIndex) {\n    return byId('scp-' + getTabbableItems()[focusIndex]);\n  }\n\n  function isTabbableCardItem(elem) {\n    var className = elem.getAttribute('class');\n    return className && className.indexOf('scp-tabbable') >= 0;\n  }\n\n  function getFocusIndexForElement(elem) {\n    // Remove scp- from id and find new index\n    if (elem) {\n      var tabbable = getTabbableItems(),\n        focusIndex = tabbable.indexOf(elem.id.substr(4));\n      // If can't find the element in the tabbable items, it means it's in card content\n      if (focusIndex < 0 && isTabbableCardItem(elem)) {\n        // Not one of the main focused items listed in TABBABLE, try to see if it's a focusable card item\n        focusIndex = tabbable.indexOf('$');\n      }\n      return focusIndex;\n    }\n\n    return -1;\n  }\n\n  function clickToFocus(event) {\n    var target = state.isPanel() && helper.getEventTarget(event);\n    clearPanelFocus();\n    while (target && target.id !== BP_CONST.BADGE_ID && target.id !== BP_CONST.BP_CONTAINER_ID) {\n      var forwardClickFocus = target.getAttribute('aria-controls');\n      if (forwardClickFocus) {\n        // Clicking slider thumb should focus slider bar\n        target = byId(forwardClickFocus);\n      }\n      if (getFocusIndexForElement(target) >= 0) {\n        tabbedElement = target;\n        break;\n      }\n      target = target.parentNode;\n    }\n\n    if (tabbedElement) {\n      showFocus();\n    }\n    else {\n      // Clicked in whitespace, on collapsed badge or somewhere that can't take focus\n      // Prevent default handling and thus prevent focus\n      // User may think they need to click in badge\n      // We don't want to take focus that way -- only via tabbing or from screen reader use\n      return helper.cancelEvent(event);\n    }\n  }\n\n  // If it was always HTML we could just use elem.click()\n  function simulateClick(element) {\n    var event = document.createEvent('MouseEvents');\n    // If you need clientX, clientY, etc., you can call\n    // initMouseEvent instead of initEvent\n    event.initEvent('click', true, true);\n    element.dispatchEvent(event);\n\n    new metric.PanelClick({ target: element.id, role: helper.getAriaOrNativeRole(element) }).send();\n  }\n\n  function onZoomKeyUp() {\n    require(['page/zoom/zoom'], function(zoomMod) {\n      zoomMod.zoomStopRequested();\n    });\n  }\n\n  function performZoomSliderCommand(keyCode, evt) {\n    var deltaSliderCommand = DELTA_KEYS[keyCode];\n    if (deltaSliderCommand) {\n      require(['page/zoom/zoom'], function(zoomMod) {\n        window.removeEventListener('keyup', onZoomKeyUp); // Zoom module will listen from here\n        zoomMod.init();\n        if (deltaSliderCommand > 0) {\n          zoomMod.beginZoomIncrease(evt);\n        }\n        else {\n          zoomMod.beginZoomDecrease(evt);\n        }\n      });\n\n      window.addEventListener('keyup', onZoomKeyUp);  // Capture key up that may happen while waiting for zoom module\n    }\n  }\n\n  // Process key down and return true if key should be allowed to perform default behavior\n  function processKey(evt) {\n    var keyCode = evt.keyCode;\n\n    // Escape = close\n    if (keyCode === ESCAPE) {\n      if (state.isSecondaryPanelRequested()) {\n        simulateClick(byId(BP_CONST.MORE_BUTTON_GROUP_ID));\n      }\n      else {\n        require(['bp-expanded/controller/shrink-controller'], function (shrinkController) {\n          shrinkController.shrinkPanel(true);\n        });\n      }\n      return;\n    }\n\n    // Tab navigation\n    if (keyCode === TAB) {\n      turnOnKeyboardMode();\n      navigateInDirection(evt.shiftKey ? -1 : 1);\n      new metric.PanelFocusMove().send();\n      return;\n    }\n\n\n    // Perform widget-specific command\n    // Can't use evt.target because in the case of SVG it sometimes only has fake focus (some browsers can't focus SVG elements)\n    var item = getFocusedItem();\n\n    if (item) {\n      if (item.localName === 'textarea' || item.localName === 'input') {\n        return true;\n      }\n      if (item.id === BP_CONST.ZOOM_SLIDER_BAR_ID) {\n        performZoomSliderCommand(keyCode, evt);\n      }\n      else {\n        if (triggerKeys.indexOf(keyCode) > -1) {\n          simulateClick(item);\n        }\n      }\n    }\n\n    if (triggerKeys.indexOf(keyCode) > -1) {\n      //Don't allow default behavior for enter and space keys while the panel is open\n      return;\n    }\n\n    if (arrows.indexOf(keyCode) > -1) {\n      //Prevent window from scrolling on arrow keys\n      return;\n    }\n\n    // else fall through to native processing of keystroke\n    return true;\n  }\n\n  function isModifiedKey(evt) {\n    return evt.altKey || evt.metaKey || evt.ctrlKey;\n  }\n\n  function processKeyDown(evt) {\n    if (isModifiedKey(evt) || !state.isPanel()) {\n      return;\n    }\n\n    if (!processKey(evt)) {\n      evt.preventDefault();\n      return false;\n    }\n  }\n\n  function init() {\n    if (isInitialized) {\n      return;\n    }\n    isInitialized = true;\n\n    events.on('bp/will-toggle-feature', hideFocus);\n    events.on('bp/did-open-subpanel', focusFirstItem);\n    events.on('bp/did-show-card', focusCard);\n    beginKeyHandling(); // First time badge expands\n    events.on('bp/will-expand', beginKeyHandling);\n    events.on('bp/will-shrink', endKeyHandling);\n    events.on('bp/did-expand', showFocus);\n\n  }\n\n  return {\n    init: init,\n    getFocusedItem: getFocusedItem,\n    navigateInDirection: navigateInDirection,\n    processKey: processKey\n  };\n\n});\n\n","// We do not want the mouse wheel to scroll the document when it's over the BP\nsitecues.define('bp-expanded/controller/scroll-prevention',['run/events', 'run/bp/helper', 'run/bp/constants'], function(events, helper, BP_CONST) {\n\n  var isInitialized;\n\n  // Return truthy if document will be scrolled\n  // This occurs if the current element is already scrolled all the way in this direction\n  function isFinishedScrollingElement(elem, event) {\n    var\n      deltaY = parseInt(event.deltaY || -event.wheelDeltaY),    // parseInt() sanitizes by converting strange -0 value to 0\n      scrollHeight     = elem.scrollHeight,    // The total height of the scrollable area\n      scrollTop        = elem.scrollTop,       // Pixel height of invisible area above element (what has been scrolled)\n      clientHeight     = elem.clientHeight,    // The height of the element in the window\n      scrollBottom     = scrollHeight-scrollTop-clientHeight, // The pixels height invisible area below element (what is left to scroll)\n      scrollingDown    = deltaY > 0,           // If the user is scrolling downwards\n      scrollingUp      = deltaY < 0;           // If the user is scrolling upwards\n\n    return (scrollingDown && deltaY > scrollBottom) ||   // Already at bottom\n      (scrollingUp && -deltaY > scrollTop) ||   // Already at top\n      !deltaY; // Horizontal scrolling will always scroll document\n  }\n\n  function shouldCancelScrollEvent(evt) {\n    var target = helper.getEventTarget(evt);\n    if (!target.hasAttribute('data-allow-scroll')) {\n      // Most elements in BP don't allow scrolling at all\n      return true;\n    }\n\n    // In an element that needs scrolling such as textarea\n    if (isFinishedScrollingElement(target, evt)) {\n      // Finished scrolling element -- scroll event will propagate up unless we cancel it.\n      // Unfortunately you cannot just stopPropagation() on a scroll event to prevent it from scrolling the parent\n      return true;\n    }\n  }\n\n  // Don't scroll document while BP is open\n  function preventDocumentScroll(evt) {\n    if (shouldCancelScrollEvent(evt)) {\n      return helper.cancelEvent(evt);\n    }\n  }\n\n  function getBpContainer() {\n    return helper.byId(BP_CONST.BP_CONTAINER_ID);\n  }\n\n  function willExpand() {\n    getBpContainer().addEventListener('wheel', preventDocumentScroll);\n  }\n\n  function willShrink() {\n    getBpContainer().removeEventListener('wheel', preventDocumentScroll);\n  }\n\n  function init() {\n    if (isInitialized) {\n      return;\n    }\n    isInitialized = true;\n\n    willExpand(); // First time\n    events.on('bp/will-expand', willExpand);\n    events.on('bp/will-shrink', willShrink);\n  }\n\n  return {\n    init: init\n  };\n});\n\n","sitecues.define(\n  'bp-expanded/view/tts-button',[\n    'run/bp/constants',\n    'run/bp/helper',\n    'run/bp/model/state',\n    'run/locale',\n    'run/conf/preferences',\n    'run/events',\n    'run/platform',\n    'mini-core/native-global',\n    'run/inline-style/inline-style'\n  ],\n  function (\n    BP_CONST,\n    helper,\n    state,\n    locale,\n    pref,\n    events,\n    platform,\n    nativeGlobal,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var\n    waveAnimationTimer,\n    waveAnimationStepNum,\n    localizedSpeechString,\n    isInitialized,\n    isSpeechEnabled = pref.get('ttsOn'),\n    isListeningToEvents;\n\n  function toggleSpeech() {\n    require(['audio/audio'], function(audio) {\n      // We do a timeout here so that this occurs after any key handlers that stop speech\n      // Otherwise, the same Enter/space press that starts speaking the cue could immediately silence the same cue\n      nativeGlobal.setTimeout(audio.toggleSpeech, 0);\n    });\n  }\n\n  function getTTSButtonElement() {\n    return helper.byId(BP_CONST.SPEECH_ID);\n  }\n\n  function getTTSLabelElement() {\n    return helper.byId(BP_CONST.SPEECH_LABEL_ID);\n  }\n\n  function ensureLabelFitsInPanel() {\n\n    var\n      ttsLabelElement = getTTSLabelElement(),\n      speechLabelWidth = ttsLabelElement.getBoundingClientRect().width;\n\n    function setAlignment(alignment) {\n      // alignment is 'start' for left justification, and 'end' for right justification\n      ttsLabelElement.setAttribute('text-anchor', alignment);\n      ttsLabelElement.setAttribute('x', ttsLabelElement.getAttribute('data-x-' + alignment));\n    }\n\n    function getMaxLabelWidth() {\n      // The right side of the speech target, which is almost at the panel's edge\n      // minus the visible left side of the speech button\n      return helper.byId(BP_CONST.SPEECH_TARGET_ID).getBoundingClientRect().right -\n        helper.byId(BP_CONST.HEAD_ID).getBoundingClientRect().left;\n    }\n\n    // Use right justification if label is too large to fit\n    setAlignment(speechLabelWidth > getMaxLabelWidth() ? 'end' : 'start');\n\n    if (platform.browser.isEdge) {\n      helper.fixTextAnchors(ttsLabelElement);\n    }\n\n  }\n\n  function setTTSLabel(state) {\n    var speechStateLabel = getTTSLabelElement(),\n        localizedState = locale.translate(state),\n        text = localizedSpeechString + ' ' + localizedState,\n        node = document.createTextNode(text);\n\n    speechStateLabel.removeChild(speechStateLabel.firstChild);\n    speechStateLabel.appendChild(node);\n\n    ensureLabelFitsInPanel();\n  }\n\n  /*\n   Show TTS is enabled or disabled.\n    */\n  function updateTTSStateView(isEnabled) {\n\n    isSpeechEnabled = isEnabled;\n\n    var ttsButton = getTTSButtonElement();\n\n    endWaveAnimation(); // Don't keep animating the wave hover effect after a click\n\n    enableDimmingHover(false);  // Don't use hover effects after a click\n\n    // Set aria-checked so that screen readers speak the new state\n    ttsButton.setAttribute('aria-checked', !!isEnabled);\n\n    // Update the label for the TTS button\n    setTTSLabel(isEnabled ? BP_CONST.SPEECH_STATE_LABELS.ON : BP_CONST.SPEECH_STATE_LABELS.OFF);\n  }\n\n  function getWaves() {\n    return [\n      helper.byId(BP_CONST.WAVE_1_ID),\n      helper.byId(BP_CONST.WAVE_2_ID),\n      helper.byId(BP_CONST.WAVE_3_ID)\n    ];\n  }\n\n  function nextWaveAnimationStep() {\n\n    var waves       = getWaves(),\n        opacityData = BP_CONST.ANIMATE_WAVES_OPACITY;\n\n    for (var waveNum = 0; waveNum < waves.length; waveNum ++) {\n      inlineStyle(waves[waveNum]).opacity = opacityData[waveNum][waveAnimationStepNum];\n    }\n\n    if (++ waveAnimationStepNum < opacityData[0].length) {\n      // Not finished with animation, do it again\n      waveAnimationTimer = nativeGlobal.setTimeout(nextWaveAnimationStep, BP_CONST.ANIMATE_WAVES_STEP_DURATION);\n    }\n    else {\n      endWaveAnimation();\n    }\n  }\n\n  function endWaveAnimation() {\n\n    var waves = getWaves();\n\n    clearTimeout(waveAnimationTimer);\n\n    waveAnimationStepNum = 0;\n\n    for (var waveNum = 0; waveNum < waves.length; waveNum ++) {\n      inlineStyle(waves[waveNum]).opacity = '';\n    }\n\n  }\n\n  // Animate waves if user hovers over TTS button, speech is off and animation is not already playing\n  function beginHoverEffects() {\n\n    if (!state.isPanel()) {\n      return;\n    }\n\n    enableDimmingHover(true);\n\n    if (!isSpeechEnabled && !waveAnimationStepNum) {\n      nextWaveAnimationStep();\n    }\n  }\n\n  function endHoverEffects() {\n    endWaveAnimation();\n    enableDimmingHover(false);\n  }\n\n  function enableDimmingHover(doEnable) {\n    getTTSButtonElement().setAttribute('class', doEnable ? 'scp-dim-waves' : '');\n  }\n\n  function toggleListeners(isOn) {\n    if (isOn === isListeningToEvents) {\n      return;\n    }\n    isListeningToEvents = isOn;\n\n    var fn = isOn ? 'addEventListener' : 'removeEventListener',\n      mouseTarget1 = getTTSButtonElement(),\n      mouseTarget2 = helper.byId(BP_CONST.SPEECH_LABEL_ID);\n\n    // Do not use click listeners when the panel is shrunk because it confused the Window-Eyes browse mode\n    // (when Enter key was pressed on badge, it toggled speech)\n    mouseTarget1[fn]('click', toggleSpeech);\n    mouseTarget2[fn]('click', toggleSpeech);\n\n    mouseTarget1[fn]('mouseover', beginHoverEffects);\n    mouseTarget1[fn]('mouseout', endHoverEffects);\n    mouseTarget1[fn]('mouseover', beginHoverEffects);\n    mouseTarget1[fn]('mouseout', endHoverEffects);\n  }\n\n  /*\n   Set up speech toggle.\n    */\n  function init() {\n\n    if (isInitialized) {\n      return;\n    }\n\n    isInitialized = true;\n\n    localizedSpeechString = locale.translate('speech');\n\n    toggleListeners(true);\n\n    events.on('bp/did-expand', function() { toggleListeners(true); });\n    events.on('bp/will-shrink', function() { toggleListeners(false); });\n\n    updateTTSStateView(isSpeechEnabled);\n\n    waveAnimationStepNum = 0;\n  }\n\n  return {\n    init: init,\n    updateTTSStateView: updateTTSStateView\n  };\n});\n\n","/**\n * This file contains helper methods for dealing with the string that is returned\n * when using Element#style.transform or Element.getAttribute('transform')\n * This module supports translateX, translateY, scale, scaleY and rotate.\n * In the case of scaleY it is get/set as a scale(1,y) value with a paired property scaleType = 'scaleY'\n */\n\nsitecues.define(\n  'bp-expanded/view/transform-util',[\n    'run/inline-style/inline-style',\n    'run/platform'\n  ],\n  function (\n    inlineStyle,\n    platform\n  ) {\n  'use strict';\n\n  var SHOULD_USE_CSS_TRANSFORM_IN_SVG =\n    !platform.browser.isMS &&       // MS does not support CSS in SVG\n    !platform.browser.isSafari &&   // Safari CSS animations are actually slower\n    !platform.browser.isFirefox;    // FF breaks getBoundingClientRect() when CSS transform is used\n\n  // Skips past non-numeric characters and get the next number as type 'number'\n  // It will include a negative sign and decimal point if it exists in the string\n  function getNumberFromString(str) {\n    return typeof str === 'number' ? str : +(str.match(/[0-9\\.\\-]+/));\n  }\n\n  function shouldUseCss(elem) {\n    return SHOULD_USE_CSS_TRANSFORM_IN_SVG || !(elem instanceof SVGElement);\n  }\n\n  // Set @transform or CSS transform as appropriate\n  // transformMap: {     // optional fields\n  //   translateX: number\n  //   translateY: number\n  //   scale: number,\n  //   scaleType: 'scaleX' || 'scaleY'\n  //   rotate: number\n  // }\n  // scaleType can be 'scaleX' or 'scaleY'\n  function setElemTransform(elem, transformMap) {\n    var useCss = shouldUseCss(elem),\n      transformString = getTransformString(transformMap, useCss);\n\n    if (useCss) {  // Always use CSS, even in SVG\n      inlineStyle(elem).transform = transformString;\n    }\n    else if (transformString) {\n      elem.setAttribute('transform', transformString);\n    }\n    else {\n      elem.removeAttribute('transform');\n    }\n  }\n\n  // Always get style transform\n  function getStyleTransformMap(elem) {\n    return getTransformMap(inlineStyle(elem).transform);\n  }\n\n  function getElemTransformMap(elem) {\n    return shouldUseCss(elem) ? getStyleTransformMap(elem) : getAttrTransformMap(elem);\n  }\n\n  function getAttrTransformMap(elem) {\n    return getTransformMap(elem.getAttribute('transform'));\n  }\n\n  function getTransformMap(transformString) {\n\n    var hasTranslate = transformString && transformString.indexOf('translate') !== -1,\n      hasScale = transformString && transformString.indexOf('scale') !== -1,\n      hasScaleY = hasScale && transformString.indexOf('scale(1,') !== -1,  // Only vertical scaling used (scaleY)\n      hasRotate = transformString && transformString.indexOf('rotate') !== -1,\n\n      translateY = 0,\n      translateX = 0,\n      scale = 1,\n      rotate = 0,\n\n      // We use String.prototype.split to extract the values we want, and we need a\n      // variable to store the intermediary result.  I'm not a huge fan of this.\n      rotateValues,\n      transformValues;\n\n    if (hasTranslate) {\n      // translate is always first\n      var separator = transformString.indexOf(',') > 0 ? ',' : ' ';  // Attributes split by space, CSS by comma\n      transformValues = transformString.split(separator);\n      translateX = transformValues[0] || 0;\n      translateY = hasScale ? transformValues[1].split('scale')[0] : transformValues[1] || 0;\n\n    }\n\n    if (hasScale) {\n      if (hasScaleY) {\n        // Only vertical scaling used (scaleY)\n        transformValues = transformString.split('scale(1,');\n      }\n      else {\n        transformValues = transformString.split('scale');\n      }\n      scale = hasRotate ? transformValues[1].split('rotate')[0] : transformValues[1];\n    }\n\n    if (hasRotate) {\n      rotate = transformString.split('rotate')[1];\n\n      if (rotate.indexOf(',') !== -1) {\n        rotateValues = rotate.split(',');\n        rotate = rotateValues[0];\n      }\n    }\n\n    return {\n      translateX: getNumberFromString(translateX),\n      translateY: getNumberFromString(translateY),\n      scale: getNumberFromString(scale),\n      scaleType: hasScaleY ? 'scaleY': 'scale',\n      rotate: getNumberFromString(rotate)\n    };\n\n  }\n\n  function getTransformString(transformMap, useCss) {\n    var translateUnits = useCss ? 'px' : '',\n      hasTranslate = transformMap.translateX || transformMap.translateY,\n      translateCSS =\n        hasTranslate ?\n          'translate(' +\n            (transformMap.translateX || 0) + translateUnits + ', ' +\n            (transformMap.translateY || 0) + translateUnits + ') '\n          : '',\n      scale = transformMap.scale,\n      hasScale = scale && scale !== 1,\n      scaleType = transformMap.scaleType === 'scaleY' ? 'scale(1,' : 'scale(',\n      scaleCSS = hasScale ? scaleType + scale + ') ' : '',\n      rotate = transformMap.rotate,\n      rotateUnits = useCss ? 'deg' : '',\n      rotateCSS = rotate ? ' rotate(' + rotate + rotateUnits + ') ' : '';\n\n    return translateCSS + scaleCSS + rotateCSS;\n  }\n\n  return {\n    getTransformMap: getTransformMap,\n    getElemTransformMap: getElemTransformMap,\n    getStyleTransformMap: getStyleTransformMap,\n    setElemTransform: setElemTransform,\n    shouldUseCss: shouldUseCss\n  };\n});\n\n","/**\n *\n * This file exposes an API for creating javascript animations.\n */\n\nsitecues.define(\n  'bp-expanded/view/transform-animate',[\n    'run/util/object-utility',\n    'run/inline-style/inline-style',\n    'bp-expanded/view/transform-util',\n    'run/platform'\n  ],\n  function (\n    objectUtil,\n    inlineStyle,\n    transformUtil,\n    platform\n  ) {\n  'use strict';\n\n  var requestFrameFn = window.requestAnimationFrame,\n      cancelFrameFn  = window.cancelAnimationFrame,\n\n      // https://gist.github.com/gre/1650294\n      timingFunctions = {\n        'ease-out': function (t) {\n          return (--t) * t * t + 1;\n        },\n        'linear': function (t) {\n          return t;\n        }\n      };\n\n  function getFinalTransforms(toTransforms, fromTransforms) {\n    var finalTransforms = [],\n      index = toTransforms.length,\n      fromTransform,\n      toTransform;\n\n    while (index --) {\n      fromTransform = fromTransforms[index] || {};\n      toTransform = toTransforms[index] || {};\n      finalTransforms[index] = {\n        translateX: (typeof toTransform.translateX === 'number') ? toTransform.translateX : fromTransform.translateX || 0,\n        translateY: (typeof toTransform.translateY === 'number') ? toTransform.translateY : fromTransforms.translateY || 0,\n        scale: (typeof toTransform.scale === 'number') ? toTransform.scale : fromTransform.scale || 1,\n        scaleType: toTransform.scaleType,\n        rotate: (typeof toTransform.rotate === 'number') ? toTransform.rotate : fromTransform.rotate || 0\n      };\n    }\n    return finalTransforms;\n  }\n\n  function getOrigTransforms(elements) {\n    var index = elements.length,\n      origTransforms = [];\n    // Get the original transforms for each element\n    while (index --) {\n      if (elements[index]) {\n        origTransforms[index] = transformUtil.getElemTransformMap(elements[index]);\n      }\n    }\n    return origTransforms;\n  }\n\n\n  function JsAnimation(elements, fromTransforms, toTransforms, duration, onFinish, timingFunctionName) {\n    var animationStartTime = Date.now(),\n      timingFn = timingFunctions[timingFunctionName],\n      currAnimation = this;\n\n    this.onFinish           = onFinish;\n    this.isRunning          = true;\n    this.onTick             = tick;\n    this.setDuration        = setDuration;\n    this.animationId        = tick(); // Start the animation automatically.\n\n    function setDuration(newDuration) {\n      duration = newDuration;\n    }\n\n    function tick() {\n      var\n        time = duration > 0 ? timingFn(Math.min(1, (Date.now() - animationStartTime) / duration)) : 1,\n        index = elements.length,\n        from,\n        to,\n        interim;\n      while (index --) {\n        if (elements[index]) {\n          from = fromTransforms[index];\n          to = toTransforms[index];\n          interim = {\n            translateX: from.translateX + (to.translateX - from.translateX) * time,\n            translateY: from.translateY + (to.translateY - from.translateY) * time,\n            scale: from.scale + (to.scale - from.scale) * time,\n            scaleType: to.scaleType,\n            rotate: from.rotate + (to.rotate - from.rotate) * time\n          };\n          transformUtil.setElemTransform(elements[index], interim);\n        }\n      }\n\n      if (time < 1) {\n        currAnimation.animationId = requestFrameFn(tick);\n      }\n      else {\n        currAnimation.isRunning = false;\n        if (onFinish) {\n          onFinish();\n        }\n      }\n    }\n  }\n\n  JsAnimation.prototype.finishNow = function () {\n    if (this.isRunning) {\n      if (this.onTick) {\n        this.setDuration(0);\n        this.onTick();\n      }\n      if (this.onFinish) {\n        this.onFinish();\n      }\n      cancelFrameFn(this.animationId);\n      this.isRunning = false;\n    }\n  };\n\n  function CssAnimation(elements, fromTransforms, toTransforms, duration, onCustomFinish, timingFunctionName) {\n    var isRunning = true;\n\n    function initTransitionStyles(transition) {\n      elements.forEach(function(elem) {\n        if (elem) {\n          var css = {\n            transition : transition\n          };\n\n          if (transition) {\n            css.transitionTimingFunction = timingFunctionName;\n          }\n\n          inlineStyle.set(elem, css);\n        }\n      });\n    }\n\n    // doTweak is used when we need to make sure to set a different value after a transition was removed\n    function initTransforms(doTweak) {\n      var index = elements.length,\n        toTransform;\n      while (index --) {\n        if (elements[index]) {\n          toTransform = toTransforms[index];\n          if (doTweak) {\n            toTransform = objectUtil.assign({}, toTransform);\n            toTransform.translateY = (toTransform.translateY || 0) + 0.001;\n          }\n          transformUtil.setElemTransform(elements[index], toTransform);\n        }\n      }\n    }\n\n    function addTransitionEndListener() {\n      elements[0].addEventListener(platform.transitionEndEvent, onFinish);\n    }\n\n    function removeTransitionEndListener() {\n      elements[0].removeEventListener(platform.transitionEndEvent, onFinish);\n    }\n\n    function onFinish(evt) {\n      // Don't bubble to a parent animation (e.g the secondary panel may still need to animate while a hover finishes animating)\n      if (evt.target === evt.currentTarget) {\n        evt.stopPropagation();\n        finishNow();\n      }\n    }\n\n    function finishNow() {\n      if (isRunning) {  // Don't finish twice\n        isRunning = false;\n        removeTransitionEndListener();\n        initTransitionStyles('');  // Disable the element transition by setting the style to ''\n        initTransforms(true);\n        if (onCustomFinish) {\n          onCustomFinish();\n        }\n      }\n    }\n\n    function beginTransition() {\n      addTransitionEndListener();\n      initTransitionStyles('transform ' + duration + 'ms');\n      getComputedStyle(elements[0]);  // Force layout update\n      requestAnimationFrame(initTransforms);\n    }\n\n\n    beginTransition();\n\n    return {\n      finishNow: finishNow\n    };\n  }\n\n  function animateTransformLinear(element, value, duration) {\n    return animateTransforms([element], [value], duration, null, 'linear');\n  }\n\n  // Optimized transform animation that works via @transform on IE, CSS transition on other browsers\n  // Currently only works with CSS transform, on element at a time\n  function animateTransforms(elements, requestedTransforms, duration, onCustomFinish, timingFunctionName) {\n\n    timingFunctionName = timingFunctionName || 'ease-out';\n\n    var animationType = transformUtil.shouldUseCss(elements[0]) ? CssAnimation : JsAnimation,\n      fromTransforms = getOrigTransforms(elements),\n      toTransforms = getFinalTransforms(requestedTransforms, fromTransforms);\n\n    return new animationType(elements, fromTransforms, toTransforms, duration, onCustomFinish, timingFunctionName);  // Cannot use CSS transform for SVG in IE\n  }\n\n  return {\n    animateTransformLinear: animateTransformLinear,\n    animateTransforms: animateTransforms\n  };\n});\n\n","/**\n * IE cannot handle SVG transforms via CSS, so we do them in script\n * Currently this module implements data-hover=\"[transform attributes]\"\n */\n\nsitecues.define('bp-expanded/view/transform-hovers',['run/bp/helper', 'run/bp/constants', 'bp-expanded/view/transform-util', 'bp-expanded/view/transform-animate', 'run/events'],\n  function(helper, BP_CONST, transformUtil, animate, events) {\n\n  var isActivePanel = false,\n    byId = helper.byId,\n    HOVER_ANIMATION_MS = 500,\n    savedHoverElems = [],\n    uniqueId = 0,\n    origTransforms = [],\n    animations = [],\n    hoverState = [];\n\n  function getContainer() {\n    return byId(BP_CONST.BP_CONTAINER_ID);\n  }\n\n  function toggleHover(target, isActiveHover) {\n\n    if (target.getAttribute('aria-disabled') === 'true' ||\n      !target.hasAttribute('data-hover')) {\n      return;\n    }\n\n    var id = + target.getAttribute('data-id'),\n      origTransform = origTransforms[id] || '',\n      transformValue = origTransform + ' ' + (isActiveHover ? target.getAttribute('data-hover') : '');\n\n    if (hoverState[id] === isActiveHover) {\n      return; // Already doing this\n    }\n\n    if (animations[id]) {\n      animations[id].finishNow();\n    }\n    animations[id] = animate.animateTransformLinear(target, transformUtil.getTransformMap(transformValue), HOVER_ANIMATION_MS);\n    hoverState[id] = isActiveHover;\n  }\n\n  function onMouseOver(evt) {\n    toggleHover(helper.getEventTarget(evt), true);\n  }\n\n  function onMouseMove(evt) {\n    var index = savedHoverElems.length,\n      x = evt.clientX,\n      y = evt.clientY;\n    while (index --) {\n      if (hoverState[index] && evt.target !== savedHoverElems[index] && evt.target.parentNode !== savedHoverElems[index] ) {\n        var rect = savedHoverElems[index].getBoundingClientRect();\n        if (x < rect.left -1 || x > rect.right + 1||\n          y < rect.top -1 || y > rect.bottom + 1) {\n          toggleHover(savedHoverElems[index], false);\n        }\n      }\n    }\n  }\n\n  function toggleMouseListeners (willBeActive) {\n    if (isActivePanel === willBeActive) {\n      return;  // Nothing to do\n    }\n\n    storeAllHoverElements();\n\n    isActivePanel = willBeActive;\n\n    var addOrRemoveFn = isActivePanel ? 'addEventListener' : 'removeEventListener',\n      index = savedHoverElems.length;\n\n    function addOrRemoveHovers(elem) {\n      elem[addOrRemoveFn]('mouseenter', onMouseOver);\n    }\n\n    while (index--) {\n      addOrRemoveHovers(savedHoverElems[index]);\n    }\n    window[addOrRemoveFn]('mousemove', onMouseMove);\n  }\n\n  function storeAllHoverElements() {\n    var allHoverElems = getContainer().querySelectorAll('[data-hover]'),\n      index = allHoverElems.length,\n      elem;\n    while (index --) {\n      elem = allHoverElems[index];\n      if (savedHoverElems.indexOf(elem) < 0) {  // If not already saved\n        savedHoverElems[uniqueId] = elem;\n        elem.setAttribute('data-id', uniqueId);\n        origTransforms[uniqueId] = elem.getAttribute('transform');\n        ++ uniqueId;\n      }\n    }\n  }\n\n  function cancelHovers() {\n    var index = savedHoverElems.length;\n    while (index --) {\n      toggleHover(savedHoverElems[index], false);\n    }\n  }\n\n  function hoversOn() {\n    toggleMouseListeners(true);\n  }\n\n  function hoversOff() {\n    toggleMouseListeners(false);\n  }\n\n  function refreshHovers() {  // Ensure listeners are added for new content\n    hoversOff();\n    storeAllHoverElements();\n    hoversOn();\n  }\n\n  function init() {\n    refreshHovers(); // Current expansion\n    events.on('bp/did-expand zoom', hoversOn); // Future expansions\n    events.on('bp/will-shrink zoom/begin', hoversOff);\n    events.on('bp/did-init-secondary bp/content-loaded', refreshHovers);\n    events.on('bp/will-show-secondary-feature', cancelHovers);\n  }\n\n  return {\n    init: init\n  };\n});\n\n","/**\n *  This file contains logic for the \"?\" button placement and functionality that opens up the\n *  help / info page to provide sitecues users with a document to learn how to use the tool, including\n *  keyboard commands.\n */\n\nsitecues.define(\n  'bp-expanded/view/more-button',[\n    'run/bp/constants',\n    'run/bp/helper',\n    'bp-expanded/view/transform-util',\n    'bp-expanded/view/transform-animate',\n    'bp-expanded/view/transform-hovers',\n    'run/bp/model/state',\n    'run/events',\n    'run/inline-style/inline-style',\n    'run/ab-test/ab-test',\n    'mini-core/native-global'\n  ],\n  function (\n    BP_CONST,\n    helper,\n    transformUtil,\n    animate,\n    hovers,\n    state,\n    events,\n    inlineStyle,\n    abTest,\n    nativeGlobal\n  ) {\n  'use strict';\n\n  var BUTTON_ENTER_ANIMATION_DURATION = 500, // Milliseconds\n      BUTTON_ENTER_ANIMATION_DURATION_INSTANT = 0,\n      NO_INPUT_TIMEOUT_DEFAULT        = 3000,\n      userInputTimeoutId,\n      doAlwaysShowButton,\n      isAfterUserInput,\n      // Oft-used functions. Putting it in a variable helps minifier, convenience, brevity\n      byId = helper.byId,\n      moreButtonContainer,\n      moreOpacityElem,\n      isInitialized;\n\n  function getHelpOrSecondaryPanel(doToggle) {\n    if (state.get('isClassicMode')) {\n      require(['info/info'], function(info) {\n        if (doToggle) {\n          info.showHelp();\n        }\n      });\n      return;\n    }\n\n    // Open secondary panel (not in classic mode)\n    require(['bp-secondary/bp-secondary'], function(secondary) {\n      // Show or hide the secondary panel.\n      secondary.init();\n      if (doToggle) {\n        secondary.toggleSecondaryPanel();\n      }\n    });\n  }\n\n  function onMouseClick () {\n    getHelpOrSecondaryPanel(true);\n  }\n\n  function addMouseListeners () {\n    moreButtonContainer.addEventListener('click', onMouseClick);\n  }\n\n  function setSize(size) {\n    transformUtil.setElemTransform(moreButtonContainer, { scale: size }); // Starting point\n  }\n\n  function showMoreButton (useInstantTransition) {\n\n    byId(BP_CONST.BOTTOM_MOUSETARGET_ID).removeEventListener('mousemove', showMoreButtonSlowly);\n    clearTimeout(userInputTimeoutId);\n\n    moreOpacityElem.setAttribute('class', useInstantTransition ? '' : 'scp-transition-opacity-fast');\n    inlineStyle(moreOpacityElem).opacity = 1;\n\n    // Scale the button to 0.5 and then animate it to a scale of 1\n    if (!useInstantTransition) {\n      setSize(0.5);\n      // Delay to fix Chrome animation bug\n      // TODO WTF? We need to wait 30 ms? Tried requestAnimationFrame() and only 50% success rate\n      nativeGlobal.setTimeout(function () {\n        getComputedStyle(moreButtonContainer); // Force layout update\n        animate.animateTransformLinear(moreButtonContainer, {scale: 1},\n          useInstantTransition ? BUTTON_ENTER_ANIMATION_DURATION_INSTANT : BUTTON_ENTER_ANIMATION_DURATION);\n      }, 30);\n    }\n\n    // Once we show the button, always show it.\n    doAlwaysShowButton = true;\n\n    getHelpOrSecondaryPanel(); // Preload\n\n    // Add mouse listeners once BP is ready\n    addMouseListeners();\n  }\n\n  function showMoreButtonSlowly() {\n    showMoreButton(false);\n  }\n\n  function showMoreButtonInstantly() {\n    showMoreButton(true);\n  }\n\n  function hideHelpButton () {\n\n    moreOpacityElem.setAttribute('class', '');\n    moreOpacityElem.style.opacity = 0;\n\n    byId(BP_CONST.BOTTOM_MOUSETARGET_ID).removeEventListener('mousemove', showMoreButtonSlowly);\n\n    clearTimeout(userInputTimeoutId);\n  }\n\n  function captureUserInput () {\n    isAfterUserInput = true;\n    byId(BP_CONST.SVG_ID).removeEventListener('mousedown', captureUserInput);\n  }\n\n  function showButtonIfNoUserInput () {\n    if (!isAfterUserInput) {\n      showMoreButton();\n    }\n  }\n\n  // Three things may happen when the panel is expanded:\n  // 1) Show the button immediately.\n  // 2) Wait for the user to mouse over the bottom of the panel. If so, show the button.\n  // 3) Wait and see if the user makes any actions in the panel. If not, show the button.\n  function initButtonBehavior () {\n\n    // If the user has already been presented with the button (during this page load),\n    // there is no reason to not show it immediately whenever the panel is expanded.\n    if (doAlwaysShowButton) {\n      showMoreButtonSlowly();  // Or use showMoreButton() to go back to showing the button instantly in this case\n      return;\n    }\n\n    // Add event listener for mousing over the bottom of the panel\n    byId(BP_CONST.BOTTOM_MOUSETARGET_ID).addEventListener('mousemove', showMoreButtonSlowly);\n\n    // Add event listener for mouse down anywhere on the panel\n    byId(BP_CONST.SVG_ID).addEventListener('mousedown', captureUserInput);\n\n    // After NO_INPUT_TIMEOUT, we will be able to determine if the user has\n    // pressed their mouse button.  If they have not, show the additional button.\n    var noInputTimeoutMs = abTest.get('moreButtonTimerV2', NO_INPUT_TIMEOUT_DEFAULT);\n    userInputTimeoutId = nativeGlobal.setTimeout(showButtonIfNoUserInput, noInputTimeoutMs);\n  }\n\n  function init() {\n    if (isInitialized) {\n      return;\n    }\n\n    isInitialized = true;\n\n    // Get elements\n    moreButtonContainer = byId(BP_CONST.MORE_BUTTON_CONTAINER_ID);\n    moreOpacityElem = byId('scp-more-button-opacity');\n\n    // Show immediately?\n    doAlwaysShowButton = !state.get('isFirstBadgeUse');\n\n    // After a complete expansion of the badge, determine if and when we will show\n    // the \"more\" button.\n    events.on('bp/did-expand', initButtonBehavior); // Future expansions\n    initButtonBehavior(); // First expansion is now\n\n    // Allows other modules to show the more button.  For example, pressing the\n    // tab key to navigate and operate the panel.\n    events.on('bp/did-focus-more-button', showMoreButtonInstantly);\n\n    // Always hide the more button when the panel is about to collapse.\n    events.on('bp/will-shrink', hideHelpButton);\n\n    //TODO: Once Edge gets itself together (see SC-3434) we should attach the button mouse listener here instead of after revealing it\n\n    hovers.init();\n  }\n\n  return {\n    init: init\n  };\n});\n\n","sitecues.define('bp-expanded/bp-expanded',[\n    'bp-expanded/controller/slider-controller',\n    'bp-expanded/controller/shrink-controller',\n    'bp-expanded/controller/focus-controller',\n    'bp-expanded/controller/scroll-prevention',\n    'bp-expanded/view/tts-button',\n    'bp-expanded/view/more-button',\n    'bp-expanded/view/transform-util',\n    'run/bp/helper',\n    'run/bp/constants',\n    'run/bp/model/state'\n  ],\n  function (sliderController,\n            shrinkController,\n            focusController,\n            scrollPrevention,\n            ttsButton,\n            moreButton,\n            transform,\n            helper,\n            BP_CONST,\n            state) {\n\n    var isInitialized;\n\n    function getFocusController() {\n      return focusController;\n    }\n\n    function init() {\n      if (!isInitialized) {\n        state.set('scale', transform.getStyleTransformMap(helper.byId(BP_CONST.BP_CONTAINER_ID)).scale);\n        sliderController.init();\n        shrinkController.init();\n        focusController.init();\n        ttsButton.init();\n        moreButton.init();\n        scrollPrevention.init();\n        require(['page/cursor/cursor'], function(cursor) {\n          cursor.init();\n        });\n      }\n      isInitialized = true;\n    }\n\n    return {\n      init: init,\n      getFocusController: getFocusController\n    };\n  });\n\n","\nsitecues.define(\"bp-expanded\", function(){});\n"]}