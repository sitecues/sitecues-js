{"version":3,"sources":["../../config-wrap-start-default.js","bp-secondary/font-charset.js","bp-secondary/insert-secondary-markup.js","bp-secondary/tips.js","bp-secondary/settings.js","bp-secondary/feedback.js","bp-secondary/about.js","bp-secondary/cards.js","bp-secondary/bp-secondary-features.js","bp-secondary/bp-secondary.js","../../../../../../module-create.js"],"names":["sitecues","define","locale","currExtension","currLangs","lang","getLang","EXTENDED_LANGS","latin-ext","allExtensions","Object","keys","index","length","indexOf","finalizer","helper","platform","fontCharset","urls","events","isInitialized","svgSecondary","htmlSecondary","insertHtml","insertionId","markup","where","byId","finalMarkup","outerHTML","insertSvg","svgElement","svgContentToInsert","divElement","document","createElementNS","innerHTML","firstChild","parentNode","replaceChild","insertSheet","name","cssLink","createElement","cssUrl","resolveResourceUrl","setAttribute","id","querySelector","appendChild","insertSheets","extendedFontCharsetName","cssPrefix","init","emit","BP_CONST","nativeGlobal","inlineStyle","animationTimers","animationFns","scp-zoom-card","scp-zoom-keys-card","scp-highlight-card","scp-lens-card","scp-speech-card","scp-full-guide-card","animationFnMap","zoom","animateZoom","highlight","animateHighlight","lens","animateLens","ACTORS","DEMO_PAGE_CONTENTS","DEMO_PARA","DEMO_MOUSE","DEMO_LENS_SPACE","getGeometryTargets","cssValues","cardActivated","forEach","clearTimeout","clearElementDemo","demoPage","hasAnimation","newAnimation","DEMO_PAGE","className","TIPS_CONTENT_ID","pushTimeout","fn","howLongMs","push","setTimeout","elem","transitionDuration","toggleElementDemo","isOn","toggle","toggleZoom","key","DEMO_SLIDER_THUMB","zoomThenUnzoom","DEMO_ZOOM_PLUS","DEMO_ZOOM_MINUS","highlightThenUnhighlight","toggleSpacebar","isPressed","DEMO_SPEECH_SPACE","pressSpacebar","openThenCloseLens","require","audio","speakIt","speakContent","on","pref","state","metric","cursor","domEvents","settingsPanel","isActive","lastDragUpdateTime","SLIDER_DRAG_UPDATE_MIN_INTERVAL","rangeValueMap","onPanelUpdate","willBeActive","getSecondaryPanelName","get","settingsCards","SETTINGS_CONTENT_ID","mouseSlidersInit","initContents","addEventListener","onSettingsClick","onSettingsNativeInputChange","onSettingsNativeInputChangeDrag","removeEventListener","featureSupport","themes","theme","initButtons","initRanges","themeSlidersInit","allSettingNames","allSettingElems","querySelectorAll","getAttribute","themeListener","newValue","currentButtonValue","isCurrentValue","settingElems","bindListener","getThemePowerGroup","THEME_POWER_ID","getThemeTextHueGroup","THEME_TEXT_HUE_ID","getMouseSizeRange","MOUSE_SIZE_ID","initRangeListener","settingName","rangeElem","val","value","rangeElems","fireInputRangeMetric","adjustRangeBackground","themeNameListener","isThemePowerEnabled","Boolean","isThemeTextHueEnabled","size","getSize","MIN_BP_CURSOR_SIZE","Math","max","isNativeInput","evt","target","getEventTarget","set","event","oldValue","SliderSettingChange","split","old","new","send","slider","browser","isMS","min","parseFloat","percent","LEFT_COLOR","RIGHT_COLOR","gradient","backgroundImage","currTime","Date","now","view","currentStatus","currentRating","getFeedbackArea","FEEDBACK_TEXTAREA","getFeedbackInputRect","FEEDBACK_INPUT_RECT","getRating","RATING","getFeedbackSendButton","FEEDBACK_SEND_BUTTON","getFeedbackSendLink","FEEDBACK_SEND_LINK","getBPContainer","BP_CONTAINER_ID","autoSizeTextarea","feedbackTextarea","feedbackInputRect","getBoundingClientRect","scale","ROOM_FOR_ROUNDED_OUTLINE","ROOM_FOR_SCROLLBAR","width","height","clip","addOrRemoveFn","updateSendButton","onRatingClick","onSendFeedbackClick","status","statusObj","star","ratingElem","stars","getElementsByClassName","RATING_STAR_CLASS","targetStar","updateMailtoLink","toggleSendEnabled","getFeedbackText","getFeedbackTextToSend","NUM_NEWLINES","STATUS_PREFIX","Array","join","currentStatusText","JSON","stringify","getCurrentRatingText","SC_LOCAL","sendButton","mailto","encodeURIComponent","isEnabled","doEnable","isSendEnabled","details","feedbackText","rating","statusText","SC_DEV","console","log","Feedback","update","loadImage","setAttributeNS","menuImageTranslateX","menuBtnTranslateX","menuBtnTranslateY","TRANSFORMS","ABOUT_BUTTON_ID","translateY","menuBtnScale","menuBtnRotate","secondaryPanel","toggleFeature","xhr","activePanelName","activePanel","PANELS_WITH_CARDS","tips","settings","NUM_PANELS_WITH_CARDS","panelsToLoad","loadPanelContents","panelName","localizedPanelName","getUiLocale","panelUrl","url","success","html","panelElement","finalHTML","addSemanticSugar","htmlContainer","firstElementChild","removeUnsupportedContent","getContainer","toggleCardActive","getPanelElement","getElementById","INTERACTIVE","replace","removeAllElements","elementsToRemoveSelector","hide","elements","element","removeChild","elementsToRemove","hasOwnProperty","bpContainer","PREV_ID","prevCard","NEXT_ID","nextCard","onClick","onKeyDown","moveIndicator","newCardNotification","clickedElem","linkTarget","charAt","info","showHelp","substring","selectNewCard","LEFT","RIGHT","localName","keyCode","switchCard","isFromLink","getActiveCard","getActiveTab","cardElement","activeCard","tabId","chosenItem","bpScale","indicator","indicatorRect","chosenItemRect","choseItemLeft","left","indicatorLeft","previouslyChosen","backgroundPosition","isDisabled","hasAttribute","direction","fromCard","cardToSelect","nextElementSibling","previousElementSibling","lastElementChild","removeAttribute","feedback","about","cards","featureDefs","module","menuButtonId","TIPS_BUTTON_ID","labelId","TIPS_LABEL_ID","panelId","SETTINGS_BUTTON_ID","SETTINGS_LABEL_ID","FEEDBACK_BUTTON_ID","FEEDBACK_LABEL_ID","FEEDBACK_CONTENT_ID","menuButtonHelperId","ABOUT_ROTATE_HELPER_ID","animatedImageId","ABOUT_CONTENT_IMAGE_ID","ABOUT_LABEL_ID","ABOUT_CONTENT_ID","heightAnimationDelay","animate","transformUtil","secondaryFeatures","origPanelContentsRect","origOutlineHeight","origFillHeight","hasOpened","fadeInTimer","animateHeightTimer","animationsCompleteTimer","BUTTON_DROP_ANIMATION_MS","ENABLED_PANEL_TRANSLATE_Y","DISABLED_PANEL_TRANSLATE_Y","MORE_BUTTON_ROTATION_ENABLED","runningAnimations","features","CONTENTS_HEIGHT","forEachFeature","feature","updateGlobalState","featureName","isSecondaryExpanding","getSecondary","SECONDARY_ID","getMoreButton","MORE_BUTTON_CONTAINER_ID","getBottom","BOTTOM_MORE_ID","getShadow","getOutlineFill","getSecondaryOutline","finishAllAnimations","animation","finishNow","createAnimation","elems","values","duration","onFinishFn","animateTransforms","getAmountToShiftSecondaryTop","panelTop","MAIN_OUTLINE_ID","top","secondaryBottom","FUDGE_FACTOR","MIN_TOP","screenBottomOverlap","window","innerHeight","animateButtonMenuDrop","willEnable","secondaryId","fromTranslateY","toTranslateY","moreBtnEndRotation","moreButtonTransform","rotate","secondaryPanelTransform","onFinish","updateMoreButtonLabel","setElemTransform","menuButton","origMenuBtnTransforms","panelContentsHeight","baseGeometryTargets","false","outlineHeight","translateX","bpContainerTranslateY","true","getCurrentOutlineHeight","getOutlineSVG","MAIN_OUTLINE_BORDER_ID","outlinePath","parseInt","animateFeature","animatedImageElem","rotationHelperElem","currentBpContainerTransforms","getStyleTransformMap","geometryTargets","toGeo","ENABLE_ANIMATION_MS","DISABLE_ANIMATION_MS","wasEnabled","getFeaturePanelName","percentRemaining","heightAnimationDuration","openFeatureDuration","animationsCompleteMs","fadeInTextContentWhenLargeEnough","onAnimationsComplete","animateHeight","newPanelHeight","newTranslateY","bottomTranslateY","BOTTOM_Y_OFFSET","bottomTransform","outlineFillTransform","scaleType","secondaryOutlineTransform","shadowTransform","bpContainerTransform","openFeatureAnimation","toRotation","menuButtonTransform","rotationHelperTransform","animatedImageTransform","resetButtonStyles","onMenuButtonClick","e","currentTarget","secondaryPanelName","toggleSecondaryPanel","featurePanelName","ENABLED","SECONDARY_PANEL_ENABLED","DISABLED","SECONDARY_PANEL_DISABLED","isEdge","fixTextAnchors","toggleMouseListeners","doPointToMainPanel","labelName","localizedLabel","translate","MORE_BUTTON_GROUP_ID","isFeatureAvailable","isButtonMenu","addOrRemoveClick","resetStyles","moreButton","HEIGHT_RELATED_ELEMS","isFirefox","willChange","resetWebKitLayout","style","display","offsetHeight","button","transform","buttonElem","onPanelClose","isSecondaryPanelRequested","MAIN_CONTENT_FILL_ID"],"mappings":"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","file":"bp-secondary.js.map","sourcesContent":["\"use strict\";\n","// Return the extended font charset name, e.g. 'latin-ext'\n\nsitecues.define('bp-secondary/font-charset',['run/locale'], function(locale) {\n  /**\n   * Return 'latin-ext' if latin-ext font needed, etc.\n   * @returns {*}\n   */\n  return function() {\n    var lang = locale.getLang(),\n      EXTENDED_LANGS = {\n        'latin-ext': [\n          'hr', // Croatian\n          'cs', // Czech\n          'et', // Estonian\n          'hu', // Hungarian\n          'lv', // Latvian\n          'lt', // Lithuanian\n          'pl', // Polish\n          'ro', // Romanian\n          'sr', // Serbian\n          'sk', // Slovak\n          'sl', // Slovenian\n          'tr' // Turkish\n        ]\n      },\n      allExtensions = Object.keys(EXTENDED_LANGS),\n      index = allExtensions.length,\n      currExtension,\n      currLangs;\n\n    while (index --) {\n      currExtension = allExtensions[index];\n      currLangs = EXTENDED_LANGS[currExtension];\n      if (currLangs.indexOf(lang) >= 0) {\n        return currExtension;\n      }\n    }\n  };\n});\n\n","// Markup for the secondary panel\nsitecues.define(\n  'bp-secondary/insert-secondary-markup',[\n    'run/bp/view/markup-finalizer',\n    'run/bp/helper',\n    'run/platform',\n    'bp-secondary/font-charset',\n    'run/conf/urls',\n    'run/events'\n  ],\n  function (\n    finalizer,\n    helper,\n    platform,\n    fontCharset,\n    urls,\n    events\n  ) {\n  'use strict';\n  /*jshint multistr: true */\n\nvar isInitialized,\n  svgSecondary =  // xmlns:xlink needed for outerHTML to work on docs with xhtml doctype\n'<g id=\"scp-secondary\" class=\"scp-secondary-only\" aria-label=\"{{more_features}}\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\\n  <rect id=\"scp-secondary-fill\" role=\"presentation\" x=\"1\" y=\"1\" width=\"806\" height=\"134\" fill=\"#fff\" stroke-width=\"0\"/>\\\n  <g id=\"scp-bottom-secondary\">\\\n    <use xlink:href=\"#scp-bottom-def\"/>\\\n    <g id=\"scp-tips-label\" role=\"button\" class=\"scp-hand-cursor\" data-feature=\"tips\" aria-label=\"{{tips}}\">\\\n      <text text-anchor=\"middle\" x=\"75\" y=\"178\">{{tips}}</text>\\\n      <rect x=\"5\" y=\"148\" height=\"40\" width=\"150\" class=\"scp-hidden-target\"/>\\\n    </g>\\\n    <g id=\"scp-settings-label\" role=\"button\" class=\"scp-hand-cursor\" data-feature=\"settings\" aria-label=\"{{settings}}\">\\\n      <text text-anchor=\"middle\" x=\"285\" y=\"178\">{{settings}}</text>\\\n      <rect x=\"200\" y=\"148\" height=\"40\" width=\"165\" class=\"scp-hidden-target\"/>\\\n    </g>\\\n    <g id=\"scp-feedback-label\" role=\"button\" class=\"scp-hand-cursor\" data-feature=\"feedback\" aria-label=\"{{rate_us}}\">\\\n      <text text-anchor=\"middle\" x=\"517\" y=\"178\">{{rate_us}}</text>\\\n      <rect x=\"432\" y=\"148\" height=\"40\" width=\"165\" class=\"scp-hidden-target\"/>\\\n    </g>\\\n    <g id=\"scp-about-label\" role=\"button\" class=\"scp-hand-cursor\" data-feature=\"about\" aria-label=\"{{about}}\">\\\n      <text text-anchor=\"middle\" x=\"730\" y=\"178\">{{about}}</text>\\\n      <rect x=\"660\" y=\"148\" height=\"40\" width=\"145\" class=\"scp-hidden-target\"/>\\\n    </g>\\\n  </g>\\\n  <rect id=\"scp-card-header-bg\" class=\"scp-secondary-feature-only\" y=\"1\" width=\"808\" height=\"133\" stroke=\"#C0BFBF\" stroke-width=\"1\" fill=\"#EEE\"/>\\\n  <g>\\\n    <g id=\"scp-arrows\" role=\"presentation\" class=\"scp-transition-opacity scp-secondary-feature scp-if-settings scp-if-tips\">\\\n      <g id=\"scp-prev-card\" class=\"scp-arrow scp-hand-cursor scp-transition-opacity\" transform=\"translate(640,72) rotate(90) scale(1.4)\" role=\"button\" aria-label=\"{{previous}}\" aria-disabled=\"true\">\\\n        <g data-hover=\"scale(1.3)\">\\\n          <use xlink:href=\"#scp-arrow\"/>\\\n          <rect class=\"scp-hidden-target\" x=\"-25\" y=\"-10\" width=\"50\" height=\"50\"/>\\\n        </g>\\\n      </g>\\\n      <g id=\"scp-next-card\" class=\"scp-arrow scp-hand-cursor\" transform=\"translate(729,72) rotate(-90) scale(1.4)\" role=\"button\" aria-label=\"{{next}}\">\\\n        <g data-hover=\"scale(1.3)\">\\\n          <use xlink:href=\"#scp-arrow\"/>\\\n          <rect class=\"scp-hidden-target\" x=\"-25\" y=\"-25\" width=\"50\" height=\"50\"/>\\\n        </g>\\\n      </g>\\\n    </g>\\\n    <g id=\"scp-feedback\" class=\"scp-if-feedback scp-transition-opacity scp-secondary-feature\" role=\"group\" aria-labelledby=\"scp-feedback-header\">\\\n      <rect id=\"scp-feedback-input-rect\" role=\"presentation\" data-own-focus-ring=\"true\" x=\"45\" y=\"315\" width=\"715\" height=\"400\" stroke-width=\"3\" stroke=\"#aaa\" fill=\"#fdfcfc\" rx=\"20\" ry=\"20\"/>\\\n      <g id=\"scp-rating\" class=\"scp-hand-cursor\" role=\"group\" aria-label=\"{{rating}}\">\\\n        <use id=\"scp-stars-1\" role=\"button\" aria-pressed=\"false\" aria-label=\"{{rating_1}}\" class=\"scp-rating-star\" xlink:href=\"#scp-rating-star-def\" x=\"42\" y=\"736\"/>\\\n        <use id=\"scp-stars-2\" role=\"button\" aria-pressed=\"false\" aria-label=\"{{rating_2}}\" class=\"scp-rating-star\" xlink:href=\"#scp-rating-star-def\" x=\"108\" y=\"736\"/>\\\n        <use id=\"scp-stars-3\" role=\"button\" aria-pressed=\"false\" aria-label=\"{{rating_3}}\" class=\"scp-rating-star\" xlink:href=\"#scp-rating-star-def\" x=\"174\" y=\"736\"/>\\\n        <use id=\"scp-stars-4\" role=\"button\" aria-pressed=\"false\" aria-label=\"{{rating_4}}\" class=\"scp-rating-star\" xlink:href=\"#scp-rating-star-def\" x=\"240\" y=\"736\"/>\\\n        <use id=\"scp-stars-5\" role=\"button\" aria-pressed=\"false\" aria-label=\"{{rating_5}}\" class=\"scp-rating-star\" xlink:href=\"#scp-rating-star-def\" x=\"306\" y=\"736\"/>\\\n      </g>\\\n    </g>\\\n    <g id=\"scp-about\" class=\"scp-if-about\" transform=\"translate(805,16)\">\\\n      <g id=\"scp-logo-text\" role=\"presentation\">\\\n        <image id=\"scp-sitecues-text\" role=\"presentation\" x=\"-11\" y=\"-12\" width=\"400\" height=\"100\"></image>\\\n        <text text-anchor=\"end\" style=\"font-family:Open Sans;font-size:24px\" y=\"96\" x=\"300\">{{zoom_and_speech}}</text>\\\n      </g>\\\n    </g>\\\n  </g>\\\n  <g id=\"scp-button-menu\" transform=\"translate(52,66)\">\\\n    <g id=\"scp-tips-button\" class=\"scp-if-tips scp-hand-cursor scp-transition-opacity\" role=\"button\" data-feature=\"tips\" aria-labelledby=\"scp-tips-label\">\\\n      <g data-hover=\"scale(1.2)\">\\\n        <circle r=\"52\" fill=\"#548ECE\"/>\\\n        <circle r=\"22\" transform=\"translate(0,-14)\" fill=\"#fff\"/> <!-- Fix fill blink bug in Chrome -->\\\n        <path fill=\"#fff\" stroke=\"#fff\" stroke-width=\"3\" stroke-miterlimit=\"10\" d=\"m.9,-34.3c12.3,0 22.2,10 22.2,22.2c0,12.1 -7.3,13.5 -8.7,26.7c0,1.2 -1,2.2 -2.2,2.2h-11.4m.1,0h-.1h-11.3c-1.2,0 -2.2,-1 -2.2,-2.2c-1.4,-13.2 -8.7,-14.6 -8.7,-26.7c0,-12.3 10,-22.2 22.2,-22.2\"/>\\\n        <path fill=\"#fff\" d=\"m14,23.5c0,1.2 -1,2.2 -2.2,2.2h-22.2c-1.2,0 -2.2,-1 -2.2,-2.2c0,-1.2 1,-2.2 2.2,-2.2h22.2c1.2,0 2.2,1 2.2,2.2zm0,6.5c0,1.2 -1,2.2 -2.2,2.2h-22.2c-1.2,0 -2.2,-1 -2.2,-2.2c0,-1.2 1,-2.2 2.2,-2.2h22.2c1.2,0 2.2,1 2.2,2.2zm-27,4.5h23c0,2.5 -2,4.5 -4.5,4.5h-8.9c-2.5,0 -4.5,-2 -4.5,-4.5l0,0l0,0l.1,0l-5.2,0z\"/>\\\n        <rect fill=\"none\" width=\"120\" height=\"120\" y=\"-60\" x=\"-60\" class=\"scp-hand-cursor\"/>\\\n      </g>\\\n    </g>\\\n    <g id=\"scp-settings-button\" class=\"scp-if-settings scp-hand-cursor scp-transition-opacity\" role=\"button\" data-feature=\"settings\" aria-labelledby=\"scp-settings-label\">\\\n      <g data-hover=\"scale(1.2)\">\\\n        <path d=\"m-36,47.8c0,1.3 1,2.3 2.3,2.3h6.2c1.3,0 2.3,-1 2.3,-2.3v-90.8c0,-1.3 -1,-2.3 -2.3,-2.3h-6.2c-1.3,0 -2.3,1 -2.3,2.3v91l0,-.2zm61.4,0c0,1.3 1,2.3 2.3,2.3h6.2c1.3,0 2.3,-1 2.3,-2.3v-90.8c0,-1.3 -1,-2.3 -2.3,-2.3h-6c-1.3,0 -2.3,1 -2.3,2.3v90.8l-.2,0zm-30.7,0c0,1.3 1,2.3 2.3,2.3h6.2c1.3,0 2.3,-1 2.3,-2.3v-90.8c0,-1.3 -1,-2.3 -2.3,-2.3h-6c-1.3,0 -2.3,1 -2.3,2.3v90.8l-.2,0z\" fill=\"#7B7B7B\"/>\\\n        <path d=\"m-19.7,4.5c0,1.3 -1,2.3 -2.3,2.3h-17.1c-1.3,0 -2.3,-1 -2.3,-2.3v-5.3c0,-1.3 1,-2.3 2.3,-2.3h17.1c1.3,0 2.3,1 2.3,2.3v5.3l0,0zm30.7,-28.5c0,1.3 -1,2.3 -2.3,2.3h-17.1c-1.3,0 -2.3,-1 -2.3,-2.3v-5.2c0,-1.3 1,-2.3 2.3,-2.3h17.1c1.3,0 2.3,1 2.3,2.3v5.40001l0,-.2zm31.5,46.4c0,1.3 -1,2.3 -2.3,2.3h-17.1c-1.3,0 -2.3,-1 -2.3,-2.3v-5.3c0,-1.3 1,-2.3 2.3,-2.3h17.1c1.3,0 2.3,1 2.3,2.3v5.3l0,0z\" fill=\"#548ECE\"/>\\\n        <rect fill=\"none\" width=\"120\" height=\"120\" y=\"-60\" x=\"-60\" class=\"scp-hand-cursor\"/>\\\n      </g>\\\n    </g>\\\n    <g id=\"scp-feedback-button\" class=\"scp-if-feedback scp-hand-cursor scp-transition-opacity\" role=\"button\" data-feature=\"feedback\" aria-labelledby=\"scp-feedback-label\">\\\n      <g data-hover=\"scale(1.2)\">\\\n        <path d=\"m-10,40c3,1 7,1 11,1c27,0 49,-19 49,-43c0,-24 -22,-44 -49,-44c-27,0 -50,19 -50,43c0,12 6,23 15,31c-2.2,9.2 -7.6,14.8 -17,20.7c15,-1 25,2 41,-9\" stroke=\"#548ECE\" stroke-miterlimit=\"5\" stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-width=\"5.5\" fill=\"#FFF\"/>\\\n        <rect fill=\"none\" width=\"120\" height=\"120\" y=\"-60\" x=\"-60\" class=\"scp-hand-cursor\"/>\\\n      </g>\\\n    </g>\\\n    <g id=\"scp-about-button\" class=\"scp-if-about scp-hand-cursor scp-transition-opacity\" role=\"button\" data-feature=\"about\" aria-labelledby=\"scp-about-label\">\\\n      <g id=\"scp-about-rotate-helper\" role=\"presentation\">\\\n        <g data-hover=\"scale(1.2)\">\\\n          <path d=\"m15.8,-9.5h-11.2c-1,0 -3.4,3.9 -3.4,5.2l.1,15.3l-49.8,6.1h0c-1.6,-5 -2.5,-10.3 -2.5,-15.8c0,-27.9 22.6,-50.4 50.4,-50.4c21.2,0 39.4,13 46.8,31.7h0c5,11.2 0,22.2 -10.89999,24.1l-16.10001,2l0,-13.1c0,-1.2 -2.39999,-5.1 -3.39999,-5.1zm-7,47.3c1.6,1.89999 2.8,0 2.8,0l7.1,-11.10001c.2,-.3 .4,-.6 .4,-1v0v-4h26.4h0c-7.8,17.8 -25.5,30.3 -46.2,30.3c-20.7,0 -38.4,-12.4 -46.2,-30.3v0h48.1v4.3c0,.3 .2,.6 .4,.9l7.2,10.9z\" fill=\"#000\"/>\\\n          <rect fill=\"none\" width=\"120\" height=\"120\" y=\"-60\" x=\"-60\" class=\"scp-hand-cursor\"/>\\\n        </g>\\\n      </g>\\\n    </g>\\\n  </g>\\\n  <g id=\"scp-secondary-outline\" role=\"presentation\">\\\n    <path d=\"M808 186.5c0 6-5 11-11 11H11.5 c-6 0-11-5-11-11\" fill=\"transparent\" stroke=\"#999\" stroke-width=\"1.5\"/>\\\n    <line stroke=\"#999\" stroke-width=\"1.5\" x1=\".5\" y1=\"-700\" x2=\".5\" y2=\"188\"/>\\\n    <line stroke=\"#999\" stroke-width=\"1.5\" x1=\"808\" y1=\"-700\" x2=\"808\" y2=\"188\"/>\\\n  </g>\\\n  <line stroke=\"#999\" stroke-width=\"1\" x1=\"0\" y1=\".5\" x2=\"808\" y2=\".5\"/> <!-- outline top -->\\\n</g>',\nhtmlSecondary =\n'<sc-h1 id=\"scp-feedback-header\" class=\"scp-card-header scp-secondary-feature\">{{rate_us}}</sc-h1>\\\n<sc class=\"scp-secondary-feature scp-transition-opacity scp-if-feedback\" role=\"group\" aria-labelledby=\"scp-feedback-header\">\\\n  <sc-p id=\"scp-feedback-prompt\">{{rate_us_suggest}} {{rate_us_prompt}}</sc-p>\\\n  <textarea id=\"scp-feedback-textarea\" class=\"scp-hand-cursor\" data-allow-scroll=\"true\" \\\n    aria-describedby=\"scp-feedback-prompt\" data-visible-focus-on=\"scp-feedback-input-rect\" placeholder=\"{{tell_us_something}}\"></textarea>\\\n  <sc-button id=\"scp-feedback-send-button\" aria-disabled=\"true\"><a class=\"scp-button-link scp-hand-cursor\" id=\"scp-feedback-send-link\" class=\"scp-hand-cursor\" data-mailto=\"mailto:support@sitecues.com\">{{send}}</a></sc-button>.\\\n</sc>\\\n<sc id=\"scp-feedback-thanks\" class=\"scp-if-feedback-sent scp-secondary-feature\" role=\"note\" aria-label=\"{{thank_you}}\">\\\n  <sc-h1>{{thank_you}}</sc-h1>\\\n</sc>\\\n<sc class=\"scp-about-teaser scp-if-about scp-transition-opacity scp-secondary-feature\" role=\"group\" aria-label=\"{{about}} sitecues\">\\\n  <sc-p>\\\n    <sc-span id=\"scp-about-preamble\">{{about_preamble}}</sc-span>\\\n    <a class=\"scp-link scp-hand-cursor\" id=\"scp-about-sitecues-link\" aria-describedby=\"scp-about-preamble scp-about-sitecues-link\" target=\"_blank\" href=\"https://sitecues.com?utm_source=sitecues-badge-panel&amp;utm_medium=bp3&amp;utm_campaign=BP_redirect&amp;utm_content=link\">sitecues.com</a>.\\\n  </sc-p>\\\n  <sc-p id=\"scp-about-rate-footer\">\\\n    <sc-span id=\"scp-rate-us-suggest\" role=\"heading\">{{about_rate_us}}</sc-span><br/>\\\n    <sc-button id=\"scp-about-rate-button\" class=\"scp-hand-cursor\" role=\"button\" aria-label=\"{{rate_us}}\" aria-describedby=\"scp-rate-us-suggest\">{{rate_us}}</sc-button>\\\n  </sc-p>\\\n</sc>';\n\n  function insertHtml(insertionId, markup) {\n    var where = helper.byId(insertionId),\n      finalMarkup = finalizer(markup);\n    where.outerHTML = finalMarkup;\n  }\n\n  function insertSvg(insertionId, markup) {\n    // Unfortunately innertHTML, outerHTML, insertAdjacentHTML do not work for <svg> in Safari (or probably IE)\n    // We have to create the elements in the SVG namespace and then insert it\n    var where = helper.byId(insertionId),\n      finalMarkup = finalizer(markup),\n      divElement = document.createElementNS('http://www.w3.org/1999/xhtml', 'div'),\n      svgElement,\n      svgContentToInsert;\n\n    // Use HTML element so that we can use innerHTML property\n    divElement.innerHTML= '<svg xmlns=\"http://www.w3.org/2000/svg\">' + finalMarkup + '</svg>';\n    svgElement = divElement.firstChild; // This is the <svg> element\n    svgContentToInsert = svgElement.firstChild;  // This is the actual content we want\n    where.parentNode.replaceChild(svgContentToInsert, where);\n  }\n\n  function insertSheet(name) {\n    var cssLink = document.createElement('link'),\n      cssUrl = urls.resolveResourceUrl('css/' + name + '.css');\n    cssLink.setAttribute('rel', 'stylesheet');\n    cssLink.setAttribute('href', cssUrl);\n    cssLink.id = 'sitecues-js-' + name;\n    document.querySelector('head').appendChild(cssLink);\n  }\n\n  function insertSheets() {\n    // CSS: always use secondary.css\n    insertSheet('secondary');\n    // CSS: use latin-ext.css etc. if necessary\n    var extendedFontCharsetName = fontCharset();\n    if (extendedFontCharsetName) {\n      insertSheet(extendedFontCharsetName);\n    }\n    // CSS: use vendor stylesheet as well (e.g. secondary-moz.css, secondary-ie.css, secondary-webkit.css)\n    if (platform.cssPrefix) {\n      insertSheet('secondary' + platform.cssPrefix);\n    }\n  }\n\n  function init() {\n    if (!isInitialized) {\n      isInitialized = true;\n      insertHtml('scp-html-secondary-anchor', htmlSecondary);\n      insertSvg('scp-secondary-anchor', svgSecondary);\n      insertSheets();\n      events.emit('bp/did-insert-secondary-markup');\n    }\n  }\n\n  return {\n    init: init\n  };\n});\n\n","/**\n * Tips cards, supporting demo animations\n */\nsitecues.define(\n  'bp-secondary/tips',[\n    'run/bp/constants',\n    'run/bp/helper',\n    'run/events',\n    'mini-core/native-global',\n    'run/inline-style/inline-style'\n  ],\n  function (\n    BP_CONST,\n    helper,\n    events,\n    nativeGlobal,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var byId = helper.byId,\n    isInitialized,\n    animationTimers = [],\n    animationFns = {\n      'scp-zoom-card': 'zoom',\n      'scp-zoom-keys-card': 'zoom',\n      'scp-highlight-card': 'highlight',\n      'scp-lens-card': 'lens',\n      'scp-speech-card': 'lens',\n      'scp-full-guide-card': 'none'\n    },\n    animationFnMap = {\n      'zoom': animateZoom,\n      'highlight': animateHighlight,\n      'lens': animateLens\n    },\n    ACTORS = [\n      BP_CONST.DEMO_PAGE_CONTENTS,\n      BP_CONST.DEMO_PARA,\n      BP_CONST.DEMO_MOUSE,\n//        BP_CONST.DEMO_ZOOM_PLUS,\n//        BP_CONST.DEMO_ZOOM_MINUS,\n      BP_CONST.DEMO_LENS_SPACE\n    ];\n\n  function getGeometryTargets(cssValues) {\n    return cssValues;\n  }\n\n  function cardActivated(id) {\n    // Clear existing tips animations\n    animationTimers.forEach(clearTimeout);\n    animationTimers.length = 0;\n    ACTORS.forEach(clearElementDemo);\n\n    // Find an appropriate animation\n    var newAnimation = animationFns[id],\n      demoPage,\n      hasAnimation;\n    if (!newAnimation) {\n      return;\n    }\n\n    demoPage = byId(BP_CONST.DEMO_PAGE);\n    hasAnimation = newAnimation !== 'none';\n    demoPage.setAttribute('data-hasdemo', hasAnimation);\n\n    if (hasAnimation) {\n      // Run the animation function for this card (if any)\n      animationFnMap[newAnimation](id);\n\n      // Set a class on the demo-page element so it knows what's up\n      demoPage.className = 'scp-demo-' + newAnimation;\n      byId(BP_CONST.TIPS_CONTENT_ID).setAttribute('data-active', id);\n    }\n  }\n\n  function pushTimeout(fn, howLongMs) {\n    animationTimers.push(nativeGlobal.setTimeout(fn, howLongMs));\n  }\n\n  // Reset demo page element back to original state\n  function clearElementDemo(id) {\n    var elem = byId(id);\n    if (elem) {\n      // Reset element back to normal position instantly (temporarily turn of animations)\n      elem.setAttribute('data-demo', false);\n      inlineStyle(elem).transitionDuration = '0s';\n      nativeGlobal.setTimeout(function () {\n        inlineStyle(elem).transitionDuration = '';\n      }, 20); // Wait at least one frame tick to turn animations back on\n    }\n  }\n\n  // Optional -- howLongMs is how long to wait before doing it\n  function toggleElementDemo(id, isOn, howLongMs) {\n    function toggle() {\n      byId(id).setAttribute('data-demo', isOn || false);\n    }\n    pushTimeout(toggle, howLongMs || 0);\n  }\n\n  function animateZoom() {\n    function toggleZoom(isOn, key, howLongMs) {\n      toggleElementDemo(BP_CONST.DEMO_PAGE_CONTENTS, isOn, howLongMs); // Zoom page\n      toggleElementDemo(BP_CONST.DEMO_SLIDER_THUMB, isOn, howLongMs);  // Move slider\n      toggleElementDemo(key, true, howLongMs);                         // Push key\n      toggleElementDemo(key, false, howLongMs + 2000);                 // Release key\n    }\n\n    function zoomThenUnzoom() {\n      toggleZoom(true, BP_CONST.DEMO_ZOOM_PLUS, 2000);\n      toggleZoom(false, BP_CONST.DEMO_ZOOM_MINUS, 6000);\n    }\n\n    zoomThenUnzoom();\n    pushTimeout(zoomThenUnzoom, 8000);\n\n  }\n\n  function animateHighlight() {\n    function highlightThenUnhighlight() {\n      toggleElementDemo(BP_CONST.DEMO_MOUSE, true, 2000);\n      toggleElementDemo(BP_CONST.DEMO_PARA, true, 4000);\n      toggleElementDemo(BP_CONST.DEMO_MOUSE, false, 6000);\n      toggleElementDemo(BP_CONST.DEMO_PARA, false, 6500);\n    }\n    highlightThenUnhighlight();\n    pushTimeout(highlightThenUnhighlight, 9999);\n  }\n\n  function animateLens(id) {\n    function toggleSpacebar(isPressed) {\n      toggleElementDemo(BP_CONST.DEMO_LENS_SPACE, isPressed);\n      toggleElementDemo(BP_CONST.DEMO_SPEECH_SPACE, isPressed);\n    }\n\n    function pressSpacebar() {\n      toggleSpacebar(true);\n      pushTimeout(toggleSpacebar, 1000);\n    }\n\n    function openThenCloseLens() {\n      require(['audio/audio'], function(audio) {\n        function speakIt() {\n          audio.speakContent(byId(BP_CONST.DEMO_PARA), true);\n        }\n\n        pushTimeout(pressSpacebar, 2000);\n        toggleElementDemo(BP_CONST.DEMO_PARA, true, 3200);  // Open lens\n        if (id === 'scp-speech-card') {\n          pushTimeout(speakIt, 3200);\n        }\n        pushTimeout(pressSpacebar, 6000);\n        toggleElementDemo(BP_CONST.DEMO_PARA, false, 7200);  // Close lens\n      });\n    }\n\n    openThenCloseLens();\n    pushTimeout(openThenCloseLens, 12000);\n  }\n\n  function init() {\n    if (!isInitialized) {\n      isInitialized = true;\n      events.on('bp/did-show-card', cardActivated);\n    }\n  }\n\n  return {\n    getGeometryTargets: getGeometryTargets,\n    init: init\n  };\n\n});\n\n","sitecues.define(\n  'bp-secondary/settings',[\n    'run/bp/constants',\n    'run/bp/helper',\n    'run/conf/preferences',\n    'run/bp/model/state',\n    'run/metric/metric',\n    'run/platform',\n    'page/cursor/cursor',\n    'run/events',\n    'run/dom-events',\n    'mini-core/native-global',\n    'run/inline-style/inline-style'\n  ],\n  function (\n    BP_CONST,\n    helper,\n    pref,\n    state,\n    metric,\n    platform,\n    cursor,\n    events,\n    domEvents,\n    nativeGlobal,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var byId = helper.byId,\n    isActive = false,\n    isInitialized,\n    settingsPanel,\n    lastDragUpdateTime = 0,\n    SLIDER_DRAG_UPDATE_MIN_INTERVAL= 50,\n    rangeValueMap = {};\n\n  function onPanelUpdate() {\n\n    var willBeActive = state.getSecondaryPanelName() === 'settings' && state.get('isSecondaryExpanded'),\n      settingsCards = byId(BP_CONST.SETTINGS_CONTENT_ID);\n\n    if (isActive !== willBeActive) {\n      if (willBeActive) {\n        mouseSlidersInit();  // Always use current mouse size as starting point\n\n        if (!settingsPanel) {\n          initContents();\n        }\n\n        settingsCards.addEventListener('click', onSettingsClick);\n        settingsCards.addEventListener('change', onSettingsNativeInputChange);\n        settingsCards.addEventListener('input', onSettingsNativeInputChangeDrag);\n      }\n      else {\n        settingsCards.removeEventListener('click', onSettingsClick);\n        settingsCards.removeEventListener('change', onSettingsNativeInputChange);\n        settingsCards.removeEventListener('input', onSettingsNativeInputChangeDrag);\n      }\n    }\n\n    isActive = willBeActive;\n  }\n\n  function initContents() {\n\n    settingsPanel = byId(BP_CONST.SETTINGS_CONTENT_ID);\n\n    if (platform.featureSupport.themes) {\n      // MSIE/Edge -- no support yet\n      // TODO support themes in IE -- need to break up theme CSS into chunks for pages like atkratter.com,\n      // otherwise it locks up the page -- 537k of styles is a lot for IE to handle\n      require(['theme/theme'], function(theme) {\n        theme.init(true); // Preload theme code\n      });\n    }\n\n    initButtons();\n\n    initRanges();\n\n    themeSlidersInit();\n  }\n\n  // Set up setting synchronization\n  function initButtons() {\n    var allSettingNames = {},\n      allSettingElems = settingsPanel.querySelectorAll('[data-setting-name]'),\n      index = allSettingElems.length,\n      name;\n\n    // For each setting name, get a list of elements\n    while (index --) {\n      name = allSettingElems[index].getAttribute('data-setting-name');\n      allSettingNames[name] = 1;\n    }\n\n    function themeListener(newValue) {\n      newValue = newValue || 'none';  // Will now be 'none', 'warm', 'bold' or 'dark'\n      var settingElems = settingsPanel.querySelectorAll('sc-button[data-setting-name=\"' + name + '\"]'),\n          index = settingElems.length,\n          elem,\n          currentButtonValue,\n          isCurrentValue;\n      while (index -- ) {\n        elem = settingElems[index];\n        // This button is used for what theme? 'none', 'warm', 'bold' or 'dark'\n        currentButtonValue = elem.getAttribute('data-setting-value') || 'none';\n        isCurrentValue = newValue === currentButtonValue;\n        elem.setAttribute('aria-pressed', isCurrentValue);\n      }\n    }\n\n    Object.keys(allSettingNames).forEach(function (name) {\n      pref.bindListener(name, themeListener);\n    });\n  }\n\n  function getThemePowerGroup() {\n    return byId(BP_CONST.THEME_POWER_ID);\n  }\n\n  function getThemeTextHueGroup() {\n    return byId(BP_CONST.THEME_TEXT_HUE_ID);\n  }\n\n  function getMouseSizeRange() {\n    return byId(BP_CONST.MOUSE_SIZE_ID);\n  }\n\n  function initRangeListener(settingName, rangeElem) {\n    pref.bindListener(settingName, function(val) {\n      rangeElem.value = val;\n    });\n  }\n\n  function initRanges() {\n    var rangeElems = settingsPanel.querySelectorAll('input[type=\"range\"]'),\n      index = rangeElems.length,\n      rangeElem,\n      settingName;\n\n    while (index --) {\n      rangeElem = rangeElems[index];\n      settingName = rangeElem.getAttribute('data-setting-name');\n      initRangeListener(settingName, rangeElem);\n      domEvents.on(rangeElem, 'blur', fireInputRangeMetric);\n      rangeValueMap[settingName] = pref.get(settingName);\n      adjustRangeBackground(rangeElem);\n    }\n\n  }\n\n  function themeNameListener(name) {\n    var isThemePowerEnabled = Boolean(name),\n        isThemeTextHueEnabled = name === 'dark';\n    getThemePowerGroup().setAttribute('data-show', isThemePowerEnabled);\n    getThemeTextHueGroup().setAttribute('data-show', isThemeTextHueEnabled);\n  }\n\n  function themeSlidersInit() {\n    pref.bindListener('themeName', themeNameListener);\n  }\n\n  function mouseSlidersInit() {\n    var size = cursor.getSize(),\n      MIN_BP_CURSOR_SIZE = 1.9;\n\n    if (!pref.get('mouseSize')) {\n      // No setting, so start from current cursor size means using the BP cursor size as a minimum\n      size = Math.max(size, MIN_BP_CURSOR_SIZE);\n    }\n    getMouseSizeRange().value = size;\n  }\n\n\n  function getGeometryTargets(cssValues) {\n    return cssValues;\n  }\n\n  function isNativeInput(elem) {\n    return typeof elem.value !== 'undefined';\n  }\n\n  function onSettingsClick(evt) {\n    var target = helper.getEventTarget(evt),\n      settingName;\n    if (target && !isNativeInput(target)) {\n      settingName = target.getAttribute('data-setting-name');\n      if (settingName) {\n        pref.set(settingName, target.getAttribute('data-setting-value'));\n      }\n    }\n  }\n\n  function fireInputRangeMetric(event) {\n    var target = event.target,\n      id = target.id,\n      settingName = target.getAttribute('data-setting-name'),\n      oldValue = rangeValueMap[settingName],\n      newValue = pref.get(settingName);\n\n    if (oldValue !== newValue) { // Only fire on change\n      rangeValueMap[settingName] = newValue;\n      new metric.SliderSettingChange({\n        id: id.split('scp-')[1] || id,  // Trim off scp- prefix\n        settingName: settingName,\n        old: oldValue,\n        new: newValue\n      }).send();\n    }\n  }\n\n  // Use native value for things like <input type=\"range\">\n  // For sliders, this occurs when user drops the thumb (lets go of mouse button)\n  function onSettingsNativeInputChange(evt) {\n    var target = helper.getEventTarget(evt);\n    if (target) {\n      var settingName = target.getAttribute('data-setting-name'),\n        newValue = + target.value;\n      if (settingName) {\n        pref.set(settingName, newValue);\n      }\n    }\n  }\n\n  // Firefox doesn't have a pure CSS way of adjusting the background\n  function adjustRangeBackground(slider) {\n    if (platform.browser.isMS) {\n      // Not needed for IE/Edge, which do this via -ms- CSS\n      // We prefer CSS approach in IE, because JS may have trouble keeping up with slider thumb movements\n      return;\n    }\n\n    if (slider.className.indexOf('scp-normal-range') < 0) {\n      return; // Don't do for hue ranges which have a rainbow bg\n    }\n    var value = + slider.value,\n      min = parseFloat(slider.min),\n      max = parseFloat(slider.max),\n      percent = (100 * (value - min) / ( max - min)) + '%',\n      LEFT_COLOR = '#538eca',\n      RIGHT_COLOR = '#e2e2e2',\n      gradient = 'linear-gradient(to right, ' +\n        LEFT_COLOR + ' 0%,' +\n        LEFT_COLOR + ' ' + percent + ',' +\n        RIGHT_COLOR + ' ' + percent + ',' +\n        RIGHT_COLOR + ' 100%)';\n    inlineStyle(slider).backgroundImage = gradient;\n  }\n\n  // Native input change\n  // For sliders, this occurs when thumb moves at all, it doesn't need to be dropped there\n  // We don't want to update too much, hence the timer\n  function onSettingsNativeInputChangeDrag(evt) {\n    adjustRangeBackground(evt.target);\n    var currTime = + Date.now();\n    if (currTime - lastDragUpdateTime > SLIDER_DRAG_UPDATE_MIN_INTERVAL) {\n      lastDragUpdateTime = currTime;\n      nativeGlobal.setTimeout(function() { onSettingsNativeInputChange(evt);}, 0 );\n    }\n  }\n\n  function init() {\n    if (isInitialized) {\n      return;\n    }\n\n    isInitialized = true;\n\n    events.on('bp/did-open-subpanel', onPanelUpdate);\n  }\n\n  return {\n    getGeometryTargets: getGeometryTargets,\n    init: init\n  };\n\n});\n\n","sitecues.define(\n  'bp-secondary/feedback',[\n    'run/bp/constants',\n    'run/bp/helper',\n    'run/bp/model/state',\n    'run/metric/metric',\n    'run/bp/view/view',\n    'run/events',\n    'mini-core/native-global',\n    'run/inline-style/inline-style'\n  ],\n  function (\n    BP_CONST,\n    helper,\n    state,\n    metric,\n    view,\n    events,\n    nativeGlobal,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var byId = helper.byId,\n    isActive = false,\n    isInitialized,\n    currentRating = 0,  // Zero = no rating defined\n    currentStatus;\n\n  function getFeedbackArea() {\n    return byId(BP_CONST.FEEDBACK_TEXTAREA);\n  }\n\n  function getFeedbackInputRect() {\n    return byId(BP_CONST.FEEDBACK_INPUT_RECT);\n  }\n\n  function getRating() {\n    return byId(BP_CONST.RATING);\n  }\n\n  function getFeedbackSendButton() {\n    return byId(BP_CONST.FEEDBACK_SEND_BUTTON);\n  }\n\n  // Child of button: handles clicks\n  function getFeedbackSendLink() {\n    return byId(BP_CONST.FEEDBACK_SEND_LINK);\n  }\n\n  function getBPContainer() {\n    return byId(BP_CONST.BP_CONTAINER_ID);\n  }\n\n  function autoSizeTextarea() {\n    var feedbackTextarea = getFeedbackArea(),\n      feedbackInputRect = getFeedbackInputRect().getBoundingClientRect(),\n      scale = state.get('scale'),\n      ROOM_FOR_ROUNDED_OUTLINE = 22,\n      ROOM_FOR_SCROLLBAR = 20,  // Scrollbar will be hidden via css clip\n      width = (feedbackInputRect.width - ROOM_FOR_ROUNDED_OUTLINE) / scale,\n      height = (feedbackInputRect.height - ROOM_FOR_ROUNDED_OUTLINE) / scale;\n\n    inlineStyle.set(feedbackTextarea, {\n      width  : width + 'px',\n      height : height + 'px',\n      // Hide scrollbar by clipping horizontally - don't clip vertically (just large height of 999px for that)\n      clip   : 'rect(0,' + (width - ROOM_FOR_SCROLLBAR) + 'px,999px,0)'\n    });\n  }\n\n  function onPanelUpdate() {\n    var willBeActive = state.getSecondaryPanelName() === 'feedback',\n      addOrRemoveFn = willBeActive ? 'addEventListener' : 'removeEventListener';\n\n    if (isActive !== willBeActive) {\n      getFeedbackArea()[addOrRemoveFn]('keyup', updateSendButton);\n      getRating()[addOrRemoveFn]('click', onRatingClick);\n\n      if (!SC_LOCAL) {\n        getFeedbackSendLink()[addOrRemoveFn]('click', onSendFeedbackClick);\n      }\n\n      if (willBeActive) {\n        require(['status/status'], function(status) {\n          status(function(statusObj) {\n            currentStatus = statusObj;\n          });\n        });\n      }\n      else {\n        currentStatus = null;\n        state.set('isFeedbackSent', false);\n      }\n    }\n\n    isActive = willBeActive;\n  }\n\n  function onRatingClick(evt) {\n    var ratingElem = getRating(),\n      stars = getBPContainer().getElementsByClassName(BP_CONST.RATING_STAR_CLASS), // svgElem.children not supported in IE\n      index = stars.length,\n      targetStar = helper.getEventTarget(evt),\n      star;\n\n    currentRating = 0;\n\n    while (index --) {\n      star = stars[index];\n      if (star === targetStar) {\n        currentRating = index + 1;\n      }\n\n      star.setAttribute('aria-pressed', currentRating > 0);\n    }\n\n    // Copy current rating to group\n    // TODO need to test usability of ratings with screen reader\n    ratingElem.setAttribute('aria-label', targetStar.getAttribute('aria-label'));\n\n    updateMailtoLink();\n    toggleSendEnabled(true);\n  }\n\n  function getFeedbackText() {\n    return getFeedbackArea().value;\n  }\n\n  // User's feedback text + status text\n  function getFeedbackTextToSend() {\n    if (!SC_LOCAL || !currentStatus) {\n      return getFeedbackText();\n    }\n\n    // Add status text to mail messages because we don't have a metrics details field in that case.\n    // Prepend blank lines so that status is on next screen of mail message in order not to confuse the user.\n    var NUM_NEWLINES = 99,\n      STATUS_PREFIX = Array(NUM_NEWLINES).join('\\n') + '---- User configuration: ----\\n\\n',\n      currentStatusText = nativeGlobal.JSON.stringify(currentStatus, null, '    ');\n    return getFeedbackText() + STATUS_PREFIX + currentStatusText;\n  }\n\n  function getCurrentRatingText() {\n    var ratingElem = getRating();\n    return ratingElem.getAttribute('aria-label');\n  }\n\n  // Need to use mailto link instead of xhr in local (e.g. extension) mode\n  function updateMailtoLink() {\n    if (SC_LOCAL) {\n      var sendButton = getFeedbackSendLink(),\n        mailto = sendButton.getAttribute('data-mailto') +\n          '?subject=' + encodeURIComponent(getCurrentRatingText()) +\n          '&body=' + encodeURIComponent(getFeedbackTextToSend());\n\n      sendButton.setAttribute('href', mailto);\n    }\n  }\n\n  function updateSendButton() {\n    updateMailtoLink();\n    var isEnabled = getFeedbackText().length > 0 || currentRating > 0;\n    toggleSendEnabled(isEnabled);\n  }\n\n  function toggleSendEnabled(doEnable) {\n    // We do both a fake button and a link child -- the link is for the mailto: we do in the extension\n    getFeedbackSendButton().setAttribute('aria-disabled', !doEnable);\n    getFeedbackSendLink().setAttribute('aria-disabled', !doEnable);\n  }\n\n  function isSendEnabled() {\n    return getFeedbackSendButton().getAttribute('aria-disabled') !== 'true';\n  }\n\n  function onSendFeedbackClick() {\n    if (isSendEnabled()) {\n      var details = {\n        feedbackText: getFeedbackTextToSend(),\n        rating: currentRating,  // 0 = no rating, otherwise 1-5 stars\n        statusText: nativeGlobal.JSON.stringify(currentStatus)\n      };\n\n      if (SC_DEV) {\n        console.log('Sending feedback: %o', details);\n      }\n      new metric.Feedback(details).send();\n\n      toggleSendEnabled(false); // Disable feedback button after sent, so that feedback isn't accidentally clicked twice\n      state.set('isFeedbackSent', true);\n      view.update(true);\n    }\n  }\n\n  function getGeometryTargets(cssValues) {\n    return cssValues;\n  }\n\n  function init() {\n    if (!isInitialized) {\n      isInitialized = true;\n      events.on('bp/did-open-subpanel', onPanelUpdate);\n\n      events.on('bp/will-show-secondary-feature', function(name) {\n        if (name === 'feedback') {\n          autoSizeTextarea();\n        }\n      });\n\n    }\n  }\n\n  return {\n    getGeometryTargets: getGeometryTargets,\n    init: init\n  };\n\n});\n\n","sitecues.define('bp-secondary/about',['run/bp/constants', 'run/bp/helper', 'run/conf/urls'], function (BP_CONST, helper, urls) {\n  var byId = helper.byId,\n    isInitialized;\n\n  function loadImage() {\n    byId('scp-sitecues-text').setAttributeNS('http://www.w3.org/1999/xlink', 'href', urls.resolveResourceUrl('images/sitecues-logo-text.svg'));\n  }\n\n  function getGeometryTargets(cssValues) {\n    // Which additional animations\n    cssValues[false].menuImageTranslateX   = 0;   // About logo transitions to the left following the rolling icon\n\n    cssValues[true].menuBtnTranslateX      = 175; // The about icon, which rolls to the left\n    cssValues[true].menuBtnTranslateY      = BP_CONST.TRANSFORMS[BP_CONST.ABOUT_BUTTON_ID].translateY; // The about icon\n    cssValues[true].menuBtnScale           = 1;    // About icon scales to 1\n    cssValues[true].menuBtnRotate          = -359.5; // Roll the about icon counter-clockwise\n    cssValues[true].menuImageTranslateX    = -500;\n    return cssValues;\n  }\n\n  function init() {\n    if (!isInitialized) {\n      isInitialized = true;\n      loadImage();\n      byId('scp-about-rate-button').addEventListener('click', function() {\n        require(['bp-secondary/bp-secondary'], function(secondaryPanel) {\n          secondaryPanel.toggleFeature('feedback');\n        });\n      });\n    }\n  }\n\n  return {\n    getGeometryTargets: getGeometryTargets,\n    init: init\n  };\n\n});\n\n","/**\n * Generic module for handling the cards used by tips and settings\n */\nsitecues.define(\n  'bp-secondary/cards',[\n    'run/bp/constants',\n    'run/bp/helper',\n    'run/locale',\n    'run/bp/model/state',\n    'run/util/xhr',\n    'run/conf/urls',\n    'run/events',\n    'run/platform',\n    'run/inline-style/inline-style'\n  ],\n  function (\n    BP_CONST,\n    helper,\n    locale,\n    state,\n    xhr,\n    urls,\n    events,\n    platform,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var\n    PANELS_WITH_CARDS = { tips: 1, settings: 1},\n    byId = helper.byId,\n    isInitialized,\n    isActive = false,\n    activePanelName,\n    activePanel,\n    NUM_PANELS_WITH_CARDS = 2, // can also be computed via PANELS_WITH_CARDS.keys().length;\n    panelsToLoad = NUM_PANELS_WITH_CARDS;\n\n  function loadPanelContents(panelName) {\n    var localizedPanelName = panelName + '-' + locale.getUiLocale(),\n      panelUrl = urls.resolveResourceUrl('html/' + panelName + '/' + localizedPanelName + '.html');\n\n    xhr.get({\n      url: panelUrl,\n      success: function(html) {\n        var finalHTML = addSemanticSugar(html),\n          panelElement,\n          htmlContainer = document.createElement('div'); // Just a container where we can parse out the desired contents\n\n        htmlContainer.innerHTML = finalHTML;\n        panelElement = htmlContainer.firstElementChild;\n        removeUnsupportedContent(panelElement);\n        getContainer().appendChild(panelElement);\n\n        toggleCardActive(panelElement.firstElementChild, true);\n\n        if (-- panelsToLoad === 0) {\n          events.emit('bp/content-loaded');\n        }\n      }\n    });\n  }\n\n  function getContainer() {\n    return byId(BP_CONST.BP_CONTAINER_ID);\n  }\n\n  function getPanelElement(panelName) {\n    return document.getElementById('scp-' + panelName);\n  }\n\n  // Add useful attributes to various elements, based on elemTypes\n  function addSemanticSugar(html) {\n    var INTERACTIVE =  ' class=\"scp-hand-cursor scp-tabbable';\n    return html\n      .replace(/(<sc-button )/g, '<sc-button role=\"button\" ')\n      .replace(/<sc-menuitem /g, '<sc-menuitem role=\"button\"' + INTERACTIVE+ '\" ')\n      .replace(/<sc-card /g, '<sc-card role=\"tabpanel\" ')\n      .replace(/<sc-link /g, '<sc-link role=\"button\"' + INTERACTIVE+ '\" ')\n      .replace(/<sc-tab /g, '<sc-link role=\"tab\" aria-selected=\"false\"' + INTERACTIVE+ '\" ')\n      .replace(/<\\/sc-tab/g, '</sc-link')\n      .replace(/<sc-normal-range /g, '<input type=\"range\"' + INTERACTIVE + ' scp-normal-range\" ')\n      .replace(/<\\/sc-normal-range>/g, '</input>')\n      .replace(/<sc-hue-range /g, '<input type=\"range\"' + INTERACTIVE + ' scp-hue-range\" ')\n      .replace(/<\\/sc-hue-range>/g, '</input>');\n  }\n\n  // Remove elements unless required by the site config\n  function removeAllElements(panelElement, elementsToRemoveSelector) {\n    function hide(elements) {\n      var index = elements.length,\n        element;\n      while (index--) {\n        element = elements[index];\n        element.parentNode.removeChild(element);\n      }\n    }\n\n    var elementsToRemove = panelElement.querySelectorAll(elementsToRemoveSelector);\n\n    hide(elementsToRemove);\n  }\n\n  function removeUnsupportedContent(panelElement) {\n    if (!platform.featureSupport.themes) {\n      removeAllElements(panelElement, '#scp-theme-settings,#scp-theme-settings-tab');\n    }\n  }\n\n  function onPanelUpdate() {\n    var panelName = state.getSecondaryPanelName(),\n      willBeActive = panelName && PANELS_WITH_CARDS.hasOwnProperty(panelName),\n      addOrRemoveFn = willBeActive ? 'addEventListener' : 'removeEventListener',\n      bpContainer = byId(BP_CONST.BP_CONTAINER_ID);\n\n    // Event listeners\n    if (isActive !== willBeActive) {\n      byId(BP_CONST.PREV_ID)[addOrRemoveFn]('click', prevCard);\n      byId(BP_CONST.NEXT_ID)[addOrRemoveFn]('click', nextCard);\n\n      // TODO: This should be moved into the controller, somehow.\n      // bpContainer[addOrRemoveFn]('keydown', onKeyDown);\n\n      bpContainer[addOrRemoveFn]('click', onClick);\n      bpContainer[addOrRemoveFn]('keydown', onKeyDown);\n    }\n\n    // Active state\n    if (willBeActive) {\n      if (activePanelName !== panelName) {\n        activePanelName = panelName;\n        activePanel = getPanelElement(panelName);\n        moveIndicator();\n        newCardNotification();\n      }\n    }\n    else {\n      activePanelName = null;\n      activePanel = null;\n    }\n\n    isActive = willBeActive;\n  }\n\n  function onClick(evt) {\n    var clickedElem = helper.getEventTarget(evt),\n      linkTarget = clickedElem.getAttribute('data-target');\n\n    if (linkTarget) {\n      if (linkTarget.charAt(0) === '#') {\n        // Help target\n        require(['info/info'], function(info) {\n          info.showHelp(linkTarget.substring(1));\n        });\n      }\n      else {\n        // Card link\n        selectNewCard(byId(linkTarget), true);\n      }\n    }\n  }\n\n  function onKeyDown(event) {\n    var LEFT  = 37,\n      RIGHT = 39;\n    if (event.target.localName !== 'input') {\n      if (event.keyCode === LEFT) {\n        switchCard(-1);\n      }\n      else if (event.keyCode === RIGHT) {\n        switchCard(1);\n      }\n    }\n  }\n\n  function newCardNotification(isFromLink) {\n    events.emit('bp/did-show-card', getActiveCard().id, getActiveTab(), isFromLink);\n  }\n\n\n// This interferes with slider usage which also needs left/right arrow keys\n//    function onKeyDown(evt) {\n//      var LEFT     = 37,\n//        RIGHT    = 39;\n//\n//      if (evt.keyCode === LEFT) {\n//        prevCard();\n//      }\n//      else if (evt.keyCode === RIGHT) {\n//        nextCard();\n//      }\n//    }\n\n\n  function toggleCardActive(cardElement, isActive) {\n    if (isActive) {\n      cardElement.className = cardElement.className + ' scp-active';\n    }\n    else {\n      cardElement.className = cardElement.className.replace('scp-active', '');\n    }\n  }\n\n  function getActiveTab() {\n    var activeCard = getActiveCard(),\n      tabId = activeCard.getAttribute('aria-labelledby');\n    return document.getElementById(tabId);\n  }\n\n  function moveIndicator() {\n    if (!activePanel) {\n      return;\n    }\n    var chosenItem = getActiveTab(),\n      bpScale = state.get('scale'),\n      indicator = activePanel.querySelector('.scp-card-indicator'),\n      indicatorRect = indicator.getBoundingClientRect(),\n      chosenItemRect = chosenItem.getBoundingClientRect(),\n      choseItemLeft = chosenItemRect.left - indicatorRect.left,\n      indicatorLeft = -442 + (choseItemLeft + chosenItemRect.width / 2) / bpScale,\n      previouslyChosen = chosenItem.parentNode.querySelector('[aria-selected=\"true\"]');\n\n    // Reset old selection\n    if (previouslyChosen) {\n      previouslyChosen.setAttribute('aria-selected', 'false');\n    }\n\n    // Set indicator\n    inlineStyle(indicator).backgroundPosition = indicatorLeft + 'px 0';\n    chosenItem.setAttribute('aria-selected', 'true');\n  }\n\n  function isDisabled(id) {\n    return byId(id).hasAttribute('aria-disabled');\n  }\n\n  function getActiveCard() {\n    return activePanel && activePanel.getElementsByClassName('scp-active')[0];\n  }\n\n    /**\n     * Switch to a new card\n     * @param direction 1 for next card, -1 for previous\n     * @param fromCard (optional) Card to navigate to next/prev from. If not specified will use current active card\n     */\n  function switchCard(direction, fromCard) {\n    var activeCard = fromCard || getActiveCard(),\n      cardToSelect;\n\n    if (activeCard) {\n      cardToSelect = direction === 1 ? activeCard.nextElementSibling : activeCard.previousElementSibling;\n      if (!cardToSelect) {\n        cardToSelect = direction === 1 ? activePanel.firstElementChild : activePanel.lastElementChild;\n      }\n\n      if (!selectNewCard(cardToSelect)) {\n        switchCard(direction, cardToSelect);\n      }\n    }\n  }\n\n  // Returns true on success\n  function selectNewCard(cardToSelect, isFromLink) {\n    if (cardToSelect) {\n      // Always skip advanced cards for now\n      if (cardToSelect.localName === 'sc-card' && !cardToSelect.hasAttribute('data-advanced')) {\n        toggleCardActive(getActiveCard(), false);\n        toggleCardActive(cardToSelect, true);\n        moveIndicator();\n        newCardNotification(isFromLink);\n        // At first, back button is disabled when on first card\n        // However, once we've gone forward we allow backwards cycling\n        byId(BP_CONST.PREV_ID).removeAttribute('aria-disabled');\n        return true;\n      }\n    }\n\n  }\n\n  function nextCard() {\n    switchCard(1);\n  }\n\n  function prevCard() {\n    if (!isDisabled(BP_CONST.PREV_ID)) {\n      switchCard(-1);\n    }\n  }\n\n  function init() {\n    if (isInitialized) {\n      return;\n    }\n\n    isInitialized = true;\n\n    loadPanelContents('settings');\n    loadPanelContents('tips');\n\n    events.on('bp/did-open-subpanel', onPanelUpdate);\n  }\n\n  return {\n    init: init\n  };\n});\n\n","sitecues.define('bp-secondary/bp-secondary-features',[\n  'run/bp/constants',\n  'bp-secondary/tips',\n  'bp-secondary/settings',\n  'bp-secondary/feedback',\n  'bp-secondary/about',\n  'bp-secondary/cards'\n], function(BP_CONST,\n              tips,\n              settings,\n              feedback,\n              about,\n              cards) {\n\n  var featureDefs = {\n    tips: {\n      module: tips,\n        menuButtonId: BP_CONST.TIPS_BUTTON_ID,\n        labelId: BP_CONST.TIPS_LABEL_ID,\n        panelId: BP_CONST.TIPS_CONTENT_ID\n    },\n    settings: {\n      module: settings,\n        menuButtonId: BP_CONST.SETTINGS_BUTTON_ID,\n        labelId: BP_CONST.SETTINGS_LABEL_ID,\n        panelId: BP_CONST.SETTINGS_CONTENT_ID\n    },\n    feedback: {\n      module: feedback,\n        menuButtonId: BP_CONST.FEEDBACK_BUTTON_ID,\n        labelId: BP_CONST.FEEDBACK_LABEL_ID,\n        panelId: BP_CONST.FEEDBACK_CONTENT_ID\n    },\n    about: {\n      module: about,\n        menuButtonId: BP_CONST.ABOUT_BUTTON_ID,\n        menuButtonHelperId: BP_CONST.ABOUT_ROTATE_HELPER_ID,\n        animatedImageId: BP_CONST.ABOUT_CONTENT_IMAGE_ID,\n        labelId: BP_CONST.ABOUT_LABEL_ID,\n        panelId: BP_CONST.ABOUT_CONTENT_ID,\n        heightAnimationDelay: 1200\n    }\n  };\n\n  function init() {\n    about.init();\n    feedback.init();\n    settings.init();\n    tips.init();\n    cards.init();\n  }\n\n  return {\n    featureDefs: featureDefs,\n    init: init\n  };\n});\n\n","/**\n * Secondary panel including animations\n */\nsitecues.define(\n  'bp-secondary/bp-secondary',[\n    'run/bp/constants',\n    'run/bp/model/state',\n    'run/bp/view/view',\n    'run/bp/helper',\n    'bp-expanded/view/transform-animate',\n    'bp-expanded/view/transform-util',\n    'run/locale',\n    'run/platform',\n    'bp-secondary/insert-secondary-markup',\n    'bp-secondary/bp-secondary-features',\n    'run/events',\n    'mini-core/native-global',\n    'run/inline-style/inline-style'\n  ],\n  function (\n    BP_CONST,\n    state,\n    view,\n    helper,\n    animate,\n    transformUtil,\n    locale,\n    platform,\n    markup,\n    secondaryFeatures,\n    events,\n    nativeGlobal,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var BUTTON_DROP_ANIMATION_MS = 800,\n    ENABLED_PANEL_TRANSLATE_Y = 0,\n    DISABLED_PANEL_TRANSLATE_Y = -198,\n    MORE_BUTTON_ROTATION_ENABLED = -180,\n    runningAnimations = [],\n    origPanelContentsRect,\n    origOutlineHeight,\n    origFillHeight,\n    isActive = false,\n    isInitialized,\n    hasOpened,\n    fadeInTimer,\n    animateHeightTimer,\n    animationsCompleteTimer,\n    features = secondaryFeatures.featureDefs,\n\n    // Oft-used functions. Putting it in a variable helps minifier, convenience, brevity\n    byId = helper.byId,\n    CONTENTS_HEIGHT = 780;\n\n  /********************** UTIL **************************/\n\n  // TODO code related to the individual features should move into bp-secondary-features.js\n  function forEachFeature(fn) {\n    for (var feature in features) {\n      if (features.hasOwnProperty(feature)) {\n        fn(features[feature]);\n      }\n    }\n  }\n\n  /**\n   * Notify the entire panel that changes have occurred\n   * @param featureName or falsey value for button menu\n   */\n  function updateGlobalState(featureName, isSecondaryExpanding) {\n    state.set('secondaryPanelName', featureName || 'button-menu');\n    state.set('isSecondaryExpanding', isSecondaryExpanding);\n    state.set('wasMouseInPanel', false); // When panel shrinks mouse needs to go back inside of it before mouseout closes again\n    view.update();\n  }\n\n  function getBPContainer() {\n    return byId(BP_CONST.BP_CONTAINER_ID);\n  }\n\n  function getSecondary() {\n    return byId(BP_CONST.SECONDARY_ID);\n  }\n\n  function getMoreButton() {\n    return byId(BP_CONST.MORE_BUTTON_CONTAINER_ID);\n  }\n\n  function getBottom() {\n    return byId(BP_CONST.BOTTOM_MORE_ID);\n  }\n\n  function getShadow() {\n    return byId('scp-shadow');\n  }\n\n  function getOutlineFill() {\n    return byId('scp-secondary-fill');\n  }\n\n  function getSecondaryOutline() {\n    return byId('scp-secondary-outline');\n  }\n\n  /********************** ANIMATIONS **************************/\n\n  // When something major happens, such as an action to open a new panel, we cancel all current animations\n  function finishAllAnimations() {\n    runningAnimations.forEach(function (animation) {\n      animation.finishNow();\n    });\n    clearTimeout(fadeInTimer);\n    clearTimeout(animateHeightTimer);\n    clearTimeout(animationsCompleteTimer);\n    runningAnimations.length = 0;\n  }\n\n  // Create an animation and store it in runningAnimations so we can cancel it if need be\n  function createAnimation(elems, values, duration, onFinishFn) {\n    nativeGlobal.setTimeout(function() {\n      var newAnimation = animate.animateTransforms(elems, values, duration, onFinishFn);\n      runningAnimations.push(newAnimation);\n  }, 18); // Wait one frame, for Firefox\n\n}\n\n  // Move up to make sure we fit onscreen when the secondary feature expands\n  function getAmountToShiftSecondaryTop() {\n    var\n      panelTop = byId(BP_CONST.MAIN_OUTLINE_ID).getBoundingClientRect().top,\n      secondaryBottom = panelTop + CONTENTS_HEIGHT,\n      FUDGE_FACTOR = 190, // Extra space at bottom -- for more button and just space itself\n      MIN_TOP = 10,\n      screenBottomOverlap = secondaryBottom - FUDGE_FACTOR - window.innerHeight;\n\n    // Don't shift above top of screen, and only shift up (or not at all)\n    return Math.max(Math.min(screenBottomOverlap, panelTop - MIN_TOP), 0);\n  }\n\n  function animateButtonMenuDrop(willEnable) {\n\n    var secondaryId = BP_CONST.SECONDARY_ID,\n      secondaryPanel = byId(secondaryId),\n      fromTranslateY = willEnable? DISABLED_PANEL_TRANSLATE_Y : ENABLED_PANEL_TRANSLATE_Y,\n      toTranslateY = willEnable? ENABLED_PANEL_TRANSLATE_Y : DISABLED_PANEL_TRANSLATE_Y,\n      moreBtnEndRotation = willEnable ? MORE_BUTTON_ROTATION_ENABLED : 0,\n      moreButtonTransform = {\n        translateY: willEnable ? toTranslateY : 0,\n        rotate: moreBtnEndRotation\n      },\n      secondaryPanelTransform = {\n        translateY: toTranslateY\n      };\n\n\n    function onFinish() {\n      secondaryFeatures.init();\n      state.set('isSecondaryPanel', willEnable);\n      view.update(true);\n      updateMoreButtonLabel(willEnable);\n    }\n\n    finishAllAnimations();\n\n    transformUtil.setElemTransform(secondaryPanel, { translateY : fromTranslateY}); // Starting point\n\n    createAnimation(\n      [secondaryPanel, getMoreButton()],\n      [secondaryPanelTransform, moreButtonTransform],\n      BUTTON_DROP_ANIMATION_MS, onFinish);\n  }\n\n  function getGeometryTargets(featureName, menuButton) {\n    var\n      feature = features[featureName],\n      origMenuBtnTransforms = BP_CONST.TRANSFORMS[menuButton.id],\n      panelContentsHeight = CONTENTS_HEIGHT,\n      baseGeometryTargets = {\n        false: {  // Feature disabled\n          outlineHeight: origOutlineHeight,\n          menuBtnTranslateX: origMenuBtnTransforms.translateX,\n          menuBtnRotate: 0,  // Will be used by icons that roll\n          bpContainerTranslateY: 0\n        },\n        true: {   // Feature enabled\n          outlineHeight: panelContentsHeight + 103, // The outline\n          menuBtnTranslateX: 26, // The icon rolls left by default\n          menuBtnRotate: 0,    // Will be used by the icons that roll\n          bpContainerTranslateY: getAmountToShiftSecondaryTop()\n        }\n      };\n\n    return feature.module.getGeometryTargets(baseGeometryTargets);\n  }\n\n  function getCurrentOutlineHeight() {\n    function getOutlineSVG() {\n      return byId(BP_CONST.MAIN_OUTLINE_BORDER_ID);\n    }\n    var outlinePath = getOutlineSVG().getAttribute('d');\n    return parseInt(outlinePath.split(' ')[2]);\n  }\n\n  function animateFeature(name, doEnable) {\n    var\n      feature = features[name],\n      animatedImageElem = byId(feature.animatedImageId),\n      rotationHelperElem = byId(feature.menuButtonHelperId),\n      menuButton = byId(feature.menuButtonId),\n      bpContainer = getBPContainer(),\n\n      currentBpContainerTransforms = transformUtil.getStyleTransformMap(bpContainer),\n\n      geometryTargets = getGeometryTargets(name, menuButton),\n      toGeo = geometryTargets[doEnable],\n\n      ENABLE_ANIMATION_MS = 1500,\n      DISABLE_ANIMATION_MS = 750,\n\n      wasEnabled = !!getFeaturePanelName(),\n      percentRemaining = (wasEnabled === doEnable) ? 0 : 1,\n      heightAnimationDuration = (doEnable ? ENABLE_ANIMATION_MS : DISABLE_ANIMATION_MS) * percentRemaining,\n      heightAnimationDelay = (doEnable  && feature.heightAnimationDelay) || 0,\n      openFeatureDuration = doEnable && feature.heightAnimationDelay ? ENABLE_ANIMATION_MS : heightAnimationDuration,\n      animationsCompleteMs = Math.max(openFeatureDuration, heightAnimationDelay + heightAnimationDuration);  // When is feature fully visible\n\n    function fadeInTextContentWhenLargeEnough() {\n      fadeInTimer = nativeGlobal.setTimeout(function () {\n        state.set('isSecondaryExpanding', false);\n        view.update();\n      }, heightAnimationDelay + heightAnimationDuration * 0.7);\n    }\n\n    function onAnimationsComplete() {\n      state.set('isSecondaryExpanded', doEnable);\n      view.update(true);\n    }\n\n    function animateHeight() {\n      var newPanelHeight = toGeo.outlineHeight,\n        newTranslateY = currentBpContainerTransforms.translateY - toGeo.bpContainerTranslateY,\n        bottomTranslateY = newPanelHeight - origOutlineHeight,\n        BOTTOM_Y_OFFSET = -188,\n        moreButtonTransform = {\n          translateY: newPanelHeight + BOTTOM_Y_OFFSET\n        },\n        bottomTransform = {\n          translateY: newPanelHeight + BOTTOM_Y_OFFSET\n        },\n        outlineFillTransform = {\n          scale: (newPanelHeight / origFillHeight),\n          scaleType: 'scaleY'\n        },\n        secondaryOutlineTransform = {\n          translateY: bottomTranslateY\n        },\n        shadowTransform = {\n          translateY: doEnable ? 435 : 0// bottomTranslateY\n\n        },\n        bpContainerTransform = {\n          translateY: newTranslateY\n\n        };\n      createAnimation(\n        [getMoreButton(), getBottom(), getOutlineFill(), getSecondaryOutline(), getShadow(), bpContainer],\n        [moreButtonTransform, bottomTransform, outlineFillTransform, secondaryOutlineTransform, shadowTransform, bpContainerTransform ],\n        heightAnimationDuration\n      );\n    }\n\n    function openFeatureAnimation() {\n      var\n        // Rotations (for the about button) need to be done half and half, otherwise the rotation does not happen\n        // Basically, the browser optimizes a -360deg rotation as 0!\n        // So we do -180 on the parent and -180 on the child\n        // Don't need to use in IE where CSS transitions aren't used with SVG\n        toRotation = toGeo.menuBtnRotate / 2,\n        menuButtonTransform = {\n          translateX: toGeo.menuBtnTranslateX,\n          rotate: toRotation\n        },\n        rotationHelperTransform = {\n          rotate: toRotation\n        },\n        animatedImageTransform = {\n          translateX: toGeo.menuImageTranslateX\n        };\n      createAnimation(\n        [menuButton, rotationHelperElem, animatedImageElem],\n        [menuButtonTransform, rotationHelperTransform, animatedImageTransform],\n        openFeatureDuration);\n    }\n\n    finishAllAnimations();\n\n    if (doEnable && getFeaturePanelName()) {\n      // If we are switching from one panel to another, make sure buttons start from initial state\n      resetButtonStyles();\n    }\n\n    updateGlobalState(doEnable && name, doEnable);\n\n    // Animate the menu button and anything else related to opening the feature\n    openFeatureAnimation();\n\n    // Animate the height at the right time\n    animateHeightTimer = nativeGlobal.setTimeout(animateHeight, heightAnimationDelay);\n\n    animationsCompleteTimer = nativeGlobal.setTimeout(onAnimationsComplete, animationsCompleteMs);\n\n    fadeInTextContentWhenLargeEnough();\n\n    events.emit('bp/will-show-secondary-feature', name);\n  }\n\n  /********************** INTERACTIONS **************************/\n\n  function onMenuButtonClick(e) {\n\n    var featureName = e.currentTarget.getAttribute('data-feature');\n    if (featureName) {\n      toggleFeature(featureName);\n    }\n  }\n\n  function getFeaturePanelName() {\n    var secondaryPanelName = state.getSecondaryPanelName();\n    return features[secondaryPanelName] && secondaryPanelName;\n  }\n\n  /**\n   * Toggle back and forth between main panel and secondary panel\n   */\n  function toggleSecondaryPanel(feature) {\n\n    var featurePanelName = feature || getFeaturePanelName();\n    if (featurePanelName) {\n      toggleFeature(featurePanelName);\n      return;\n    }\n\n    var ENABLED = BP_CONST.SECONDARY_PANEL_ENABLED,\n      DISABLED = BP_CONST.SECONDARY_PANEL_DISABLED,\n      willEnable = state.get('secondaryPanelTransitionTo') !== ENABLED;\n\n    state.set('secondaryPanelTransitionTo', willEnable ? ENABLED : DISABLED);\n    updateGlobalState();\n\n    if (SC_DEV) { console.log('Transitioning secondary panel to mode: ' + state.get('secondaryPanelTransitionTo')); }\n\n    //Text anchors don't work in Edge, and furthermore the secondary panel isn't rendered in Edge until it is enabled\n    //So this is where we have access to the length of the string and can reposition the text elements correctly\n    if (!hasOpened) {\n      hasOpened = true;\n      if (platform.browser.isEdge) {\n        helper.fixTextAnchors(byId(BP_CONST.SECONDARY_ID));\n      }\n    }\n\n    animateButtonMenuDrop(willEnable);\n\n    toggleMouseListeners(willEnable);\n  }\n\n  function updateMoreButtonLabel(doPointToMainPanel) {\n    nativeGlobal.setTimeout(function() {\n      var labelName = doPointToMainPanel ? 'sitecues_main_panel' : 'more_features',\n        localizedLabel = locale.translate(labelName);\n      byId(BP_CONST.MORE_BUTTON_GROUP_ID).setAttribute('aria-label', localizedLabel);\n    }, 500); // Defer until after focus changes\n  }\n\n  /**\n   * Return truthy value if feature is loaded and available\n   * @param featureName\n   * @returns {*|HTMLElement}\n   */\n  function isFeatureAvailable(featureName) {\n    return byId(features[featureName].panelId);\n  }\n\n  /**\n   * Toggle back and forth between button menu and a feature\n   * @param featureName\n   */\n  function toggleFeature(featureName) {\n    var willEnable = state.getSecondaryPanelName() !== featureName;\n    updateMoreButtonLabel(!willEnable);\n    if (willEnable && !isFeatureAvailable(featureName)) {\n      // The feature was not loaded yet -- wait until loaded\n      events.on('bp/content-loaded', function() {\n        if (state.isButtonMenu()) {  // Make sure user hasn't left the 4 button menu while we waited\n          toggleFeature(featureName);\n        }\n      });\n    }\n    else {\n      events.emit('bp/will-toggle-feature');\n      animateFeature(featureName, willEnable);\n    }\n  }\n\n  function toggleMouseListeners (willBeActive) {\n    if (isActive === willBeActive) {\n      return;  // Nothing to do\n    }\n\n    isActive = willBeActive;\n\n    var addOrRemoveFn = isActive ? 'addEventListener' : 'removeEventListener';\n\n    function addOrRemoveClick(id) {\n      var elem = byId(id);\n      elem[addOrRemoveFn]('click', onMenuButtonClick);\n    }\n\n    forEachFeature(function(feature) {\n      addOrRemoveClick(feature.menuButtonId);\n      addOrRemoveClick(feature.labelId);\n    });\n\n  }\n\n  /********************** INIT / RESET **************************/\n\n  function resetStyles() {\n    var moreButton = getMoreButton(),\n      HEIGHT_RELATED_ELEMS = [ getSecondary(), moreButton, getBottom(), getOutlineFill(), getSecondaryOutline(), getShadow()];\n\n    HEIGHT_RELATED_ELEMS.forEach(function(elem) {\n      transformUtil.setElemTransform(elem, {});\n      if (!platform.browser.isFirefox) {\n        // Do not use will-change in Firefox as it caused SC-3421 on some sites\n        inlineStyle(elem).willChange = 'transform';\n      }\n    });\n\n    resetWebKitLayout(moreButton);\n\n    resetButtonStyles();\n  }\n\n  function resetWebKitLayout(elem) {\n    // Hack to fix Chrome/Safari bug where the more button was in the wrong place after resetting styles\n    // This forces WebKit to reflow the element's layout.\n    var\n      style   = inlineStyle(elem),\n      display = style.display;\n    style.display = 'none';\n    // jshint unused:false\n    var unused = getBPContainer().offsetHeight; // Force layout refresh\n    style.display = display;\n  }\n\n  function resetButtonStyles() {\n    // Menu buttons\n    forEachFeature(function(feature) {\n      var button = feature.menuButtonId,\n        transform = BP_CONST.TRANSFORMS[button],\n        buttonElem = byId(button);\n      transformUtil.setElemTransform(buttonElem, transform);\n      if (feature.menuButtonHelperId) {\n        transformUtil.setElemTransform(byId(feature.menuButtonHelperId), {});\n      }\n      if (feature.animatedImageId) {\n        transformUtil.setElemTransform(byId(feature.animatedImageId), {});\n      }\n      resetWebKitLayout(buttonElem);\n    });\n  }\n\n  function onPanelClose() {\n\n    if (state.isSecondaryPanelRequested()) {\n      // Toggle current panel off\n      events.emit('bp/did-toggle-' + state.getSecondaryPanelName(), false);\n    }\n\n    finishAllAnimations();\n    resetStyles();\n\n    // Next time panel opens, it will be at the main panel;\n    // Therefore, the more button label for screen readers needs to indicate the secondary panel will open\n    updateMoreButtonLabel();\n\n    state.set('secondaryPanelTransitionTo', BP_CONST.SECONDARY_PANEL_DISABLED);\n\n    updateGlobalState();\n\n    toggleMouseListeners(false);\n  }\n\n  function init() {\n    if (!isInitialized) {\n      isInitialized = true;\n\n      // Insert the markup for the secondary panel\n      markup.init();\n      resetButtonStyles();\n\n      origOutlineHeight = getCurrentOutlineHeight();\n      origFillHeight = parseFloat(getOutlineFill().getAttribute('height'));\n      origPanelContentsRect = document.getElementById(BP_CONST.MAIN_CONTENT_FILL_ID).getBoundingClientRect();\n\n      events.on('bp/will-shrink', onPanelClose);\n\n      events.emit('bp/did-init-secondary');\n    }\n  }\n\n  return {\n    init: init,\n    toggleSecondaryPanel: toggleSecondaryPanel,\n    toggleFeature: toggleFeature\n  };\n\n});\n\n","\nsitecues.define(\"bp-secondary\", function(){});\n"]}