{"version":3,"sources":["../../config-wrap-start-default.js","theme/color-choices.js","theme/custom-site-theme.js","theme/theme.js","../../../../../../module-create.js"],"names":["sitecues","define","$","colorUtil","hslToRgb","rgbToHsl","getReducedIntensity","rgba","intensity","hsl","r","g","b","l","lightenedRgb","h","s","a","isHueBrightEnoughForDarkTheme","hue","getClosestGoodHueForDarkTheme","getSampleElements","selector","REMOVE_PSEUDO_CLASSES_AND_ELEMENTS","$result","replace","ex","isInDarkParagraph","$sampleElements","luminosity","isInDarkPara","each","index","sampleElement","sampleElementStyle","getComputedStyle","display","parentLuminosity","parentElement","parentStyle","parentInnerText","innerText","sampleInnerText","trim","length","backgroundColor","getLuminanceFromColorName","color","isWithDarkForeground","css","computeContrastEnhancementDirection","style","parsedVal","prop","isOnDarkBg","isOnDarkBackground","isWithDarkFg","getContrastEnhancementDirection","contrastEnhancementDirection","direction","getSaturationImpactOnContrast","saturation","bold","colorChangeIntensity","textShadowIntensity","newLightness","power","factor","newAlpha","Math","pow","min","darkness","newDarkness","lightnessDiff","abs","MIN_SIGNIFICANT_LIGHTNESS_DIFF","isSignificantChange","returnVal","extend","textShadow","getSaturation","colorizeGrayText","textHue","FOREGROUND_MIXIN_INTENSITY","grayness","mixInRatio","mixInRgba","mixRgbaColors","dark","colorizedRgba","newRgba","origLightness","bgAddedLightness","bgPreservationFactor","newHue","foregroundIntensity","max","origRgba","reductionRatio","mixChannel","origChannelValue","mixInChannelValue","round","warm","site","urls","isInitialized","SITES_WITH_CUSTOM_THEMES","s-0000ee0c","s-05fd6c66","s-0796b61d","s-167ff09a","s-190630d2","s-2158b12a","s-252baed8","s-25cecd79","s-389f76da","s-4bfe60ab","s-570759e3","s-6d6f89a3","s-73dd0fcf","s-7b90f601","s-9afa6ab9","s-acc8f046","s-b427fffb","s-c27fa71d","s-f2a9dde2","insertSheet","siteId","cssLink","document","createElement","cssUrl","resolveResourceUrl","setAttribute","id","querySelector","appendChild","init","getSiteId","hasOwnProperty","Promise","pref","styleService","platform","colorChoices","customTheme","events","nativeGlobal","inlineStyle","cachedStyleInfo","shouldRepaintToEnsureFullCoverage","isPanelExpanded","isRepaintNeeded","originalBodyBackgroundColor","isOriginalThemeDark","finishThemeTimer","requestedThemeName","requestedThemePower","requestedThemeTextHue","currentThemeName","currentThemePower","currentThemeTextHue","basicThemeSupportReady","imageInversionSupportReady","imageInverter","THEME_STYLESHEET_ID","TRANSITION_STYLESHEET_ID","REPAINT_MS","isCurrentlyInverted","didInvertImages","MAX_USER_SPECIFIED_HUE","TRANSITION_CLASS_FAST","TRANSITION_CLASS_SLOW","TRANSITION_MS_FAST","TRANSITION_MS_SLOW","DEFAULT_INTENSITY","URL_REGEXP","GRADIENT_REGEXP","BUTTON_REGEXP","finalizeTheme","repaintPage","removeClass","require","bpAdaptive","adaptToSitecuesThemeChange","onThemeChange","get","needToApplyRequestedTheme","applyRequestedTheme","getColorFn","themeName","toggleBodyClasses","Object","keys","forEach","checkName","toggleClass","needToApplyImageInversion","requestedImageInversion","isDarkTheme","applyImageInversion","doInvertImages","toggle","applyColors","colorMapFn","themeCss","getThemeCssText","isInversionRequested","isFastTransition","updateSheet","text","addClass","setTimeout","clearTimeout","initThemeSupport","then","initImageInversions","allRequestedThemeSupportReady","bgStyles","fgStyles","bgImageStyles","resolve","getAllMatchingStylesCustom","getSignificantBgColor","getFgColor","getSignificantBgImageProperties","concat","prepareTransitionCss","inverter","originalBg","themedBg","isDarkColor","getThemeTransitionCss","transitionMs","className","selectorBuilder","transitionCss","themeStyle","selectors","type","value","rule","selectorText","split","bgSelector","createRule","newValue","important","splitOutsideParens","str","splitter","nextSplitIndex","nextItem","splitterLength","resultArray","lastSplitIndex","nextParenIndex","indexOf","lookFor","startIndex","substring","push","getThemedGradientCssText","gradientType","gradientVal","gradientParams","newGradientParams","map","mapParam","param","trimmedParam","words","getRgbaIfLegalColor","getColorString","join","createTextShadowRule","size","right","toFixed","below","shadowValue","createShadow","x","y","styleSheetText","formFixes","isButtonRule","override","documentElement","restore","extractColorFromBgShorthand","bgShorthand","lastIndexRgb","lastIndexOf","possibleColors","browser","isFirefox","substr","cssStyleDecl","imageUrl","gradient","bgImagePropVal","cssText","getCssUrl","getBackgroundGradient","getPropertyPriority","propVal","match","bgStyle","background","colorString","getRgba","fgStyle","fgLuminosity","bgRgba","getSanitizedThemeName","name","getSanitizedThemePower","getSanitizedHue","isPanelOpen","getDocumentBackgroundColor","isChrome","version","defineHandler","bindListener","set","onPanelExpand","onPanelShrink","on"],"mappings":"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","file":"theme.js.map","sourcesContent":["\"use strict\";\n","/**\n *  The available color theme choices that can be used by the color engine\n */\n\n// Do we want to do:\n// - border color\n// Reverse colors:\n// - sitecues.com positioning\n// - Bad photo reversal guesses:\n//   http://www.leadingage.org/ and // - http://www.leadingage.org/\n\nsitecues.define('theme/color-choices',['$', 'page/util/color'], function ($, colorUtil) {\n  var hslToRgb = colorUtil.hslToRgb,\n    rgbToHsl = colorUtil.rgbToHsl;\n\n  function getReducedIntensity(rgba, intensity) {\n    var hsl = rgbToHsl(rgba.r, rgba.g, rgba.b);\n    if (hsl.l < 0.5) {\n      hsl.l = 1 - intensity * (1 - hsl.l);\n    }\n    else {\n      hsl.l *= intensity;  // Invert lightness\n    }\n    var lightenedRgb = hslToRgb(hsl.h, hsl.s, hsl.l);\n    lightenedRgb.a = rgba.a;\n    return lightenedRgb;\n  }\n\n//    function getInvertedLightness(rgba) {\n//      var hsl = rgbToHsl(rgba.r, rgba.g, rgba.b);\n//      hsl.l = 1 - hsl.l;  // Invert lightness\n//      var invertedRgb = hslToRgb(hsl.h, hsl.s, hsl.l);\n//      invertedRgb.a = rgba.a;\n//      return invertedRgb;\n//    }\n\n  // style object is as follows:\n  // rgba: color\n  // prop: property name ('background', 'background-color' or 'color')\n\n//    function monochrome (style, intensity) {\n//      var mixInHsl = (style.prop === 'color') ? monoForegroundHsl : monoBackgroundHsl,\n//        rgba = style.parsedVal,\n//        origHsl = rgbToHsl(rgba.r, rgba.g, rgba.b),\n//        origLightness = Math.max(origHsl.l, 1 - origHsl.l);\n//      intensity = Math.max(intensity * origLightness, MIN_INTENSITY);\n//      var newRgba = $.extend({}, rgba, hslToRgb(mixInHsl.h, mixInHsl.s, mixInHsl.l));\n//      return getReducedIntensity(newRgba, intensity);\n//    };\n\n//    function darkWithHue(hue, style, intensity) {\n//      if (style.prop === 'color') {\n//        var rgba = style.parsedVal,\n//          hsl = rgbToHsl(rgba.r, rgba.g, rgba.b),\n//          origLightness = Math.max(Math.max(hsl.l, 1 - hsl.l), 0.5);\n//        intensity = Math.max(origLightness, intensity);\n//        var newRgba = $.extend({}, rgba, hslToRgb(hue, 1, 0.5));\n//        return getReducedIntensity(newRgba, intensity);\n//      }\n//      else {\n//        return getReducedIntensity(BLACK, intensity);\n//      }\n//    }\n//\n  function isHueBrightEnoughForDarkTheme(hue) {\n    return hue <= 0.56 || (hue >= 0.8 && hue <= 0.92);\n  }\n\n  function getClosestGoodHueForDarkTheme(hue) {\n    if (isHueBrightEnoughForDarkTheme(hue)) {\n      return hue;\n    }\n    if (hue >= 0.96) {\n      return 0;\n    }\n    else if (hue >= 0.92) {\n      return 0.92;\n    }\n    else if (hue >= 0.68) {   // .56-.8 is a hole\n      return 0.8;\n    }\n    return 0.56;\n  }\n\n  function getSampleElements(selector) {\n    var REMOVE_PSEUDO_CLASSES_AND_ELEMENTS = /::?[^ ,:.]+/g,\n      $result = $();\n    try {\n      $result = $(selector.replace(REMOVE_PSEUDO_CLASSES_AND_ELEMENTS, ''));\n    }\n    catch (ex) {\n    }\n    return $result;\n  }\n\n  function isInDarkParagraph($sampleElements, luminosity) {\n    var isInDarkPara;\n\n    $sampleElements.each(function (index, sampleElement) {\n      var sampleElementStyle = getComputedStyle(sampleElement);\n      if (sampleElementStyle.display === 'inline') {\n        var parentElement = sampleElement.parentElement,\n          parentStyle = getComputedStyle(parentElement),\n          parentLuminosity,\n          parentInnerText = parentElement.innerText,\n          sampleInnerText = sampleElement.innerText;\n        if (parentInnerText && parentInnerText.trim().length > (sampleInnerText && sampleInnerText.length) &&\n          sampleElementStyle.backgroundColor === parentStyle.backgroundColor) {\n          parentLuminosity = colorUtil.getLuminanceFromColorName(parentStyle.color);\n          if (parentLuminosity !== luminosity) {\n            if (parentLuminosity < 0.3) {\n              isInDarkPara = true;\n              return false; // Stop iterating\n            }\n            if (parentLuminosity > 0.7) {\n              isInDarkPara = false;\n              return false; // Stop iterating\n            }\n          }\n        }\n      }\n    });\n\n    return isInDarkPara;\n  }\n\n  function isWithDarkForeground($sampleElements) {\n    return colorUtil.getLuminanceFromColorName($sampleElements.css('color')) < 0.5;\n  }\n\n  /**\n   * @param {object} style { parsedVal: rgba, selector, prop: 'color', etc. }\n   * @return -1: decrease lightness, 0: do nothing, 1: increase lightness\n   */\n  function computeContrastEnhancementDirection(style) {\n    var rgba = style.parsedVal,\n      luminosity = colorUtil.getLuminanceFromColorName(rgba),\n      $sampleElements;\n\n    if (style.prop === 'color') {\n      // Foreground decision\n      $sampleElements = getSampleElements(style.selector);\n\n      var isInDarkPara = isInDarkParagraph($sampleElements, luminosity);\n      if (typeof isInDarkPara !== 'undefined') {\n        return isInDarkPara ? 1 : -1;\n      }\n\n      // Middle of the road foreground color -- analyze background\n      // If on light background make text darker, and vice-versa\n      var isOnDarkBg = colorUtil.isOnDarkBackground($sampleElements[0]);\n      if (typeof isOnDarkBg !== 'undefined') {\n        return isOnDarkBg ? 1 : -1;\n      }\n\n      return luminosity < 0.5 ? -1 : 1;\n    }\n\n    // Background decision\n    if (luminosity > 0.4 && luminosity < 0.6) {\n      // Not sure about bg, check fg darkness\n      $sampleElements = getSampleElements(style.selector);\n      var isWithDarkFg = isWithDarkForeground($sampleElements);\n      if (typeof isWithDarkFg !== 'undefined') {\n        return isWithDarkFg ? 1 : -1;\n      }\n    }\n    return luminosity < 0.5 ? -1 : 1;\n  }\n\n  function getContrastEnhancementDirection(style) {\n    if (typeof style.contrastEnhancementDirection !== 'undefined') {\n      return style.contrastEnhancementDirection;\n    }\n    var direction = computeContrastEnhancementDirection(style);\n    style.contrastEnhancementDirection = direction; // Cache\n    return direction;\n  }\n\n  function getSaturationImpactOnContrast(saturation) {\n    return 0.3 + saturation * 0.8;\n  }\n\n  function bold(style, intensity) {\n    var colorChangeIntensity = intensity / 1.6 + 0.1,\n      textShadowIntensity = intensity / 3.5,\n      rgba = style.parsedVal,\n      hsl = rgbToHsl(rgba.r, rgba.g, rgba.b),\n      newLightness = hsl.l,\n      saturation = hsl.s, // Reduce contrast change for saturated colors so that we remain colorful\n      power = (1 - colorChangeIntensity) * 4 * getSaturationImpactOnContrast(saturation) + (style.prop === 'color' ? 0 : 0.2),\n      factor = style.prop === 'color' ? 2 : 6,\n      contrastEnhancementDirection = getContrastEnhancementDirection(style),\n      newAlpha = rgba.a;\n\n    if (contrastEnhancementDirection < 0) {\n      // Reduce lightness\n      newLightness = hsl.l - Math.pow(hsl.l / factor, power) * colorChangeIntensity;\n      // Also increase the alpha if it's < 1\n      // This multiplies the alpha, so that if the original is fully transparent it remains transparent\n      if (newAlpha < 1) {\n        newAlpha = Math.min(1, newAlpha * (colorChangeIntensity + 1));\n      }\n    }\n    else if (contrastEnhancementDirection > 0) {\n      // Reduce darkness\n      var darkness = 1 - hsl.l,\n        newDarkness = darkness - Math.pow(darkness / factor, power) * colorChangeIntensity;\n      newLightness = 1 - newDarkness;\n    }\n\n    var lightnessDiff = Math.abs(newLightness - hsl.l),\n      MIN_SIGNIFICANT_LIGHTNESS_DIFF = 0.01,\n      isSignificantChange = lightnessDiff > MIN_SIGNIFICANT_LIGHTNESS_DIFF || newAlpha !== rgba.a,\n      returnVal = isSignificantChange ? $.extend({a: newAlpha}, hslToRgb(hsl.h, hsl.s, newLightness)) : rgba;\n\n    if (style.prop === 'color') {\n      // Make the text thicker\n      returnVal = $.extend({}, returnVal, {textShadow: textShadowIntensity});\n    }\n    return returnVal;\n  }\n\n//    var yowza = 0;\n//    function darkCreative (style, intensity) {\n//\n//      // Hues from .1 - .56 and .84 - .86 are dark enough\n//      var MIN_CONTRAST_RATIO = 4.4,\n//        NUM_COLORS = 50,\n//        newHue,\n//        contrastRatio,\n//        oldYowza = yowza;\n//      while (true) {\n//        yowza = ((yowza + 1) % NUM_COLORS);\n//        newHue = yowza / NUM_COLORS;\n//        contrastRatio = colorUtil.getContrastRatio(hslToRgb(newHue, 1, 0.5), BLACK);\n//        if (contrastRatio > MIN_CONTRAST_RATIO) {\n//          if (SC_DEV) { console.log('--> ' + yowza + ' ' + newHue + ' ' + contrastRatio + ':1'); }\n//          break;\n//        }\n//        if (yowza === oldYowza) {\n//          break;\n//        }\n//      }\n//      return darkWithHue(newHue, style, intensity);\n//    };\n\n  function getSaturation(rgba) {\n    return rgbToHsl(rgba.r, rgba.g, rgba.b).s;\n  }\n\n  function colorizeGrayText(rgba, textHue) {\n    var FOREGROUND_MIXIN_INTENSITY = 0.5,\n      grayness = 1 - getSaturation(rgba),\n      mixInRatio = FOREGROUND_MIXIN_INTENSITY * (grayness + 0.2) / 1.2, // More gray (less saturated)  = more channel reduction, so we can keep colors\n      mixInRgba = hslToRgb(textHue, 1, 0.5);\n    return mixRgbaColors(rgba, mixInRgba, mixInRatio);  // Mix in the opposite color\n  }\n\n  function dark(style, intensity, textHue) {\n    var rgba = style.parsedVal,\n      hsl,\n      colorizedRgba,\n      newRgba,\n      origLightness,\n      newLightness,\n      bgAddedLightness,\n      bgPreservationFactor,\n      newHue,\n      foregroundIntensity = 0.4 + (Math.min(intensity, 0.8) / 1.3),\n      textShadowIntensity = Math.max(0, intensity - 0.8) * 0.6;\n\n    if (style.prop === 'color') {\n      colorizedRgba = (textHue && textHue <= 1) ? colorizeGrayText(rgba, textHue) : rgba;\n      hsl = rgbToHsl(colorizedRgba.r, colorizedRgba.g, colorizedRgba.b);\n      origLightness = Math.max(hsl.l, 1 - hsl.l);\n      newLightness = foregroundIntensity * (origLightness + 0.1);\n      newLightness = newLightness * (1.2 - hsl.s / 6); // Saturated colors should be kept a bit\n      newLightness = Math.max(newLightness, foregroundIntensity / 3);\n      newLightness = Math.min(newLightness, 1);\n      newHue = getClosestGoodHueForDarkTheme(hsl.h);\n      newRgba = $.extend({}, rgba, hslToRgb(newHue, hsl.s, newLightness));\n      if (textShadowIntensity > 0) {\n        newRgba.textShadow = textShadowIntensity;\n      }\n    }\n    else {\n      hsl = rgbToHsl(rgba.r, rgba.g, rgba.b);\n      bgAddedLightness = (1 - intensity) / 8; // Add a little lightness when theme is less intense\n      bgPreservationFactor = 0.6 - intensity / 8;\n      origLightness = hsl.l;\n      newLightness = (origLightness < 0.4 ? origLightness : (1 - origLightness) * 3);\n      newRgba = $.extend({}, rgba, hslToRgb(hsl.h, hsl.s, Math.min(0.16, newLightness) * bgPreservationFactor + bgAddedLightness));\n    }\n    return newRgba;\n  }\n\n//    // Invert all colors using HSL inversion\n//    hslInvert (style, intensity) {\n//      return getReducedIntensity(getInvertedLightness(style.parsedVal), intensity);\n//    };\n//\n//    // Invert all colors using RGB inversion\n//    rgbInvert (style, intensity) {\n//      var rgba = style.parsedVal,\n//        newRgba = {\n//          r: 255 - rgba.r,\n//          g: 255 - rgba.g,\n//          b: 255 - rgba.b,\n//          a: rgba.a\n//        };\n//      return getReducedIntensity(newRgba, intensity);\n//    };\n\n  function mixRgbaColors(origRgba, mixInRgba, mixInRatio) {\n    var reductionRatio = 1 - mixInRatio;\n\n    function mixChannel(origChannelValue, mixInChannelValue) {\n      return Math.min(Math.round(origChannelValue * reductionRatio + mixInChannelValue * mixInRatio), 255);\n    }\n\n    return {\n      r: mixChannel(origRgba.r, mixInRgba.r),\n      g: mixChannel(origRgba.g, mixInRgba.g),\n      b: mixChannel(origRgba.b, mixInRgba.b),\n      a: origRgba.a\n    };\n  }\n\n  function warm(style, intensity) {\n    var rgba = $.extend({}, style.parsedVal);\n\n    intensity = 1 - intensity / 3;\n\n    if (style.prop === 'color' && rgbToHsl(rgba.r, rgba.g, rgba.b).l < 0.2) {\n      return getReducedIntensity(rgba, intensity - 0.15);\n    }\n\n    var mixInRatio = /*rgba.b * 0.001 */ 0.2 * (1 - intensity),\n      mixInRgba = hslToRgb(0.15, 1, 0.5);\n\n    return mixRgbaColors(rgba, mixInRgba, mixInRatio);\n  }\n\n  return {\n    dark: dark,\n    bold: bold,\n    warm: warm\n  };\n\n});\n\n","/**\n *  Support alterations to themes for specific websites\n */\n\nsitecues.define('theme/custom-site-theme',['run/conf/site', 'run/conf/urls'], function(site, urls) {\n  // TODO build system could create this variable based on the available themes\n  // var SITES_WITH_CUSTOM_THEMES = '__SITES_WITH_CUSTOM_THEMES__';\n\n  var SITES_WITH_CUSTOM_THEMES = {\n      's-0000ee0c': 1,\n      's-05fd6c66': 1,\n      's-0796b61d': 1,\n      's-167ff09a': 1,\n      's-190630d2': 1,\n      's-2158b12a': 1,\n      's-252baed8': 1,\n      's-25cecd79': 1,\n      's-389f76da': 1,\n      's-4bfe60ab': 1,\n      's-570759e3': 1,\n      's-6d6f89a3': 1,\n      's-73dd0fcf': 1,\n      's-7b90f601': 1,\n      's-9afa6ab9': 1,\n      's-acc8f046': 1,\n      's-b427fffb': 1,\n      's-c27fa71d': 1,\n      's-f2a9dde2': 1\n    },\n    isInitialized;\n\n  function insertSheet(siteId) {\n    var cssLink = document.createElement('link'),\n      cssUrl = urls.resolveResourceUrl('css/site-themes/' + siteId + '.css');\n    cssLink.setAttribute('rel', 'stylesheet');\n    cssLink.setAttribute('href', cssUrl);\n    cssLink.id = 'sitecues-js-custom-theme';\n    document.querySelector('head').appendChild(cssLink);\n  }\n\n  function init() {\n    if (!isInitialized) {\n      isInitialized = true;\n\n      var siteId = site.getSiteId();\n\n      if (SITES_WITH_CUSTOM_THEMES.hasOwnProperty(siteId)) {\n        insertSheet(siteId);\n      }\n    }\n  }\n\n  return {\n    init: init\n  };\n});\n\n","/**\n *  Support color themes in page\n */\n\nsitecues.define(\n  'theme/theme',[\n    '$',\n    'Promise',\n    'run/conf/preferences',\n    'page/style-service/style-service',\n    'run/platform',\n    'theme/color-choices',\n    'page/util/color',\n    'theme/custom-site-theme',\n    'run/events',\n    'mini-core/native-global',\n    'run/inline-style/inline-style'\n  ],\n  function(\n    $,\n    Promise,\n    pref,\n    styleService,\n    platform,\n    colorChoices,\n    colorUtil,\n    customTheme,\n    events,\n    nativeGlobal,\n    inlineStyle\n  ) {\n  'use strict';\n\n  var THEME_STYLESHEET_ID = 'sitecues-js-theme',\n    TRANSITION_STYLESHEET_ID = 'sitecues-js-theme-transition',\n    REPAINT_MS = 40,\n    cachedStyleInfo,\n    // TODO remove once no longer necessary -- should be soon\n    shouldRepaintToEnsureFullCoverage,\n    isPanelExpanded,\n    isRepaintNeeded,\n    isInitialized,\n    originalBodyBackgroundColor,\n    isOriginalThemeDark,\n    isCurrentlyInverted = false,   // Is dark theme currently applied\n    didInvertImages = false, // Are images currently inverted\n    finishThemeTimer,\n    requestedThemeName,\n    requestedThemePower,\n    requestedThemeTextHue,\n    currentThemeName,  // one of the theme names from color-choices.js\n    currentThemePower,  // .01 - 1\n    currentThemeTextHue,  // 0 - 1\n    basicThemeSupportReady,  // Promise that style info is ready\n    imageInversionSupportReady, // Promise that image inversion service is ready\n    imageInverter,\n    MAX_USER_SPECIFIED_HUE = 1.03,   // If > 1.0 then use white\n    TRANSITION_CLASS_FAST = 'sc-animate-theme-fast',\n    TRANSITION_CLASS_SLOW = 'sc-animate-theme-slow',\n    TRANSITION_MS_FAST = 300,\n    TRANSITION_MS_SLOW = 1400,\n    DEFAULT_INTENSITY = 0.61,  // Must match default slider position in settings-template.hbs #scp-theme-power\n    URL_REGEXP = /url\\((?:(?:[\\'\\\" ])*([^\\\"\\'\\)]+)[\\'\\\" ]*)/i,\n    GRADIENT_REGEXP = /^\\s*([\\w-]+\\s*gradient)\\((.*)\\).*$/i,\n    BUTTON_REGEXP = /(?:^| |,)(?:(?:input\\s*\\[\\s*type\\s*=\\s*\\\"(?:button|color|submit|reset)\\\"\\s*\\]\\s*)|button)(?:$| |,|:)/;\n\n  // ---- PUBLIC ----\n\n  function finalizeTheme() {\n    if (shouldRepaintToEnsureFullCoverage) {\n      repaintPage();\n    }\n\n    // Only our color changes should use our transitions\n    $('html').removeClass(TRANSITION_CLASS_FAST + ' ' + TRANSITION_CLASS_SLOW);\n\n    if (!SC_EXTENSION) {\n      // Don't do this in extension -- there is no badge\n      require(['bp-adaptive/bp-adaptive'], function (bpAdaptive) {\n        bpAdaptive.adaptToSitecuesThemeChange(currentThemeName);\n      });\n    }\n  }\n\n  /**\n   * Apply the current theme to the current document\n   * Uses currentThemeName, currentThemePower and currentThemeTextHue for theme settings\n   */\n  function onThemeChange() {\n\n    // Requested theme name\n    requestedThemeName = pref.get('themeName');\n    requestedThemePower = pref.get('themePower') || DEFAULT_INTENSITY;\n    requestedThemeTextHue = pref.get('themeTextHue');\n\n    if (!requestedThemeName && !currentThemeName) {\n      return; // Still no theme -- power and hue changes do not matter\n    }\n\n    // Relevant theme -- has it changed?\n    if (needToApplyRequestedTheme()) {\n      // New theme settings are different -- apply them!\n      applyRequestedTheme();\n    }\n  }\n\n  function getColorFn(themeName) {\n    return colorChoices[themeName];\n  }\n\n  function toggleBodyClasses() {\n   // Set class sitecues-[themename]-theme on <body> and clear other theme classes\n   Object.keys(colorChoices).forEach(function (checkName) {\n     $('body').toggleClass('sitecues-' + checkName + '-theme', currentThemeName === checkName);\n   });\n  }\n\n  function needToApplyImageInversion() {\n    var requestedImageInversion = isDarkTheme(requestedThemeName);\n    return requestedImageInversion !== didInvertImages;\n  }\n\n  // Apply image inversion if still necessary\n  function applyImageInversion() {\n    var doInvertImages = isDarkTheme(requestedThemeName);\n    if (doInvertImages !== didInvertImages) {\n      imageInverter.toggle(doInvertImages);\n      didInvertImages = doInvertImages;\n    }\n  }\n\n  function applyColors() {\n    var colorMapFn = getColorFn(requestedThemeName);\n\n    if (needToApplyRequestedTheme()) {\n      var themeCss = colorMapFn ? getThemeCssText(colorMapFn, requestedThemePower, requestedThemeTextHue) : '',\n        isInversionRequested = isDarkTheme(requestedThemeName),\n        isFastTransition = isCurrentlyInverted === isInversionRequested;\n\n      // Apply new CSS\n      themeCss = '@media screen {\\n' + themeCss + '\\n}'; // Do not use in print!\n      styleService.updateSheet(THEME_STYLESHEET_ID, {text: themeCss});\n\n      currentThemeName = requestedThemeName;\n      currentThemePower = requestedThemePower || DEFAULT_INTENSITY;\n      currentThemeTextHue = requestedThemeTextHue;\n      isCurrentlyInverted = isInversionRequested;\n\n      // Turn on transitions\n      // We want to transition quickly between similar themes, but slowly when performing a drastic change\n      // such as going from light to dark or vice-versa\n      $('html').addClass(isFastTransition ? TRANSITION_CLASS_FAST : TRANSITION_CLASS_SLOW);\n\n      // Enable site-specific theme changes\n      toggleBodyClasses();\n\n      finishThemeTimer = nativeGlobal.setTimeout(finalizeTheme, isFastTransition ? TRANSITION_MS_FAST : TRANSITION_MS_SLOW);\n    }\n  }\n\n  function needToApplyRequestedTheme() {\n    return requestedThemeName !== currentThemeName ||\n      requestedThemePower !== currentThemePower ||\n      requestedThemeTextHue !== currentThemeTextHue;\n  }\n\n  // Apply colors and image inversion as necessary\n  function applyRequestedTheme() {\n\n    // Cancel previous theme application\n    clearTimeout(finishThemeTimer);\n\n    // Prepare style info\n    basicThemeSupportReady = basicThemeSupportReady || initThemeSupport();\n\n    // Apply image inversions if necessary (depending on most recently requested theme)\n    if (needToApplyImageInversion()) {\n      imageInversionSupportReady = imageInversionSupportReady || basicThemeSupportReady.then(initImageInversions);\n      imageInversionSupportReady.then(applyImageInversion);\n    }\n\n    // Apply the most recently requested new colors\n    var allRequestedThemeSupportReady = imageInversionSupportReady || basicThemeSupportReady;\n    allRequestedThemeSupportReady.then(applyColors);\n  }\n\n  function initThemeSupport() {\n    var bgStyles,\n      fgStyles,\n      bgImageStyles;\n\n    return new Promise(function(resolve) {\n      styleService.init(resolve);\n    }).then(function() {\n      bgStyles = styleService.getAllMatchingStylesCustom(getSignificantBgColor);\n    }).then(function() {\n      fgStyles = styleService.getAllMatchingStylesCustom(getFgColor);\n    }).then(function() {\n      bgImageStyles = styleService.getAllMatchingStylesCustom(getSignificantBgImageProperties);\n      cachedStyleInfo = bgStyles.concat(fgStyles).concat(bgImageStyles);\n    }).then(prepareTransitionCss);\n  }\n\n  function initImageInversions() {\n    return new Promise(function(resolve) {\n      require(['inverter/inverter'], function (inverter) {\n        imageInverter = inverter;\n        resolve();\n      });\n    })\n    .then(function() {\n      return imageInverter.init(cachedStyleInfo);\n    });\n  }\n\n  // Returns true even if not 'dark', but page themed itself dark already\n  function isDarkTheme(themeName) {\n    var colorMapFn = getColorFn(themeName);\n    if (!colorMapFn) {\n      return isOriginalThemeDark;\n    }\n    var originalBg = {\n      prop: 'background-color',\n      parsedVal: originalBodyBackgroundColor\n    };\n    var themedBg = colorMapFn(originalBg, 1);\n    return colorUtil.isDarkColor(themedBg);\n  }\n\n  function getThemeTransitionCss(transitionMs, className) {\n    var selectorBuilder = 'html.' + className +', html.' +\n          className + '> body',\n      transitionCss = '{transition: background-color ' + transitionMs + 'ms;}\\n\\n';\n\n    // Set the transition for every selector in the page that targets a background color\n    cachedStyleInfo.forEach(function(themeStyle) {\n      var type = themeStyle.value.prop,\n        selectors;\n      if (type === 'background' || type === 'background-color') {\n        selectors = themeStyle.rule.selectorText.split(',');\n        selectors.forEach(function(bgSelector) {\n          selectorBuilder += ',.' + className + ' ' + bgSelector;\n        });\n      }\n    });\n\n    return '\\n' + selectorBuilder + transitionCss;\n  }\n\n  function prepareTransitionCss() {\n    // Create or update transition stylesheet if needed\n    var css = getThemeTransitionCss(TRANSITION_MS_FAST, TRANSITION_CLASS_FAST) +\n        getThemeTransitionCss(TRANSITION_MS_SLOW, TRANSITION_CLASS_SLOW);\n    styleService.updateSheet(TRANSITION_STYLESHEET_ID, { text : css });\n  }\n\n  function createRule(prop, newValue, important) {\n    // Check for non-values but allow 0 or false through\n    if (newValue === null || typeof newValue === 'undefined' || newValue === '') {\n      return '';\n    }\n    return prop + ': ' + newValue + (important ? ' !important; ' : '; ');\n  }\n\n  // Split a,b,c(d, e, f), g as\n  // ['a', 'b', 'c(d, e, f)', 'g']\n  function splitOutsideParens(str, splitter) {\n    var length = str.length,  // String to eat as it gets processed left ot right\n      splitterLength = splitter.length,\n      resultArray = [],\n      lastSplitIndex = 0,\n      nextSplitIndex,\n      nextParenIndex = indexOf('('),\n      nextItem;\n    function indexOf(lookFor, startIndex) {\n      var index = str.indexOf(lookFor, startIndex);\n      return index < 0 ? length : index;\n    }\n    while (lastSplitIndex < length) {\n      nextSplitIndex = indexOf(splitter, lastSplitIndex);\n      if (nextParenIndex < nextSplitIndex) {\n        // Found open paren before splitter\n        // get comma after next closed paren\n        nextParenIndex = indexOf(')', nextParenIndex);\n        nextSplitIndex = indexOf(splitter, nextParenIndex);\n        nextParenIndex = indexOf('(', nextParenIndex);\n      }\n\n      nextItem = str.substring(lastSplitIndex, nextSplitIndex);\n      if (nextItem) {\n        resultArray.push(nextItem);\n      }\n      lastSplitIndex = nextSplitIndex + splitterLength;\n    }\n\n    return resultArray;\n  }\n\n  function getThemedGradientCssText(gradientType, gradientVal, colorMapFn, intensity) {\n    var\n      gradientParams = splitOutsideParens(gradientVal, ','), // Split on commas not in parens\n      newGradientParams = gradientParams.map(mapParam);\n\n    function mapParam(param) {\n      var trimmedParam = param.trim(),\n        words = splitOutsideParens(trimmedParam, ' '),  // Split on spaces not in parens\n        rgba = colorUtil.getRgbaIfLegalColor(words[0]),\n        newRgba;\n\n      if (rgba) {\n        newRgba = colorMapFn({ prop: 'background-color', parsedVal: rgba }, intensity);\n        if (newRgba) {\n          words[0] = colorUtil.getColorString(newRgba);\n        }\n      }\n      return words.join(' ');\n    }\n\n    return gradientType + '(' + newGradientParams.join(',') + ')';\n  }\n\n  function createTextShadowRule(size, hue) {\n    // Create 3 shadows:\n    // - To the right\n    // - Below\n    // - Below AND right\n    var right = size.toFixed(2),\n      below = (size / 2).toFixed(2), // Stretched vertically only half as much -- just looks better that way\n      shadowValue =\n        createShadow(right, below) + ',' +\n        createShadow(right, 0) + ',' +\n        createShadow(0, below);\n\n    function createShadow(x, y) {\n      return x + 'px ' + y + 'px ' + hue;\n    }\n    return createRule('text-shadow', shadowValue);\n  }\n\n  /**\n   * Retrieve the CSS text required to apply the requested theme\n   * @param type\n   * @param intensity\n   * @returns {string}\n   */\n  function getThemeCssText(colorMapFn, intensity, textHue) {\n\n    var styleSheetText = '';\n\n    // Backgrounds\n    cachedStyleInfo.forEach(function(style) {\n      var newRgba,\n        newValue,\n        selector = style.rule.selectorText,\n        prop = style.value.prop;\n\n      if (prop === '-sc-gradient') {\n        newRgba = {};\n        prop = 'background';\n        newValue = getThemedGradientCssText(style.value.gradientType, style.value.gradientVal, colorMapFn, intensity);\n      }\n      else if (prop === 'color' || prop === 'background-color') {\n        newRgba = colorMapFn(style.value, intensity, textHue);\n        newValue = newRgba && colorUtil.getColorString(newRgba);\n      }\n      if (newValue) {\n        var important = style.value.important && selector !== ':link' && selector !== ':visited', // Don't let these UA rules override page's <a> rules\n          formFixes = '',\n          textShadow = '';\n        if (isButtonRule(selector)) {\n          // Don't alter buttons -- it will change it from a native button and the appearance will break\n          // color, background-color\n          formFixes = 'border:1px outset ButtonFace;border-radius:4px;';\n        }\n        if (newRgba.textShadow) {\n          // Sometimes we want to darken, so we create a tiny text shadow of the same color as the text\n          textShadow = createTextShadowRule(newRgba.textShadow, newValue);\n        }\n        styleSheetText += selector +\n          '{' + createRule(prop, newValue, important) + formFixes + textShadow + '}\\n';\n      }\n    });\n\n    return styleSheetText;\n  }\n\n  /**\n   * Deal with Chrome bugs where scrolled-off content doesn't get new background color\n   * Necessary on at least youtube.com and https://www.arlington.k12.ma.us/stratton/\n   */\n  function repaintPage() {\n    if (isPanelExpanded) {\n      isRepaintNeeded = true;\n    }\n    else {\n      inlineStyle.override(document.documentElement, ['transform', 'translateY(0.01px)']);\n      nativeGlobal.setTimeout(function () {\n        inlineStyle.restore(document.documentElement, 'transform');\n      }, REPAINT_MS);\n    }\n  }\n\n  /**\n   * The CSS background property is shorthand for applying many CSS background- related properties at once.\n   * This function extracts the color fro the background property.\n   * @param bgShorthand The background property value\n   * @returns {string}\n   */\n  function extractColorFromBgShorthand(bgShorthand) {\n    var lastIndexRgb = bgShorthand.lastIndexOf('rgb(');\n    if (lastIndexRgb < 0) {\n      bgShorthand.lastIndexOf('rgba(');\n    }\n    if (lastIndexRgb < 0) {\n      // Color is not rgb() or rgba() -- may be a color name such as 'white'.\n      // In most browsers, color name will be last.\n      // In Firefox, the color comes first\n      var possibleColors = bgShorthand.split(' ');\n      return possibleColors[platform.browser.isFirefox ? 0 : possibleColors.length - 1];\n    }\n    // Format = rgb(x,x,x) or rgba(x,x,x,x)\n    return bgShorthand.substr(lastIndexRgb).split(')')[0] + ')';\n  }\n\n  function getSignificantBgImageProperties(cssStyleDecl) {\n    var bgImagePropVal = cssStyleDecl['background-image'],\n      imageUrl,\n      gradient,\n      cssText = cssStyleDecl.cssText;\n\n    if (cssText.indexOf('background') < 0) {\n      return;  // Need some background property\n    }\n\n    imageUrl = getCssUrl(bgImagePropVal);\n    gradient = !imageUrl && getBackgroundGradient(bgImagePropVal);\n    if (gradient) {\n      return {\n        prop: '-sc-gradient',\n        important: cssStyleDecl.getPropertyPriority('background-image') === 'important',\n        gradientType: gradient && gradient[1],\n        gradientVal: gradient && gradient[2]\n      };\n    }\n\n    function getBackgroundGradient(propVal) {\n      if (propVal.indexOf('gradient') >= 0) {\n        return propVal.match(GRADIENT_REGEXP);\n      }\n    }\n\n    if (imageUrl) {\n      return {\n        prop: 'background-image',\n        important: cssStyleDecl.getPropertyPriority('background-image') === 'important',\n        imageUrl: imageUrl,\n        backgroundColor: cssStyleDecl.backgroundColor\n      };\n    }\n  }\n\n  function getCssUrl(propVal) {\n    if (propVal.indexOf('url(') >= 0) {\n      var match = propVal.match(URL_REGEXP);\n      return match && match[1];\n    }\n  }\n\n  function isButtonRule(selector) {\n    if (selector && (selector.lastIndexOf('button') >= 0 || selector.lastIndexOf('input') >= 0)) {\n      return selector.match(BUTTON_REGEXP);\n    }\n  }\n\n  /**\n   * Retrieve information about background colors if we care about them\n   * We don't care about transparent colors.\n   * @param cssStyleDecl\n   * @returns {{prop: string, parsedVal: object }}\n   */\n  function getSignificantBgColor(cssStyleDecl, selector) {\n    var bgStyle = cssStyleDecl.background,\n      colorString = extractColorFromBgShorthand(bgStyle) || cssStyleDecl.backgroundColor,\n      rgba = colorString && colorUtil.getRgba(colorString);\n\n    if (rgba) {\n      return {\n        prop: 'background-color',\n        selector: selector,\n        parsedVal: rgba,\n        important: cssStyleDecl.getPropertyPriority('background-color') === 'important'\n      };\n    }\n  }\n\n  /**\n   * Retrieve rgba information about foreground colors\n   * @param cssStyleDecl\n   * @returns {{prop: string, parsedVal: *}}\n   */\n  function getFgColor(cssStyleDecl, selector) {\n    var fgStyle = cssStyleDecl.color;\n    if (fgStyle && fgStyle !== 'inherit') {\n      return {\n        prop: 'color',\n        selector: selector,\n        parsedVal: colorUtil.getRgba(fgStyle),\n        important: cssStyleDecl.getPropertyPriority('color') === 'important',\n        contrastEnhancementDirection:\n          (function() {\n            var fgLuminosity = colorUtil.getLuminanceFromColorName(fgStyle);\n            if (fgLuminosity < 0.05) {\n              return -1;\n            }\n            if (fgLuminosity > 0.95) {\n              return 1;\n            }\n            // If we're directly on a dark background, we know the text must get lighter\n            var bgRgba = colorUtil.getRgba(cssStyleDecl.backgroundColor);\n            if (bgRgba && bgRgba.a > 0.2) {\n              return colorUtil.getLuminanceFromColorName(bgRgba) < 0.5 ? 1 : -1;\n            }\n          }())\n      };\n    }\n  }\n\n  // Theme name must exist in colorChoices\n  // Except for null, which means no theme\n  function getSanitizedThemeName(name) {\n    return name in colorChoices ? name : null;\n  }\n\n  // Theme power must be 0 - 1\n  function getSanitizedThemePower(power) {\n    if (power >= 0) {\n      return Math.min(power, 1);\n    }\n    return 1;\n  }\n\n  // If user specifies > 1 use white\n  function getSanitizedHue(hue) {\n    if (!hue || hue < 0 || hue > MAX_USER_SPECIFIED_HUE) {\n      return MAX_USER_SPECIFIED_HUE;\n    }\n    return hue;\n  }\n\n  function init(isPanelOpen) {\n    if (isPanelOpen) {\n      isPanelExpanded = true;\n    }\n\n    if (isInitialized) {\n      return;\n    }\n    isInitialized = true;\n\n    originalBodyBackgroundColor = colorUtil.getDocumentBackgroundColor();\n\n    // TODO remove when no longer necessary\n    shouldRepaintToEnsureFullCoverage = platform.browser.isChrome && platform.browser.version < 48;\n\n    pref.defineHandler('themeName', getSanitizedThemeName);\n    pref.defineHandler('themePower', getSanitizedThemePower);\n    pref.defineHandler('themeTextHue', getSanitizedHue);\n    pref.bindListener('themeName', onThemeChange);\n    pref.bindListener('themePower', onThemeChange);\n    pref.bindListener('themeTextHue', onThemeChange);\n    if (typeof pref.get('themePower') === 'undefined') {\n      pref.set('themePower', DEFAULT_INTENSITY);\n    }\n    if (typeof pref.get('themeTextHue') === 'undefined') {\n      pref.set('themeTextHue', MAX_USER_SPECIFIED_HUE); // Use white text by default\n    }\n\n    customTheme.init();\n\n    function onPanelExpand() {\n      isPanelExpanded = true;\n    }\n\n    function onPanelShrink() {\n      isPanelExpanded = false;\n      if (isRepaintNeeded) {\n        repaintPage();\n        isRepaintNeeded = false;\n      }\n    }\n\n    events.on('bp/did-expand', onPanelExpand);\n    events.on('bp/did-shrink', onPanelShrink);\n  }\n\n  return {\n    init: init\n  };\n});\n\n","\nsitecues.define(\"theme\", function(){});\n"]}